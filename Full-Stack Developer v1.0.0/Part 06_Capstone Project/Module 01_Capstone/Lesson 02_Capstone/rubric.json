{
  "id": 2682,
  "project_id": 649,
  "upload_types": [
    "repo",
    "zip"
  ],
  "file_filter_regex": "\\A(?!(((.*/)?(__MACOSX|\\.git|node_modules|bower_components|jspm_packages|\\.idea|build|.ipynb_checkpoints|\\.Trash-0|logs)(\\Z|/))))((.*\\.(js|css|py|html|htm|txt|md|markdown|sql|swift|java|ts|gradle|xml|rst|yml|yaml|rmd|pdf|docx|h|H|hh|hxx|h\\+\\+|c|C|cc|cpp|cxx|c\\+\\+)\\Z)|((.*/)?(README|Readme|readme|Makefile)\\Z))",
  "nomination_eligible": false,
  "stand_out": "- Create a frontend that works with your API - including a login that will redirect the user to Auth0. Let your work come to life on the screen!!\n- Implement authorization with a tool other than email or Google. Add more options for your users’ authentication flow. \n- Deploy your application and database on AWS. Checkout this [link](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/TUT_WebAppWithRDS.html) and this for [Postgres](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_GettingStarted.CreatingConnecting.PostgreSQL.html) to get started. ",
  "hide_criteria": false,
  "created_at": "2019-08-29T18:49:59.642Z",
  "updated_at": "2020-05-10T08:36:20.447Z",
  "hashtag": "",
  "max_upload_size_mb": 500,
  "estimated_sla": null,
  "project_assistant_enabled": false,
  "checkmate_enabled": false,
  "checkmate_metadata": null,
  "available_for_cert_project": false,
  "classroom_node_id": 922008,
  "classroom_project_key": "302f4d89-5031-418b-a368-6001ed705a62",
  "language": "en-us",
  "ndkeys": [
    "nd004-beta",
    "nd0044",
    "nd0044-cn",
    "nd0044-ent",
    "nd0044-connect"
  ],
  "coursekeys": [],
  "sections": [
    {
      "id": 5777,
      "name": "Data Modeling",
      "created_at": "2019-09-25T17:26:50.494Z",
      "updated_at": "2019-09-25T17:28:40.151Z",
      "deleted_at": null,
      "position": 0,
      "rubric_id": 2682,
      "rubric_items": [
        {
          "id": 16556,
          "section_id": 5777,
          "passed_description": "- Use of correct data types for fields\n- Use of primary and optional foreign key ids \n",
          "exceeded_description": null,
          "created_at": "2019-09-25T17:28:40.354Z",
          "updated_at": "2019-09-25T17:30:45.737Z",
          "deleted_at": null,
          "optional": false,
          "position": 0,
          "criteria": "Architect relational database models in Python",
          "exceedable": false
        },
        {
          "id": 16557,
          "section_id": 5777,
          "passed_description": "- Does not use raw SQL or only where there are not SQLAlchemy equivalent expressions\n- Correctly formats SQLAlchemy to define models\n- Creates methods to serialize model data and helper methods to simplify API behavior such as insert, update and delete. \n",
          "exceeded_description": null,
          "created_at": "2019-09-25T17:30:46.354Z",
          "updated_at": "2019-09-25T17:31:56.023Z",
          "deleted_at": null,
          "optional": false,
          "position": 1,
          "criteria": "Utilize SQLAlchemy to conduct database queries",
          "exceedable": false
        }
      ]
    },
    {
      "id": 5778,
      "name": "API Architecture and Testing ",
      "created_at": "2019-09-25T17:31:56.297Z",
      "updated_at": "2019-09-25T17:32:04.111Z",
      "deleted_at": null,
      "position": 1,
      "rubric_id": 2682,
      "rubric_items": [
        {
          "id": 16558,
          "section_id": 5778,
          "passed_description": "- RESTful principles are followed throughout the project, including appropriate naming of endpoints, use of HTTP methods GET, POST, and DELETE\n- Routes perform CRUD operations\n",
          "exceeded_description": null,
          "created_at": "2019-09-25T17:32:04.327Z",
          "updated_at": "2019-09-25T17:32:40.839Z",
          "deleted_at": null,
          "optional": false,
          "position": 0,
          "criteria": "Follow RESTful principles of API development",
          "exceedable": false
        },
        {
          "id": 16559,
          "section_id": 5778,
          "passed_description": "- Specifies endpoints and behavior for at least:\n  - Two GET requests\n  - One POST request\n  - One PATCH request\n  - One DELETE request\n- Utilize  the ```@app.errorhandler``` decorator to format error responses as JSON objects for at least four different status codes\n",
          "exceeded_description": null,
          "created_at": "2019-09-25T17:32:41.166Z",
          "updated_at": "2019-09-25T17:33:31.409Z",
          "deleted_at": null,
          "optional": false,
          "position": 1,
          "criteria": "Structure endpoints to respond to four HTTP methods, including error handling",
          "exceedable": false
        },
        {
          "id": 16560,
          "section_id": 5778,
          "passed_description": "- Project includes a custom @requires_auth decorator that:\n  - get the Authorization header from the request\n  - Decode and verify the JWT using the Auth0 secret\n  - take an argument to describe the action\n   - i.e. @require_auth(‘create:drink’)\n  - raise an error if:\n   - the token is expired\n   - the claims are invalid\n   - the token is invalid\n   - the JWT doesn’t contain the proper action\n- Project includes at least two different roles that have distinct permissions for actions. These roles and permissions are clearly defined in the project README. Students can reference the Casting Agency Specs in the Specifications section of this rubric as an example. \n",
          "exceeded_description": null,
          "created_at": "2019-09-25T17:33:31.606Z",
          "updated_at": "2019-09-25T17:35:17.505Z",
          "deleted_at": null,
          "optional": false,
          "position": 2,
          "criteria": "Enable Role Based Authentication and roles-based access control (RBAC) in a Flask application",
          "exceedable": false
        },
        {
          "id": 16561,
          "section_id": 5778,
          "passed_description": "- Includes at least one test for expected success and error behavior for each endpoint using the unittest library\n- Includes tests demonstrating role-based access control, at least two per role. \n",
          "exceeded_description": null,
          "created_at": "2019-09-25T17:35:17.744Z",
          "updated_at": "2019-09-25T17:35:46.369Z",
          "deleted_at": null,
          "optional": false,
          "position": 3,
          "criteria": "Demonstrate validity of API behavior ",
          "exceedable": false
        }
      ]
    },
    {
      "id": 5779,
      "name": "Third-Party Authentication",
      "created_at": "2019-09-25T17:35:46.548Z",
      "updated_at": "2019-09-25T17:35:59.536Z",
      "deleted_at": null,
      "position": 2,
      "rubric_id": 2682,
      "rubric_items": [
        {
          "id": 16562,
          "section_id": 5779,
          "passed_description": "Auth0 is set up and running at the time of submission.  All required configuration settings are included in a bash file which export:\n  - The Auth0 Domain Name\n  - The JWT code signing secret\n  - The Auth0 Client ID\n",
          "exceeded_description": null,
          "created_at": "2019-09-25T17:35:59.813Z",
          "updated_at": "2019-09-25T17:36:35.998Z",
          "deleted_at": null,
          "optional": false,
          "position": 0,
          "criteria": "Configure third-party authentication systems ",
          "exceedable": false
        },
        {
          "id": 16563,
          "section_id": 5779,
          "passed_description": "- Roles and permission tables are configured in Auth0. \n- Access of roles is limited. Includes at least two different roles with different permissions.\n- The JWT includes the RBAC permission claims.",
          "exceeded_description": null,
          "created_at": "2019-09-25T17:36:36.210Z",
          "updated_at": "2019-09-25T17:37:08.764Z",
          "deleted_at": null,
          "optional": false,
          "position": 1,
          "criteria": "Configure roles-based access control (RBAC) ",
          "exceedable": false
        }
      ]
    },
    {
      "id": 5780,
      "name": "Deployment",
      "created_at": "2019-09-25T17:37:08.994Z",
      "updated_at": "2019-09-25T17:37:12.878Z",
      "deleted_at": null,
      "position": 3,
      "rubric_id": 2682,
      "rubric_items": [
        {
          "id": 16564,
          "section_id": 5780,
          "passed_description": "- API is hosted live via Heroku \n- URL is provided in project README\n- API can be accessed by URL and requires authentication\n",
          "exceeded_description": null,
          "created_at": "2019-09-25T17:37:13.145Z",
          "updated_at": "2019-09-25T17:37:40.979Z",
          "deleted_at": null,
          "optional": false,
          "position": 0,
          "criteria": "Application is hosted live at student provided URL",
          "exceedable": false
        },
        {
          "id": 16565,
          "section_id": 5780,
          "passed_description": "- Instructions are provided in README for setting up authentication so reviewers can test endpoints at live application endpoint",
          "exceeded_description": null,
          "created_at": "2019-09-25T17:37:41.226Z",
          "updated_at": "2019-09-25T17:38:26.785Z",
          "deleted_at": null,
          "optional": false,
          "position": 1,
          "criteria": "Includes instructions to set up authentication ",
          "exceedable": false
        }
      ]
    },
    {
      "id": 5781,
      "name": "Code Quality & Documentation",
      "created_at": "2019-09-25T17:38:27.018Z",
      "updated_at": "2019-09-25T17:38:31.385Z",
      "deleted_at": null,
      "position": 4,
      "rubric_id": 2682,
      "rubric_items": [
        {
          "id": 16566,
          "section_id": 5781,
          "passed_description": "The code adheres to the [PEP 8 style guide](https://www.python.org/dev/peps/pep-0008/) and follows common best practices, including:\n  - [Variable and function names are clear](https://www.python.org/dev/peps/pep-0008/#prescriptive-naming-conventions).\n  - Endpoints are logically named.\n  - Code is [commented appropriately](https://www.python.org/dev/peps/pep-0008/#comments).\n  - Secrets are stored as environment variables.\n",
          "exceeded_description": null,
          "created_at": "2019-09-25T17:38:31.927Z",
          "updated_at": "2019-09-25T17:40:14.320Z",
          "deleted_at": null,
          "optional": false,
          "position": 0,
          "criteria": "Write clear, concise and well documented code",
          "exceedable": false
        },
        {
          "id": 16567,
          "section_id": 5781,
          "passed_description": "- Application can be run with no errors and responds with the expected results. \n- API test suite for endpoints and RBAC behavior runs without errors or failures\n",
          "exceeded_description": null,
          "created_at": "2019-09-25T17:40:14.555Z",
          "updated_at": "2019-09-25T17:40:42.355Z",
          "deleted_at": null,
          "optional": false,
          "position": 1,
          "criteria": "Project demonstrates reliability and testability ",
          "exceedable": false
        },
        {
          "id": 16568,
          "section_id": 5781,
          "passed_description": "- Variable names are logical, code is DRY and well-commented where code complexity makes them useful",
          "exceeded_description": null,
          "created_at": "2019-09-25T17:40:42.690Z",
          "updated_at": "2019-09-25T17:40:57.438Z",
          "deleted_at": null,
          "optional": false,
          "position": 2,
          "criteria": "Project demonstrates maintainability",
          "exceedable": false
        },
        {
          "id": 16569,
          "section_id": 5781,
          "passed_description": "- Project includes an informative README\n  - Motivation for project\n  - Project dependencies, local development and hosting instructions,\n  - Detailed instructions for scripts to install any project dependencies, and to run the development server.\n  - Documentation of API behavior and RBAC controls \n",
          "exceeded_description": null,
          "created_at": "2019-09-25T17:40:57.747Z",
          "updated_at": "2019-09-25T17:43:04.193Z",
          "deleted_at": null,
          "optional": false,
          "position": 3,
          "criteria": "Project includes thorough documentation",
          "exceedable": false
        }
      ]
    }
  ],
  "project": {
    "id": 649,
    "name": "FSND - Capstone",
    "nanodegree_key": "nd004",
    "is_cert_project": false,
    "audit_project_id": null,
    "hashtag": null,
    "audit_rubric_id": null,
    "entitlement_required": false,
    "is_career": false,
    "recruitment_family_id": 12,
    "created_at": "2019-09-26T03:58:16.118Z",
    "updated_at": "2020-06-01T01:12:17.686Z",
    "price": "8.0",
    "ungradeable_price": "3.0",
    "audit_price": null
  }
}