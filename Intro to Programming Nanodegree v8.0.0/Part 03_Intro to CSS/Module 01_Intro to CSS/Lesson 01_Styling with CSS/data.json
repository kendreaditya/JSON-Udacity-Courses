{
  "data": {
    "lesson": {
      "id": 817305,
      "key": "66dcb847-5017-4a0c-9f19-b4b392b09c79",
      "title": "Styling with CSS",
      "semantic_type": "Lesson",
      "is_public": true,
      "version": "1.0.0",
      "locale": "en-us",
      "summary": "Learn how to add style to your website by using Cascading Style Sheets (CSS).",
      "lesson_type": "Classroom",
      "display_workspace_project_only": false,
      "resources": {
        "files": [
          {
            "name": "Videos Zip File",
            "uri": "https://zips.udacity-data.com/66dcb847-5017-4a0c-9f19-b4b392b09c79/817305/1549159613108/Styling+with+CSS+Videos.zip"
          },
          {
            "name": "Transcripts Zip File",
            "uri": "https://zips.udacity-data.com/66dcb847-5017-4a0c-9f19-b4b392b09c79/817305/1549159608042/Styling+with+CSS+Subtitles.zip"
          }
        ],
        "google_plus_link": null,
        "career_resource_center_link": null,
        "coaching_appointments_link": null,
        "office_hours_link": null,
        "aws_provisioning_link": null
      },
      "project": null,
      "lab": null,
      "concepts": [
        {
          "id": 408593,
          "key": "12f646a4-2e45-4249-87ad-cf66e1d29713",
          "title": "Starting with style",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "12f646a4-2e45-4249-87ad-cf66e1d29713",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 675081,
              "key": "341921a0-1da4-4176-b906-d9832757e242",
              "title": "Intro to CSS: Starting with CSS",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "d__bofqHJdY",
                "china_cdn_id": "d__bofqHJdY.mp4"
              }
            },
            {
              "id": 438849,
              "key": "08be7e98-5660-4721-8d74-cbd83592823e",
              "title": "What does CSS do?",
              "semantic_type": "CheckboxQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "08be7e98-5660-4721-8d74-cbd83592823e",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "Which of these things do you think you will do using CSS?",
                "answers": [
                  {
                    "id": "a1508789630414",
                    "text": "Add new **paragraphs** to a web page.",
                    "is_correct": false
                  },
                  {
                    "id": "a1508789643371",
                    "text": "Change the **color** of text on a web page.",
                    "is_correct": true
                  },
                  {
                    "id": "a1508789644006",
                    "text": "Insert **images** into a web page.",
                    "is_correct": false
                  },
                  {
                    "id": "a1508789644609",
                    "text": "Paint your **trousers** purple.",
                    "is_correct": false
                  },
                  {
                    "id": "a1508789645415",
                    "text": "Change the **layout** of a web page.",
                    "is_correct": true
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 408595,
          "key": "e9239c61-66f1-48dc-9028-58db13311a91",
          "title": "Developer tools",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "e9239c61-66f1-48dc-9028-58db13311a91",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 675082,
              "key": "fc3e1df0-34e3-4bb0-b46a-aa273bc93e3f",
              "title": "Intro to CSS: Developer Tools",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "I5wJzR60GwQ",
                "china_cdn_id": "I5wJzR60GwQ.mp4"
              }
            },
            {
              "id": 630380,
              "key": "6173dfcb-23ba-4605-ad62-7879ad6eece0",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## How to access Developer Tools in your browser\n\n* **Google Chrome**\n 1. Open the Chrome menu at the top right of the browser window (the three vertical dots), select and select `Tools` > `Developer Tools`, ***OR***\n 2. Right-click on any page element and select `Inspect`.\n* **Safari**\n 1. From the menu bar, select `Safari` > `Preferences`, and click `Advanced`.\n 2. At the bottom of the box, check the \"Show Develop menu in menu bar\" checkbox. \n 3. Choose `Develop` > `Show Web Inspector`.\n* **Mozilla Firefox**\n 1. From the menu bar, select `Tools` > `Web Developer` > `Browser Console`, ***OR***\n 2. Press `Ctrl`+`Shift`+`J` (`Cmd`+`Shift`+`J` on Mac).",
              "instructor_notes": ""
            },
            {
              "id": 438857,
              "key": "31489619-0110-429d-9aad-d6fb081375ad",
              "title": "Developer Tools",
              "semantic_type": "CheckboxQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "31489619-0110-429d-9aad-d6fb081375ad",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "Go to https://en.wikipedia.org/wiki/CSS and use Developer Tools to see the HTML elements. Which elements can you find inside the `head` element?\n",
                "answers": [
                  {
                    "id": "a1508792019440",
                    "text": "meta",
                    "is_correct": true
                  },
                  {
                    "id": "a1508792037996",
                    "text": "title",
                    "is_correct": true
                  },
                  {
                    "id": "a1508792038728",
                    "text": "style",
                    "is_correct": true
                  },
                  {
                    "id": "a1508792039373",
                    "text": "div",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 438859,
              "key": "2f7e45f4-b95d-4b84-b28e-2fb91d0a826b",
              "title": "Elements versus Source",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "2f7e45f4-b95d-4b84-b28e-2fb91d0a826b",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "Open up one of your own HTML pages in the browser (like your `notes.html` page), then use Developer Tools to inspect it. Can you find any differences in the code between what you see in the Elements tab (or Inspector in Firefox), and what you see in your text editor?",
                "answers": [
                  {
                    "id": "a1508792173258",
                    "text": "Yes, there are differences.",
                    "is_correct": true
                  },
                  {
                    "id": "a1508792192337",
                    "text": "No, they are exactly the same.",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 438862,
              "key": "8d275c04-d2c3-45b6-abe3-dc255030359e",
              "title": "Closing Tags",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "8d275c04-d2c3-45b6-abe3-dc255030359e",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "Find a place in your HTML code where you did not use an optional closing tag, such as a `</li>` or `</p>` tag on a list item or paragraph. (Or, if you've been always using them, try removing them.) Load the page up in your browser, and inspect it using Developer Tools. Which of the following things happens?",
                "answers": [
                  {
                    "id": "a1508792286375",
                    "text": "I get an error telling me to use closing tags.",
                    "is_correct": false
                  },
                  {
                    "id": "a1508792304566",
                    "text": "The page displays a spinning wheel that never goes away.",
                    "is_correct": false
                  },
                  {
                    "id": "a1508792305233",
                    "text": "The browser shows the closing tag even though I didn't write one.",
                    "is_correct": true
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 408596,
          "key": "9853b8ab-94be-429c-b059-853e180a8138",
          "title": "Text to trees",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "9853b8ab-94be-429c-b059-853e180a8138",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 675087,
              "key": "ca458f68-6abd-4be3-8255-2bc2af6f91b6",
              "title": "Intro to CSS: Text To Trees",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "ExM2TsRpXYk",
                "china_cdn_id": "ExM2TsRpXYk.mp4"
              }
            },
            {
              "id": 498508,
              "key": "46c2e304-6d4e-47ca-9d48-0e2655052447",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Quiz 1: _Hello_ world!\n\nUse this tree diagram for the quiz below.\n\n(As in Chrome Developer Tools, the **\"**quote marks**\"** just indicate a text element and aren't literally in the page.)",
              "instructor_notes": ""
            },
            {
              "id": 501535,
              "key": "9ae3755d-0c35-4cc7-8de7-d14f6b66b317",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "<svg id=\"diagramSvg\" xmlns=\"http://www.w3.org/2000/svg\" style=\"width: 200px; height: 200px;\">\n      <style id=\"stylesheet\">text {\n  text-anchor: middle;\n  font: 10pt monospace;\n}\n\nrect {\n  fill: #dddddd;\n}\n\nline {\n  stroke: black;\n  stroke-width: 2;\n}\n  </style>\n      <defs>\n        <marker id=\"arrowHead\" viewBox=\"-10 -5 10 10\" markerUnits=\"strokeWidth\" markerWidth=\"6\" markerHeight=\"5\" orient=\"auto\">\n          <path d=\"M -10 -5 L 0 0 L -10 5 z\"></path>\n        </marker>\n      </defs>\n      <g id=\"diagramGroup\"><rect x=\"61px\" y=\"0px\" width=\"76px\" height=\"55px\"></rect><text x=\"100px\" y=\"0px\"><tspan x=\"100\" dy=\"33.27777777777778\">p</tspan></text><rect x=\"19px\" y=\"72px\" width=\"76px\" height=\"55px\"></rect><text x=\"57px\" y=\"72px\"><tspan x=\"57\" dy=\"33.27777777777778\">em</tspan></text><line x1=\"87px\" y1=\"55px\" x2=\"57px\" y2=\"72px\" marker-end=\"url(#arrowHead)\"></line><rect x=\"103px\" y=\"72px\" width=\"76px\" height=\"55px\"></rect><text x=\"142px\" y=\"72px\"><tspan x=\"142\" dy=\"33.27777777777778\">\"world!\"</tspan></text><line x1=\"112px\" y1=\"55px\" x2=\"142px\" y2=\"72px\" marker-end=\"url(#arrowHead)\"></line><rect x=\"19px\" y=\"144px\" width=\"76px\" height=\"55px\"></rect><text x=\"57px\" y=\"144px\"><tspan x=\"57\" dy=\"33.27777777777778\">\"Hello\"</tspan></text><line x1=\"57px\" y1=\"127px\" x2=\"57px\" y2=\"144px\" marker-end=\"url(#arrowHead)\"></line></g>\n    </svg>\n\n<!-- Generated using http://jimblackler.net/treefun/index.html -->",
              "instructor_notes": ""
            },
            {
              "id": 501536,
              "key": "11f434d4-a8e4-4bc1-a4bc-51ad3dbf00ba",
              "title": "",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "11f434d4-a8e4-4bc1-a4bc-51ad3dbf00ba",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "Which of these pieces of HTML would produce the tree above?",
                "answers": [
                  {
                    "id": "a1515521665167",
                    "text": "`<p><em>Hello</em> world!</p>`",
                    "is_correct": true
                  },
                  {
                    "id": "a1515521822353",
                    "text": "`<p><em>Hello world!</em></p>`",
                    "is_correct": false
                  },
                  {
                    "id": "a1515521824048",
                    "text": "`<p>Hello <em>world!</em></p>`",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 501548,
              "key": "9139c69b-103b-4fdf-acb4-989f09574254",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Quiz 2: Woo hoo\n\nUse this tree diagram for the quiz below.\n\n<svg id=\"diagramSvg\" xmlns=\"http://www.w3.org/2000/svg\" style=\"width: 300px; height: 200px;\">\n      <style id=\"stylesheet\">text {\n  text-anchor: middle;\n  font: 10pt monospace;\n}\n\nrect {\n  fill: #dddddd;\n}\n\nline {\n  stroke: black;\n  stroke-width: 2.0;\n}\n  </style>\n      <defs>\n        <marker id=\"arrowHead\" viewBox=\"-10 -5 10 10\" markerUnits=\"strokeWidth\" markerWidth=\"6\" markerHeight=\"5\" orient=\"auto\">\n          <path d=\"M -10 -5 L 0 0 L -10 5 z\"></path>\n        </marker>\n      </defs>\n      <g id=\"diagramGroup\"><rect x=\"96px\" y=\"0px\" width=\"107px\" height=\"38px\"></rect><text x=\"150px\" y=\"0px\"><tspan x=\"150\" dy=\"24.73076923076923\">html</tspan></text><rect x=\"96px\" y=\"53px\" width=\"107px\" height=\"38px\"></rect><text x=\"150px\" y=\"53px\"><tspan x=\"150\" dy=\"24.73076923076923\">head</tspan></text><line x1=\"150px\" y1=\"38px\" x2=\"150px\" y2=\"53px\" marker-end=\"url(#arrowHead)\"></line><rect x=\"96px\" y=\"107px\" width=\"107px\" height=\"38px\"></rect><text x=\"150px\" y=\"107px\"><tspan x=\"150\" dy=\"24.73076923076923\">title</tspan></text><line x1=\"150px\" y1=\"92px\" x2=\"150px\" y2=\"107px\" marker-end=\"url(#arrowHead)\"></line><rect x=\"96px\" y=\"161px\" width=\"107px\" height=\"38px\"></rect><text x=\"150px\" y=\"161px\"><tspan x=\"150\" dy=\"24.73076923076923\">\"Woo hoo!\"</tspan></text><line x1=\"150px\" y1=\"146px\" x2=\"150px\" y2=\"161px\" marker-end=\"url(#arrowHead)\"></line></g>\n    </svg>",
              "instructor_notes": ""
            },
            {
              "id": 501550,
              "key": "0faf22b6-3b30-4f9f-b20d-739c8958f310",
              "title": "",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "0faf22b6-3b30-4f9f-b20d-739c8958f310",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "Which of these pieces of HTML would produce the tree above?",
                "answers": [
                  {
                    "id": "a1515526768392",
                    "text": "`Woo hoo!<title><head><html></html></title></head>`",
                    "is_correct": false
                  },
                  {
                    "id": "a1515526793140",
                    "text": "`<html><title><head>Woo hoo!</head></title></html>`",
                    "is_correct": false
                  },
                  {
                    "id": "a1515526794681",
                    "text": "`<html><head><title>Woo hoo!</title></head></html>`",
                    "is_correct": true
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 408597,
          "key": "26e6d3a3-5949-414b-9c2b-048a44079746",
          "title": "Tree structure",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "26e6d3a3-5949-414b-9c2b-048a44079746",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 631576,
              "key": "a7a8123d-5adf-4e69-9af4-a37ae4cf8d90",
              "title": "Intro to CSS: Tree Structure",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "AZ4THCDB6ho",
                "china_cdn_id": "AZ4THCDB6ho.mp4"
              }
            },
            {
              "id": 630066,
              "key": "3b5fea87-bedc-4cb8-9540-320a77e51eef",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "### Quiz: Tree structure\n\nFor the quiz below, use these three diagrams:",
              "instructor_notes": ""
            },
            {
              "id": 630065,
              "key": "4e1d5bc8-26d0-4d1e-8b7a-fa99c3c53654",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/May/5b05d8d0_possibletrees/possibletrees.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/4e1d5bc8-26d0-4d1e-8b7a-fa99c3c53654",
              "caption": "",
              "alt": "First diagram: \"camel\" and \"llama\" have branches to \"chroma\", and \"chroma\" has a branch to \"drama\"'. Second diagram: \"moose\" has a branch to \"loose\" which has branches to \"Seuss\" and \"goose\". Third diagram: \"monkey\" has a branch to \"punky\" which has branches to \"funky\" and \"donkey\", and \"funky\" has a branch back to \"monkey\".",
              "width": 730,
              "height": 274,
              "instructor_notes": null
            },
            {
              "id": 630067,
              "key": "f0428d2a-8f8c-43b5-95fe-3a33766cdab0",
              "title": "",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "f0428d2a-8f8c-43b5-95fe-3a33766cdab0",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "Which of the diagrams above is a tree, according to the rules for trees that you've learned? Remember, the rules are:\n1. The tree starts with a single node, the **root**, which has no incoming branches.\n2. Each node can have **branches** to new nodes.\n3. Each (non-root) node can have **only one** incoming branch.",
                "answers": [
                  {
                    "id": "a1527109897288",
                    "text": "The first one, with the `camel`",
                    "is_correct": false
                  },
                  {
                    "id": "a1527109947674",
                    "text": "The second one, with the `moose`",
                    "is_correct": true
                  },
                  {
                    "id": "a1527109948660",
                    "text": "The third one, with the `monkey`",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 630068,
              "key": "657ae15b-4f32-4035-9a36-ec379bfe5a6d",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Quiz: Parent node\n\nFor the next quiz, use this diagram:\n\n<svg id=\"diagramSvg\" xmlns=\"http://www.w3.org/2000/svg\" style=\"width: 600px; height: 350px;\">\n      <style id=\"stylesheet\">text {\n  text-anchor: middle;\n  font: 10pt monospace;\n}\n\nrect {\n  fill: #dddddd;\n}\n\nline {\n  stroke: black;\n  stroke-width: 2.0;\n}</style>\n      <defs>\n        <marker id=\"arrowHead\" viewBox=\"-10 -5 10 10\" markerUnits=\"strokeWidth\" markerWidth=\"6\" markerHeight=\"5\" orient=\"auto\">\n          <path d=\"M -10 -5 L 0 0 L -10 5 z\"></path>\n        </marker>\n      </defs>\n      <g id=\"diagramGroup\"><rect x=\"146px\" y=\"0px\" width=\"103px\" height=\"41px\"></rect><text x=\"198px\" y=\"0px\"><tspan x=\"198\" dy=\"26.08823529411765\">html</tspan></text><rect x=\"0px\" y=\"61px\" width=\"103px\" height=\"41px\"></rect><text x=\"51px\" y=\"61px\"><tspan x=\"51\" dy=\"26.08823529411765\">head</tspan></text><line x1=\"181px\" y1=\"41px\" x2=\"51px\" y2=\"61px\" marker-end=\"url(#arrowHead)\"></line><rect x=\"293px\" y=\"61px\" width=\"103px\" height=\"41px\"></rect><text x=\"344px\" y=\"61px\"><tspan x=\"344\" dy=\"26.08823529411765\">body</tspan></text><line x1=\"215px\" y1=\"41px\" x2=\"344px\" y2=\"61px\" marker-end=\"url(#arrowHead)\"></line><rect x=\"0px\" y=\"123px\" width=\"103px\" height=\"41px\"></rect><text x=\"51px\" y=\"123px\"><tspan x=\"51\" dy=\"26.08823529411765\">title</tspan></text><line x1=\"51px\" y1=\"102px\" x2=\"51px\" y2=\"123px\" marker-end=\"url(#arrowHead)\"></line><rect x=\"293px\" y=\"123px\" width=\"103px\" height=\"41px\"></rect><text x=\"344px\" y=\"123px\"><tspan x=\"344\" dy=\"26.08823529411765\">ul</tspan></text><line x1=\"344px\" y1=\"102px\" x2=\"344px\" y2=\"123px\" marker-end=\"url(#arrowHead)\"></line><rect x=\"-1px\" y=\"185px\" width=\"103px\" height=\"41px\"></rect><text x=\"51px\" y=\"185px\"><tspan x=\"51\" dy=\"26.08823529411765\">\"Trees\"</tspan></text><line x1=\"51px\" y1=\"164px\" x2=\"51px\" y2=\"185px\" marker-end=\"url(#arrowHead)\"></line><rect x=\"134px\" y=\"185px\" width=\"103px\" height=\"41px\"></rect><text x=\"186px\" y=\"185px\"><tspan x=\"186\" dy=\"26.08823529411765\">li</tspan></text><line x1=\"318px\" y1=\"164px\" x2=\"186px\" y2=\"185px\" marker-end=\"url(#arrowHead)\"></line><rect x=\"248px\" y=\"185px\" width=\"103px\" height=\"41px\"></rect><text x=\"300px\" y=\"185px\"><tspan x=\"300\" dy=\"26.08823529411765\">li</tspan></text><line x1=\"344px\" y1=\"164px\" x2=\"300px\" y2=\"185px\" marker-end=\"url(#arrowHead)\"></line><rect x=\"496px\" y=\"185px\" width=\"103px\" height=\"41px\"></rect><text x=\"548px\" y=\"185px\"><tspan x=\"548\" dy=\"26.08823529411765\">li</tspan></text><line x1=\"370px\" y1=\"164px\" x2=\"548px\" y2=\"185px\" marker-end=\"url(#arrowHead)\"></line><rect x=\"0px\" y=\"247px\" width=\"103px\" height=\"41px\"></rect><text x=\"51px\" y=\"247px\"><tspan x=\"51\" dy=\"18.58823529411765\">\"This is a</tspan><tspan x=\"51\" dy=\"15\">tree part\"</tspan></text><line x1=\"186px\" y1=\"226px\" x2=\"51px\" y2=\"247px\" marker-end=\"url(#arrowHead)\"></line><rect x=\"134px\" y=\"247px\" width=\"103px\" height=\"41px\"></rect><text x=\"186px\" y=\"247px\"><tspan x=\"186\" dy=\"18.58823529411765\">\"I don't</tspan><tspan x=\"186\" dy=\"15\">know\"</tspan></text><line x1=\"274px\" y1=\"226px\" x2=\"186px\" y2=\"247px\" marker-end=\"url(#arrowHead)\"></line><rect x=\"248px\" y=\"247px\" width=\"103px\" height=\"41px\"></rect><text x=\"300px\" y=\"247px\"><tspan x=\"300\" dy=\"26.08823529411765\">em</tspan></text><line x1=\"300px\" y1=\"226px\" x2=\"300px\" y2=\"247px\" marker-end=\"url(#arrowHead)\"></line><rect x=\"362px\" y=\"247px\" width=\"103px\" height=\"41px\"></rect><text x=\"413px\" y=\"247px\"><tspan x=\"413\" dy=\"18.58823529411765\">\"part,</tspan><tspan x=\"413\" dy=\"15\">though\"</tspan></text><line x1=\"325px\" y1=\"226px\" x2=\"413px\" y2=\"247px\" marker-end=\"url(#arrowHead)\"></line><rect x=\"496px\" y=\"247px\" width=\"103px\" height=\"41px\"></rect><text x=\"548px\" y=\"247px\"><tspan x=\"548\" dy=\"18.58823529411765\">\"Maybe the</tspan><tspan x=\"548\" dy=\"15\">xylem\"</tspan></text><line x1=\"548px\" y1=\"226px\" x2=\"548px\" y2=\"247px\" marker-end=\"url(#arrowHead)\"></line><rect x=\"248px\" y=\"308px\" width=\"103px\" height=\"41px\"></rect><text x=\"300px\" y=\"308px\"><tspan x=\"300\" dy=\"26.08823529411765\">\"which\"</tspan></text><line x1=\"300px\" y1=\"288px\" x2=\"300px\" y2=\"308px\" marker-end=\"url(#arrowHead)\"></line></g>\n    </svg>",
              "instructor_notes": ""
            },
            {
              "id": 630069,
              "key": "9fb4117b-9ec4-4d23-bebc-b0478030b6fb",
              "title": "",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "9fb4117b-9ec4-4d23-bebc-b0478030b6fb",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "In the tree above, what kind of node is the parent of the `em` node?",
                "answers": [
                  {
                    "id": "a1527110572924",
                    "text": "`html`",
                    "is_correct": false
                  },
                  {
                    "id": "a1527110591932",
                    "text": "`\"which\"`",
                    "is_correct": false
                  },
                  {
                    "id": "a1527110592664",
                    "text": "`li`",
                    "is_correct": true
                  },
                  {
                    "id": "a1527110606583",
                    "text": "`\"I don't know\"`",
                    "is_correct": false
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 408598,
          "key": "5f821270-a894-40bf-ba87-86d8b078752f",
          "title": "Trees to boxes",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "5f821270-a894-40bf-ba87-86d8b078752f",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 664428,
              "key": "1872c487-2468-4664-980b-e9c9341769bf",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": " ",
              "instructor_notes": ""
            },
            {
              "id": 630434,
              "key": "ebd1924e-43d3-4e9f-b18d-405400fb3094",
              "title": "Intro to CSS: Trees To Boxes ",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "fB3gUCkS0TI",
                "china_cdn_id": "fB3gUCkS0TI.mp4"
              }
            },
            {
              "id": 630604,
              "key": "9566a8f2-d2fe-4308-ac90-cac962a701fc",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Example HTML and CSS\n\nHere's the HTML and CSS for the example shown in the middle of this video:\n\n```html\n<!DOCTYPE html>\n<html>\n  <head>\n    <title>Listy list</title>\n    <style>\n      p { color: red; }\n      ol { display: flex; }\n      li { margin: 20px; }\n    </style>\n  </head>\n  <body>\n    <p>These are some red red words.</p>\n    <ol>\n      <li>Apple apple berry berry sauce sauce sauce.<br>\n          Cook it on the stove and serve it to your boss.\n      <li>Betty bought a bit of butter,\n          but the butter's burning bitter.<br>\n      <li>Crisp cookies claim Charlie's cookout crown.<br>  Clever Clara\n          clocked the crows at <em>c</em> (clearly connivance!)\n      <li>Daring drivers drove down Devil's Ditch in Dodges.\n      <li>Evil eggs explode everywhere. Eww!\n    </ol>\n  </body>\n</html\n```\n",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 408600,
          "key": "ffbe6416-957e-4777-8ce9-e9767b687c1b",
          "title": "Styling HTML directly",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "ffbe6416-957e-4777-8ce9-e9767b687c1b",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 630433,
              "key": "1f52b8af-7736-4e3d-ba5c-01c7a0ad24cd",
              "title": "Intro to CSS: Styling HTML Directly",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "7jNe0CduTXI",
                "china_cdn_id": "7jNe0CduTXI.mp4"
              }
            },
            {
              "id": 652451,
              "key": "fb15dcc5-e39a-4352-a3c4-99afecdc470c",
              "title": "",
              "semantic_type": "MatchingQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "fb15dcc5-e39a-4352-a3c4-99afecdc470c",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "complex_prompt": {
                  "text": "In the video, Karl described two ways to apply style to HTML elements.\n\nThe first way is to use the `style` **attribute** to apply style directly to an HTML element.\n\nThe second way is to use the `style` **element** along with a _ruleset_.\n\nWhich of these is which?"
                },
                "concepts_label": "Code",
                "answers_label": "How is the style applied?",
                "concepts": [
                  {
                    "text": "```html\n<style>\n  p { color: blue; }\n</style>\n<p>I'm blue!</p>\n```",
                    "correct_answer": {
                      "id": "a1529114522257",
                      "text": "Uses the `style` **element**"
                    }
                  },
                  {
                    "text": "```html\n<p style=\"color: blue;\">I'm blue</p>\n```",
                    "correct_answer": {
                      "id": "a1529114798398",
                      "text": "Uses the `style` **attribute**"
                    }
                  }
                ],
                "answers": [
                  {
                    "id": "a1529114798398",
                    "text": "Uses the `style` **attribute**"
                  },
                  {
                    "id": "a1529114522257",
                    "text": "Uses the `style` **element**"
                  }
                ]
              }
            },
            {
              "id": 652514,
              "key": "af51df7a-db97-4091-a1f2-4f34c3bddf7c",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "By the way, when styles are applied directly to an HTML element using the `style` **attribute**, these are called **inline** styles.\n\nThe idea is that the style is being applied directly _in the same line_ as the HTML element that it is styling. (In contrast, when we use the `style` **element**, the style is separated—it's _not_ in the same line.)",
              "instructor_notes": ""
            },
            {
              "id": 652452,
              "key": "ea697f0a-378a-4d58-b4f4-5c7c8cb2cb03",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "The HTML in the workspace below has three paragraphs of text. Add a `style` attribute (an inline style) to each element to make it a different color.",
              "instructor_notes": ""
            },
            {
              "id": 652454,
              "key": "d146c2bb-5760-41db-b5b7-8d8a3aa753a2",
              "title": null,
              "semantic_type": "WorkspaceAtom",
              "is_public": true,
              "workspace_id": "viewe087d74e",
              "pool_id": "webterminal",
              "view_id": "e087d74e-19c1-4c0a-97b0-8517028a4ca5",
              "gpu_capable": false,
              "configuration": {
                "id": "reserved",
                "blueprint": {
                  "conf": {
                    "disk": null,
                    "openFiles": [
                      "/home/workspace/inline_style.html"
                    ],
                    "showFiles": false,
                    "allowClose": false,
                    "showEditor": true,
                    "allowSubmit": false,
                    "autoRefresh": true,
                    "previewFile": "/home/workspace/inline_style.html"
                  },
                  "kind": "html-live"
                },
                "workspaceId": "reserved"
              },
              "starter_files": null
            },
            {
              "id": 670948,
              "key": "af2a0714-eaac-4bcc-b525-d994a0774080",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "<div style=\"background-color: #a4e4f5;\">\n## ⚠️ Spoiler alert!\n\n**Our solution is below.** You'll learn more effectively if you give the exercise a strong effort before comparing your code with ours!\n</div>\n----",
              "instructor_notes": ""
            },
            {
              "id": 652455,
              "key": "3b5d08f9-a67d-4f71-b795-d9b2d5208060",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Solution\n\nHere's our code:\n\n```html\n<p style=\"color: red;\">Make me red!</p>\n<p style=\"color: green;\">Make me green!</p>\n<p style=\"color: blue;\">Make me blue!</p>\n```",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 652516,
          "key": "e0be4220-b5e2-4c12-b84c-5651edc104ea",
          "title": "Practice — Inline styles",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "e0be4220-b5e2-4c12-b84c-5651edc104ea",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 652517,
              "key": "fee74023-b6f2-4e48-8dc6-08e26f6057ff",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Practice — Inline styles",
              "instructor_notes": ""
            },
            {
              "id": 652520,
              "key": "3f997231-8e4c-4072-9357-0cb2192186a2",
              "title": "",
              "semantic_type": "MatchingQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "3f997231-8e4c-4072-9357-0cb2192186a2",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "complex_prompt": {
                  "text": "Remembering the correct syntax can be hard at first. For example, it may be hard to remember where to put quotes `\" \"` and where to use the `=` sign or the colon `:`. But with practice, this will get much easier (and eventually, automatic).\n\nHere are some different attempts at using _inline_ styles. Which use correct syntax?"
                },
                "concepts_label": "Code",
                "answers_label": "Correct or incorrect syntax?",
                "concepts": [
                  {
                    "text": "```html\n<p style=\"color: red;\">\n```",
                    "correct_answer": {
                      "id": "a1529171588184",
                      "text": "Correct syntax"
                    }
                  },
                  {
                    "text": "```html\n<li style=color: red;>\n```",
                    "correct_answer": {
                      "id": "a1529171610248",
                      "text": "Incorrect syntax"
                    }
                  },
                  {
                    "text": "```html\n<p style: \"color=red;\">\n```",
                    "correct_answer": {
                      "id": "a1529171616105",
                      "text": "Incorrect syntax"
                    }
                  },
                  {
                    "text": "```html\n<li style=\"color: red;\">\n```",
                    "correct_answer": {
                      "id": "a1529171624321",
                      "text": "Correct syntax"
                    }
                  }
                ],
                "answers": [
                  {
                    "id": "a1529171616105",
                    "text": "Incorrect syntax"
                  },
                  {
                    "id": "a1529171624321",
                    "text": "Correct syntax"
                  },
                  {
                    "id": "a1529171610248",
                    "text": "Incorrect syntax"
                  },
                  {
                    "id": "a1529171588184",
                    "text": "Correct syntax"
                  }
                ]
              }
            },
            {
              "id": 652521,
              "key": "e681cea4-9f37-4776-a208-85da2d39f920",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "In the workspace below, someone has been trying to apply the `text-align` property to their paragraph elements to make them centered. But they have made some syntax errors and the styles aren't being applied.\n\nCan you fix the mistakes so that all three paragraphs are centered?",
              "instructor_notes": ""
            },
            {
              "id": 652519,
              "key": "afb2f318-002d-4e3a-b621-54fb31c00511",
              "title": null,
              "semantic_type": "WorkspaceAtom",
              "is_public": true,
              "workspace_id": "view63a673d6",
              "pool_id": "webterminal",
              "view_id": "63a673d6-3ac4-42d1-9f60-2d8527b041a5",
              "gpu_capable": false,
              "configuration": {
                "id": "reserved",
                "blueprint": {
                  "conf": {
                    "disk": null,
                    "openFiles": [
                      "/home/workspace/inline_style_mistakes.html"
                    ],
                    "showFiles": false,
                    "allowClose": false,
                    "showEditor": true,
                    "allowSubmit": false,
                    "autoRefresh": true,
                    "previewFile": "/home/workspace/inline_style_mistakes.html"
                  },
                  "kind": "html-live"
                },
                "workspaceId": "reserved"
              },
              "starter_files": null
            },
            {
              "id": 670950,
              "key": "2d09ac0b-c284-4ef5-90f7-8d6fa488e303",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "<div style=\"background-color: #a4e4f5;\">\n## ⚠️ Spoiler alert!\n\n**Our solution is below.** You'll learn more effectively if you give the exercise a strong effort before comparing your code with ours!\n</div>\n----",
              "instructor_notes": ""
            },
            {
              "id": 664431,
              "key": "d966ea6a-80b6-46cf-97a9-df3dc409fe00",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Solution\n\n```html\n<p style=\"text-align: center;\">This is a haiku</p>\n<p style=\"text-align: center;\"> So I want each line centered</p>\n<p style=\"text-align: center;\">Let’s make it stylish</p>\n```\n\n**Note:** You may have noticed that the semicolon `;` at the end is optional—removing it does not seem to cause a problem. This is true if you only have one style applied to the element. If you want to add more styles, the semicolon must be used to separate them. For example:\n\n```html\n<p style=\"text-align:center; color:blue;\">This will be both centered and blue.</p>\n```",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 667784,
          "key": "e06d3910-dfac-40a2-b35e-b8d37ab4ad0c",
          "title": "Practice — Multiple styles",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "e06d3910-dfac-40a2-b35e-b8d37ab4ad0c",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 667785,
              "key": "d2d2b3e8-7bcb-464a-846f-9355af9bab5a",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Practice — Multiple styles\n\nOn the last page, we looked at how to style some text in blue:\n\n`color: blue;`\n\nAnd how to center the text:\n\n`text-align: center;`\n\nBut what if you wanted to do _both_ of these things at the same time? This turns out to be pretty easy. All you have to do is put one after the next. Make sure to use a semicolon `;` to indicate where one ends and the next begins:\n\n```html\n<p style=\"color: blue; text-align: center;\">Hello world!</p>\n```\n\nIn the workspace below, give this a try! We encourage you to try to type this from memory (referring back to the above example when you need to), rather than copying and pasting it into the workspace. The act of trying to type it in for yourself will help you build a stronger memory.",
              "instructor_notes": ""
            },
            {
              "id": 667786,
              "key": "07eaa4a5-341a-410b-8058-b7aacef8cbca",
              "title": null,
              "semantic_type": "WorkspaceAtom",
              "is_public": true,
              "workspace_id": "view67d135fa",
              "pool_id": "webterminal",
              "view_id": "67d135fa-3a85-4270-a476-6896743a0319",
              "gpu_capable": false,
              "configuration": {
                "id": "reserved",
                "blueprint": {
                  "conf": {
                    "disk": null,
                    "openFiles": [
                      "/home/workspace/multiple_styles.html"
                    ],
                    "showFiles": false,
                    "allowClose": false,
                    "showEditor": true,
                    "allowSubmit": false,
                    "autoRefresh": true,
                    "previewFile": "/home/workspace/multiple_styles.html"
                  },
                  "kind": "html-live"
                },
                "workspaceId": "reserved"
              },
              "starter_files": null
            }
          ]
        },
        {
          "id": 667813,
          "key": "e9d03388-8631-49d7-9526-51380f6008ee",
          "title": "Practice — Quotes or no quotes?",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "e9d03388-8631-49d7-9526-51380f6008ee",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 667815,
              "key": "c7e35bf9-b735-4ac3-aa39-c812bde5ba8f",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Practice — Quotes or no quotes?\n\nWhen we use the `style` attribute to create an **inline** style, you may have noticed that we use quotes:\n\n```html\n<p style=\"color:blue; text-align:center;\">Hello!</p>\n```\n\nIn fact, we seem to be using quotes whenever we have an **attribute value** (remember, the attribute _value_ is the part that comes after the `=` sign). For example, when we make a link, we put quotes around the value of the `href` attribute:\n\n```html\n<a href=\"https://www.udacity.com\">Udacity</a>\n```\n\nSo what's up with putting quotes around attribute values? Do we have to do this? Let's play with it and see what we can find out.\n\nIn the workspace below, try deleting the quotes and see what happens—then answer the questions that come after the workspace.",
              "instructor_notes": ""
            },
            {
              "id": 667816,
              "key": "194af158-4acf-45ae-9990-66f7b9a6bc89",
              "title": null,
              "semantic_type": "WorkspaceAtom",
              "is_public": true,
              "workspace_id": "view90b2bdab",
              "pool_id": "webterminal",
              "view_id": "90b2bdab-e1a4-445c-aded-90787c78ff28",
              "gpu_capable": false,
              "configuration": {
                "id": "reserved",
                "blueprint": {
                  "conf": {
                    "disk": null,
                    "openFiles": [
                      "/home/workspace/quotes_or_no_quotes.html"
                    ],
                    "showFiles": false,
                    "allowClose": false,
                    "showEditor": true,
                    "allowSubmit": false,
                    "autoRefresh": true,
                    "previewFile": "/home/workspace/quotes_or_no_quotes.html"
                  },
                  "kind": "html-live"
                },
                "workspaceId": "reserved"
              },
              "starter_files": null
            },
            {
              "id": 667821,
              "key": "9e11de52-ed7f-4849-b4e1-4a35638a0e80",
              "title": "",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "9e11de52-ed7f-4849-b4e1-4a35638a0e80",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "What happens when you delete the quotes? Does the code still work the same?",
                "answers": [
                  {
                    "id": "a1530290348399",
                    "text": "Yes—it still seems to work just fine.",
                    "is_correct": true
                  },
                  {
                    "id": "a1530290391542",
                    "text": "No—when I remove the quotes, the text is no longer blue or centered.",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 667823,
              "key": "5da3c5a1-a815-47f4-9094-6039867b820e",
              "title": "",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "5da3c5a1-a815-47f4-9094-6039867b820e",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "Now, try adding a space in between `color:blue;` and `text-align:center;`. Like this:\n\n```HTML\n <p style=color:blue; text-align:center;>Hello!</p>\n```\n\nWhat happens?",
                "answers": [
                  {
                    "id": "a1530290540457",
                    "text": "It still seems to work just fine.",
                    "is_correct": false
                  },
                  {
                    "id": "a1530290626489",
                    "text": "When I add the space, the text is still blue, but it's not centered anymore.",
                    "is_correct": true
                  },
                  {
                    "id": "a1530290638210",
                    "text": "When I add the space, the text is still centered, but it's not blue anymore.",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 667898,
              "key": "230362e7-c694-4c77-b0c0-542db5a49331",
              "title": "",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "230362e7-c694-4c77-b0c0-542db5a49331",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "You may also have noticed that as soon as you insert the space between `color:blue;` and `text-align:center;`, the workspace editor changes the syntax highlighting (specifically, it changes the color of `text-align:center`).\n\nTake a guess at what you think might be going on here.",
                "answers": [
                  {
                    "id": "a1530296363301",
                    "text": "Nothing is really going on; the color change doesn't mean anything.",
                    "is_correct": false
                  },
                  {
                    "id": "a1530296504023",
                    "text": "The editor thinks that `text-align:center;` is an attribute name (that's why it's the same color as `style`).",
                    "is_correct": true
                  },
                  {
                    "id": "a1530296534064",
                    "text": "The editor thinks that `text-align:center` is an attribute value.",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 667871,
              "key": "60b06d9f-f88b-44fa-8548-f37fe40fdbee",
              "title": "",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "60b06d9f-f88b-44fa-8548-f37fe40fdbee",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "Based on your experimentation, what seems to be true about quotes and attribute values?",
                "answers": [
                  {
                    "id": "a1530294178612",
                    "text": "The quotes indicate where an attribute value starts and stops, even if there are spaces inside it.",
                    "is_correct": true
                  },
                  {
                    "id": "a1530294232992",
                    "text": "You should never put spaces in attribute values, ever!",
                    "is_correct": false
                  },
                  {
                    "id": "a1530295579476",
                    "text": "You can never leave the quotes out—you _must_ always put quotes around attribute values or they will not work.",
                    "is_correct": false
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 652457,
          "key": "eb6aa21e-1cbb-44b1-b6ce-0d7500e061e7",
          "title": "Styling HTML separately",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "eb6aa21e-1cbb-44b1-b6ce-0d7500e061e7",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 652522,
              "key": "bc8d86d1-4a05-4b71-8bd4-3b15918c5363",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Styling HTML separately\n\nOK, so you've tried out _inline_ styles that use the `style` **attribute**; now let's look at how to apply styles using the `style` **element**.",
              "instructor_notes": ""
            },
            {
              "id": 652523,
              "key": "cf36729d-c030-4a1e-aeb2-0f236035377b",
              "title": "",
              "semantic_type": "MatchingQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "cf36729d-c030-4a1e-aeb2-0f236035377b",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "complex_prompt": {
                  "text": "Just to make sure it's fresh in your mind, which of these examples use inline `style` **attributes** and which use a separate `style` **element**?"
                },
                "concepts_label": "Code",
                "answers_label": "How is the style applied?",
                "concepts": [
                  {
                    "text": "```html\n<p style=\"text-align: center;\">I'm centered!</p>\n```",
                    "correct_answer": {
                      "id": "a1529173215592",
                      "text": "Inline `style` attribute"
                    }
                  },
                  {
                    "text": "```html\n<style>\n  p { text-align:center; }\n</style>\n<p>I'm centered!</p>\n```",
                    "correct_answer": {
                      "id": "a1529173336763",
                      "text": "Separate `style` element"
                    }
                  }
                ],
                "answers": [
                  {
                    "id": "a1529173215592",
                    "text": "Inline `style` attribute"
                  },
                  {
                    "id": "a1529173336763",
                    "text": "Separate `style` element"
                  }
                ]
              }
            },
            {
              "id": 652525,
              "key": "7c4b6b63-2e50-43e5-a482-b1f63cf115b0",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "In the workspace below, you'll find some `p` elements that have been centered using inline styles.\n\nRemove the three inline styles and, instead, use a single, separate `style` element to center all of the `p` elements.",
              "instructor_notes": ""
            },
            {
              "id": 652524,
              "key": "5c9308b1-60be-4020-bd01-f9dfc3071e71",
              "title": null,
              "semantic_type": "WorkspaceAtom",
              "is_public": true,
              "workspace_id": "view58f16b79",
              "pool_id": "webterminal",
              "view_id": "58f16b79-a5c0-428f-9662-bb5dbd2c5625",
              "gpu_capable": false,
              "configuration": {
                "id": "reserved",
                "blueprint": {
                  "conf": {
                    "disk": null,
                    "openFiles": [
                      "/home/workspace/styling_separately.html"
                    ],
                    "showFiles": false,
                    "allowClose": false,
                    "showEditor": true,
                    "allowSubmit": false,
                    "autoRefresh": true,
                    "previewFile": "/home/workspace/styling_separately.html"
                  },
                  "kind": "html-live"
                },
                "workspaceId": "reserved"
              },
              "starter_files": null
            },
            {
              "id": 670951,
              "key": "0497d599-644e-41b5-867e-00eb80035fc9",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "<div style=\"background-color: #a4e4f5;\">\n## ⚠️ Spoiler alert!\n\n**Our solution is below.** You'll learn more effectively if you give the exercise a strong effort before comparing your code with ours!\n</div>\n----",
              "instructor_notes": ""
            },
            {
              "id": 665677,
              "key": "314aeaea-5a95-4cc9-a132-d36df246914a",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Solution\n\n```html\n<style>\n  p { text-align: center; }\n</style>\n\n<p>This is a haiku</p>\n<p>So I want each line centered</p>\n<p>Let’s make it stylish</p>\n```",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 665658,
          "key": "04c8e1c5-dac2-4e8e-974c-3d61938d2bee",
          "title": "Practice — Styling HTML separately",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "04c8e1c5-dac2-4e8e-974c-3d61938d2bee",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 672431,
              "key": "8f76851a-331e-4b3e-8430-36505893a3a0",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Practice — Styling HTML separately",
              "instructor_notes": ""
            },
            {
              "id": 665796,
              "key": "b5fcd463-bbbf-4292-9a14-f35d7f6e0932",
              "title": "",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "b5fcd463-bbbf-4292-9a14-f35d7f6e0932",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "Here's something that may or may not be clear to you at this point:\n\nIs CSS its own separate language, or is it just part of the HTML language?",
                "answers": [
                  {
                    "id": "a1530037216688",
                    "text": "CSS is its own separate language, with its own unique syntax.",
                    "is_correct": true
                  },
                  {
                    "id": "a1530037302535",
                    "text": "CSS is just part of HTML and has the same syntax as HTML.",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 665877,
              "key": "f1773986-782e-405d-86ba-6d97aae274f7",
              "title": "",
              "semantic_type": "MatchingQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "f1773986-782e-405d-86ba-6d97aae274f7",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "complex_prompt": {
                  "text": "Here's some code that uses inline styling. This line of code has _both_ HTML and CSS in it.\n\n```html\n<p style=\"color: red;\">Hello!</p>\n```\nWe've chopped the line up into pieces, below. Which pieces are HTML and which are CSS?"
                },
                "concepts_label": "Code",
                "answers_label": "HTML or CSS?",
                "concepts": [
                  {
                    "text": "`<p`",
                    "correct_answer": {
                      "id": "a1530039399496",
                      "text": "HTML"
                    }
                  },
                  {
                    "text": "`style=\"`",
                    "correct_answer": {
                      "id": "a1530039564538",
                      "text": "HTML"
                    }
                  },
                  {
                    "text": "`color: red;`",
                    "correct_answer": {
                      "id": "a1530039572178",
                      "text": "CSS"
                    }
                  },
                  {
                    "text": "`\">Hello!</p>`",
                    "correct_answer": {
                      "id": "a1530039572899",
                      "text": "HTML"
                    }
                  }
                ],
                "answers": [
                  {
                    "id": "a1530039572899",
                    "text": "HTML"
                  },
                  {
                    "id": "a1530039564538",
                    "text": "HTML"
                  },
                  {
                    "id": "a1530039572178",
                    "text": "CSS"
                  },
                  {
                    "id": "a1530039399496",
                    "text": "HTML"
                  },
                  {
                    "id": "a1530039709786",
                    "text": "CSS"
                  }
                ]
              }
            },
            {
              "id": 665896,
              "key": "d41d6ab1-0784-40e9-8e81-1af9e5dbb173",
              "title": "",
              "semantic_type": "MatchingQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "d41d6ab1-0784-40e9-8e81-1af9e5dbb173",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "complex_prompt": {
                  "text": "Here's some code that uses separated styles:\n\n```html\n<style>\n  p { color:red; }\n</style>\n\n<p>Hello!</p>\n```\n\nAgain, this code is actually made up of two different languages. Which parts are HTML and which are CSS?"
                },
                "concepts_label": "Code",
                "answers_label": "HTML or CSS?",
                "concepts": [
                  {
                    "text": "`<style>`",
                    "correct_answer": {
                      "id": "a1530039909848",
                      "text": "HTML"
                    }
                  },
                  {
                    "text": "`p { color:red; }`",
                    "correct_answer": {
                      "id": "a1530040026912",
                      "text": "CSS"
                    }
                  },
                  {
                    "text": "`</style>`",
                    "correct_answer": {
                      "id": "a1530040039902",
                      "text": "HTML"
                    }
                  },
                  {
                    "text": "`<p>Hello!</p>`",
                    "correct_answer": {
                      "id": "a1530040064504",
                      "text": "HTML"
                    }
                  }
                ],
                "answers": [
                  {
                    "id": "a1530040076407",
                    "text": "CSS"
                  },
                  {
                    "id": "a1530039909848",
                    "text": "HTML"
                  },
                  {
                    "id": "a1530040026912",
                    "text": "CSS"
                  },
                  {
                    "id": "a1530040064504",
                    "text": "HTML"
                  },
                  {
                    "id": "a1530040039902",
                    "text": "HTML"
                  }
                ]
              }
            },
            {
              "id": 665903,
              "key": "54f9dcd5-8d3a-467c-b590-cb86bc04bb23",
              "title": "",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "54f9dcd5-8d3a-467c-b590-cb86bc04bb23",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "Suppose you want to use some CSS code to style your page, such as:\n\n`color: blue;`\n\nor\n\n`p { color:blue; }`\n\nWhere does the CSS code need to be placed in order for it to work?",
                "answers": [
                  {
                    "id": "a1530040129837",
                    "text": "Anywhere on the page!",
                    "is_correct": false
                  },
                  {
                    "id": "a1530040247292",
                    "text": "Inside the `body` element.",
                    "is_correct": false
                  },
                  {
                    "id": "a1530040261501",
                    "text": "Inside a `style` element or `style` attribute.",
                    "is_correct": true
                  }
                ]
              }
            },
            {
              "id": 665947,
              "key": "5cc97486-5637-421a-b828-25dfb10fa465",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "In the workspace below, you'll see that someone is trying to apply some styles to their page. They've tried to do both an inline style and a separated style, but neither are done correctly. Can you fix them?\n\nIt looks like they are _trying_ to do something like this:\n\n><p style=\"font-size:24pt; font-family:courier-new;\">I <em style=\"color:red\">love</em> CSS!</p>",
              "instructor_notes": ""
            },
            {
              "id": 665912,
              "key": "6ee21fbd-80ee-404e-b0e4-e523217aa7ae",
              "title": null,
              "semantic_type": "WorkspaceAtom",
              "is_public": true,
              "workspace_id": "viewa9d360be",
              "pool_id": "webterminal",
              "view_id": "a9d360be-04d7-4c6c-ac46-552ab8082f3a",
              "gpu_capable": false,
              "configuration": {
                "id": "reserved",
                "blueprint": {
                  "conf": {
                    "disk": null,
                    "openFiles": [
                      "/home/workspace/where_does_css_go.html"
                    ],
                    "showFiles": false,
                    "allowClose": false,
                    "showEditor": true,
                    "allowSubmit": false,
                    "autoRefresh": true,
                    "previewFile": "/home/workspace/where_does_css_go.html"
                  },
                  "kind": "html-live"
                },
                "workspaceId": "reserved"
              },
              "starter_files": null
            },
            {
              "id": 670952,
              "key": "0773c6b2-8d75-497a-8ab6-3103abd29267",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "<div style=\"background-color: #a4e4f5;\">\n## ⚠️ Spoiler alert!\n\n**Our solution is below.** You'll learn more effectively if you give the exercise a strong effort before comparing your code with ours!\n</div>\n----",
              "instructor_notes": ""
            },
            {
              "id": 665965,
              "key": "e3944c05-7f11-45be-ba84-51da77fbdbff",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Solution\n\n```html\n<style>\n  p { font-size: 24pt; }\n</style>\n\n<p>I <em style=\"color: red;\">love</em> CSS!</p>\n```\n\nAnother approach that would work here is to just place both of them inside the `style` element:\n\n```html\n<style>\n  p { font-size: 24pt; }\n  em { color: red; }\n</style>\n\n<p>I <em>love</em> CSS!</p>\n```",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 408601,
          "key": "7c6cc92e-ebb1-47a9-9a97-b55f57044c0d",
          "title": "CSS syntax",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "7c6cc92e-ebb1-47a9-9a97-b55f57044c0d",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 630432,
              "key": "59f46c0f-b572-44d2-b978-0a9fc7badebb",
              "title": "Intro to CSS: CSS Syntax",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "5LuhV8WNLc4",
                "china_cdn_id": "5LuhV8WNLc4.mp4"
              }
            },
            {
              "id": 498519,
              "key": "69fc9a4f-deed-4e1c-8d5f-cfe76b59e9a0",
              "title": "",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "69fc9a4f-deed-4e1c-8d5f-cfe76b59e9a0",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "Here's a piece of CSS code. How many **rulesets** are in this code?\n```css\np {\n    color: green;\n    margin: 20px;\n}\nol .dots {\n    outline: 1px dotted black;\n}\n```",
                "answers": [
                  {
                    "id": "a1515185675634",
                    "text": "One ruleset",
                    "is_correct": false
                  },
                  {
                    "id": "a1515185697970",
                    "text": "Two rulesets",
                    "is_correct": true
                  },
                  {
                    "id": "a1515185699975",
                    "text": "Three rulesets",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 498520,
              "key": "3302052c-57ea-42b6-8d6c-ad2026a26666",
              "title": "",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "3302052c-57ea-42b6-8d6c-ad2026a26666",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "Here's the same piece of CSS code. How many **declarations** are in this code?\n```\np {\n    color: green;\n    margin: 20px;\n}\nol .dots {\n    outline: 1px dotted black;\n}\n```",
                "answers": [
                  {
                    "id": "a1515185817603",
                    "text": "Two declarations",
                    "is_correct": false
                  },
                  {
                    "id": "a1515185843011",
                    "text": "Three declarations",
                    "is_correct": true
                  },
                  {
                    "id": "a1515185844077",
                    "text": "Four declarations",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 498522,
              "key": "195a637e-054f-495a-bb50-9dc356336a6d",
              "title": "",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "195a637e-054f-495a-bb50-9dc356336a6d",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "Which part of this CSS ruleset is the **selector**?\n```css\n.loud {\n    color: rgb(128, 255, 0);\n    background-color: rgb(255, 0, 128);\n}\n```",
                "answers": [
                  {
                    "id": "a1515185971502",
                    "text": "The word `.loud`",
                    "is_correct": true
                  },
                  {
                    "id": "a1515186000231",
                    "text": "The word `color`",
                    "is_correct": false
                  },
                  {
                    "id": "a1515186008897",
                    "text": "The word `rgb`",
                    "is_correct": false
                  },
                  {
                    "id": "a1515186018512",
                    "text": "The entire piece of code.",
                    "is_correct": false
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 408602,
          "key": "9faf757c-8182-4408-998d-709cfb065622",
          "title": "Selectors: Type",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "9faf757c-8182-4408-998d-709cfb065622",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 630431,
              "key": "54dc927d-d00e-4bd7-83e0-28dfc6f908ac",
              "title": "Intro to CSS: Selectors Type",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "i3lHUbFi7YI",
                "china_cdn_id": "i3lHUbFi7YI.mp4"
              }
            },
            {
              "id": 438877,
              "key": "2626eae7-e0d8-42dc-83a1-c5047c056681",
              "title": "Type Selectors",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "2626eae7-e0d8-42dc-83a1-c5047c056681",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "Using what you've learned about CSS selectors, which of the following is a CSS rule to make all `a` elements green?",
                "answers": [
                  {
                    "id": "a1508793267075",
                    "text": "`<a color=\"green\">Link</a>`",
                    "is_correct": false
                  },
                  {
                    "id": "a1508793294636",
                    "text": "`a { color: green; }`",
                    "is_correct": true
                  },
                  {
                    "id": "a1508793295280",
                    "text": "`color { a: green; }`",
                    "is_correct": false
                  },
                  {
                    "id": "a1508793295892",
                    "text": "`green { a: color; }`",
                    "is_correct": false
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 408603,
          "key": "5d6092dc-19d9-4c22-b763-3bceb7558200",
          "title": "Selectors: Class and ID",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "5d6092dc-19d9-4c22-b763-3bceb7558200",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 675084,
              "key": "9759e02d-6864-497c-af85-3a2bf4fa4f94",
              "title": "Intro to CSS: Selectors Classes And Ids",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "jR1m3gU-iBs",
                "china_cdn_id": "jR1m3gU-iBs.mp4"
              }
            },
            {
              "id": 438880,
              "key": "ed52c5d7-3697-45cb-8d29-9339c35c49ee",
              "title": "Selectors for classes",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "ed52c5d7-3697-45cb-8d29-9339c35c49ee",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "Let's say that we want to apply the style `width: 50%` to all elements with `class=\"narrow\"`. Which CSS rule will do this?\n",
                "answers": [
                  {
                    "id": "a1508794171237",
                    "text": "`narrow { width: 50%; }`",
                    "is_correct": false
                  },
                  {
                    "id": "a1508794205364",
                    "text": "`#narrow { width: 50%; }`",
                    "is_correct": false
                  },
                  {
                    "id": "a1508794206284",
                    "text": "`.narrow { width: 50%; }`",
                    "is_correct": true
                  },
                  {
                    "id": "a1508794207101",
                    "text": "`class=\"narrow\" { width: 50%; }`",
                    "is_correct": false
                  },
                  {
                    "id": "a1508794207820",
                    "text": "You can't; CSS doesn't know about HTML attributes such as `class`.",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 438881,
              "key": "389c20c8-db95-4402-8eb5-e1680c533ed2",
              "title": "Class and ID",
              "semantic_type": "CheckboxQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "389c20c8-db95-4402-8eb5-e1680c533ed2",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "Get out your Developer Tools again and take a look at [the main page of the English Wikipedia.](https://en.wikipedia.org/) Specifically, inspect the headlines for the sections, such as **\"In the news\"** and **\"From today's featured article\"**.\n\nWhich of these statements are true?",
                "answers": [
                  {
                    "id": "a1508795687055",
                    "text": "The headlines each consist of a `span` element inside a `h2` element.",
                    "is_correct": true
                  },
                  {
                    "id": "a1508795749445",
                    "text": "The `h2` elements have the `class` attribute `mw-headline`.",
                    "is_correct": false
                  },
                  {
                    "id": "a1508795750405",
                    "text": "The `span` elements have the `class` attribute `mw-headline`.",
                    "is_correct": true
                  },
                  {
                    "id": "a1508795751235",
                    "text": "The `span` elements have the `id` attribute `mw-headline`.",
                    "is_correct": false
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 408604,
          "key": "de744c11-a0e8-4f4a-bbb9-4a1731aa5cbe",
          "title": "Selectors: Combining",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "de744c11-a0e8-4f4a-bbb9-4a1731aa5cbe",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 630428,
              "key": "82d9d0bd-9049-4d91-81d4-28284d697164",
              "title": "Intro to CSS: Combining Selectors ",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "KDr6KAfhTOk",
                "china_cdn_id": "KDr6KAfhTOk.mp4"
              }
            },
            {
              "id": 671645,
              "key": "946a3b3f-fc44-438c-9f61-50bd40116090",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "### Learn more about selectors!\n\nWant to learn much more about selectors? Check out the [MDN documentation](https://developer.mozilla.org/en-US/docs/Learn/CSS/Introduction_to_CSS/Selectors).",
              "instructor_notes": ""
            },
            {
              "id": 438883,
              "key": "0fd2d05f-2c55-49c6-98b2-6504e93b083d",
              "title": "Combining selectors",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "0fd2d05f-2c55-49c6-98b2-6504e93b083d",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "Which of these pieces of CSS will apply to `span` elements inside `h2` elements?",
                "answers": [
                  {
                    "id": "a1508796261879",
                    "text": "`h2 span { color: green; }`",
                    "is_correct": true
                  },
                  {
                    "id": "a1508796288902",
                    "text": "`span h2 { color: green; }`",
                    "is_correct": false
                  },
                  {
                    "id": "a1508796290333",
                    "text": "`h2 { span { color: green; } }`",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 438884,
              "key": "bd88559f-ef81-4a5d-98ba-a7387d2f12f7",
              "title": "Selectors that don't match",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "bd88559f-ef81-4a5d-98ba-a7387d2f12f7",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "What do you think happens if the selector on a rule doesn't match any elements in the page? For instance, what if we have a rule such as `ul { color: blue; }`, but we don't have any `ul` elements?\n",
                "answers": [
                  {
                    "id": "a1508796465846",
                    "text": "This is an error and the page will not load.",
                    "is_correct": false
                  },
                  {
                    "id": "a1508796501093",
                    "text": "This is an error and the browser will display an error message.",
                    "is_correct": false
                  },
                  {
                    "id": "a1508796501829",
                    "text": "The rule will apply to all elements on the page.",
                    "is_correct": false
                  },
                  {
                    "id": "a1508796502797",
                    "text": "The rule will not do anything.",
                    "is_correct": true
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 408605,
          "key": "bff84905-f888-4ec7-8cdc-c6da4e116d5a",
          "title": "Vocabulary review",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "bff84905-f888-4ec7-8cdc-c6da4e116d5a",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": {
            "files": [
              {
                "name": "IPND Reference Sheet - CSS Vocabulary",
                "uri": "https://video.udacity-data.com/topher/2018/June/5b33f82c_ipnd-reference-sheet-css-vocabulary/ipnd-reference-sheet-css-vocabulary.pdf"
              }
            ],
            "google_plus_link": null,
            "career_resource_center_link": null,
            "coaching_appointments_link": null,
            "office_hours_link": null,
            "aws_provisioning_link": null
          },
          "atoms": [
            {
              "id": 629991,
              "key": "8f45dd0a-1eb2-465d-bc31-cec64c44a16e",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Vocabulary review\n\nHere are some important CSS terms that you've learned so far:\n\n* **DOM**, or Document Object Model, is a tree structure with a node for each HTML element, piece of text, image, and any other object in the web page.\n* **Selectors** are one part of the CSS ruleset. They indicate which HTML element(s) the rule is for.\n* **Declaration blocks** are the other part of the CSS ruleset, they say how the rule will modify the elements indicated by selectors.\n* CSS **rules** are composed of a selector followed by a declaration block.\n* **type** is the simplest kind of selector. It indicates the name of one type of HTML element (such as `em` or `li`).\n* **class** in HTML is an attribute that groups elements together that you want to have the same style.\n* **id** is an attribute that must be unique to a single element, used to identify it.\n\n**Download this review as a PDF by clicking on the `IPND Reference Sheet - CSS Vocabulary` link below!**\n",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 663278,
          "key": "6eb1c1fc-1503-4628-9200-dd3a1b7264a5",
          "title": "Selectors review",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "6eb1c1fc-1503-4628-9200-dd3a1b7264a5",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": {
            "files": [
              {
                "name": "IPND Reference Sheet - CSS Selectors",
                "uri": "https://video.udacity-data.com/topher/2018/June/5b33f861_ipnd-reference-sheet-css-selectors/ipnd-reference-sheet-css-selectors.pdf"
              }
            ],
            "google_plus_link": null,
            "career_resource_center_link": null,
            "coaching_appointments_link": null,
            "office_hours_link": null,
            "aws_provisioning_link": null
          },
          "atoms": [
            {
              "id": 663282,
              "key": "c0ac9216-57ac-4d07-8808-651da1b4059a",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# Selectors Review\n\nYou've now learned about three kind of CSS selectors: **type**, **class**, and **ID**! \n\n**Type** selectors are used to apply a style to a particular type of HTML element, like `h1` or `body`. Type selectors are written using just the type name.\n\n**Class** selectors are used to set the style for multiple HTML elements that have a particular value for the `class` attribute. You can name a class anything you want! Class selectors are written with a dot before the class: for elements such as `<p class=\"blue\">`, the class selector is `.blue`.\n\n**ID** selectors are used when the style is being applied to one HTML element, which has to have an `id` attribute. There can be only *one* element with a particular `id` on a page. You can also choose any name you want for an `id`, just like a `class`. ID selectors are written using a `#` sign: for an element such as `<div id=\"sidebar\">`, the `id` selector is `#sidebar`.\n\n**Download this review as a PDF by clicking on the `IPND Reference Sheet - CSS Selectors` link at the bottom of the page!**",
              "instructor_notes": ""
            },
            {
              "id": 663335,
              "key": "1279ded7-987f-4fd2-8b6d-50f0d06647d8",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "Use this HTML document to answer the quiz below.\n```html\n<html>\n<head>\n<style>\n.special {\n    color: purple;\n}\np {\n    font-style: italic;\n}\n#important-information {\n    font-weight: bold;\n}\n</style>\n</head>\n<body>\n\n<h1 class = \"special\">This header is special</h1>\n<p>A nice paragraph in italics.</p>\n<h1>This header isn't so special.</h1>\n<p>And this paragraph will be in italics too!</p>\n<p id = \"important-information\">This paragraph needs to be italicized and bolded!</p>\n\n</body>\n</html>\n\n```",
              "instructor_notes": ""
            },
            {
              "id": 663353,
              "key": "38029775-d65a-4c02-b79a-44d9e102e39b",
              "title": "",
              "semantic_type": "MatchingQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "38029775-d65a-4c02-b79a-44d9e102e39b",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "complex_prompt": {
                  "text": "Match the CSS selectors to the style elements they're used in."
                },
                "concepts_label": "CSS Selector",
                "answers_label": "Style Element",
                "concepts": [
                  {
                    "text": "ID selector",
                    "correct_answer": {
                      "id": "a1529614171731",
                      "text": "```html\n#important-information {\n    font-weight: bold;\n}\n```"
                    }
                  },
                  {
                    "text": "Type selector",
                    "correct_answer": {
                      "id": "a1529614766266",
                      "text": "```html\np {\n    font-style: italic;\n}\n```\n"
                    }
                  },
                  {
                    "text": "Class selector",
                    "correct_answer": {
                      "id": "a1529614769016",
                      "text": "```html\n.special {\n    color: purple;\n}\n```"
                    }
                  }
                ],
                "answers": [
                  {
                    "id": "a1529614171731",
                    "text": "```html\n#important-information {\n    font-weight: bold;\n}\n```"
                  },
                  {
                    "id": "a1529614766266",
                    "text": "```html\np {\n    font-style: italic;\n}\n```\n"
                  },
                  {
                    "id": "a1529614769016",
                    "text": "```html\n.special {\n    color: purple;\n}\n```"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 664499,
          "key": "e92364cd-2ee2-4279-a6d5-96ed8f9165bd",
          "title": "Practice — Selectors",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "e92364cd-2ee2-4279-a6d5-96ed8f9165bd",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 664500,
              "key": "23a437ac-859f-40d3-bcd3-86fc06cff04a",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Practice - Selectors",
              "instructor_notes": ""
            },
            {
              "id": 664521,
              "key": "d425f98f-bbd0-45ec-8e30-65ff50ed45d0",
              "title": "",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "d425f98f-bbd0-45ec-8e30-65ff50ed45d0",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "What does this CSS ruleset do?\n\n```\nli {\n    color: green;\n}\n```",
                "answers": [
                  {
                    "id": "a1529872713290",
                    "text": "Applies a style to **multiple** (but not all) `li` elements.",
                    "is_correct": false
                  },
                  {
                    "id": "a1529872851264",
                    "text": "Applies a style to **all** `li` elements on the page.",
                    "is_correct": true
                  },
                  {
                    "id": "a1529872926305",
                    "text": "Applies a style to a **single** `li` element.",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 664501,
              "key": "20f81566-62c6-4472-9062-b3b105bdd2f3",
              "title": "",
              "semantic_type": "MatchingQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "20f81566-62c6-4472-9062-b3b105bdd2f3",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "complex_prompt": {
                  "text": "Here's a CSS **ruleset**:\n\n```css\nli {\n    color: green;\n    margin:20px;\n}\n```\nCan you name each piece?"
                },
                "concepts_label": "CSS",
                "answers_label": "What is it?",
                "concepts": [
                  {
                    "text": "```css\nli\n```",
                    "correct_answer": {
                      "id": "a1529849224218",
                      "text": "selector"
                    }
                  },
                  {
                    "text": "```css\ncolor: green;\n```",
                    "correct_answer": {
                      "id": "a1529849385370",
                      "text": "declaration / rule "
                    }
                  },
                  {
                    "text": "```css\n{\n    color: green;\n    margin: 20px;\n}\n```",
                    "correct_answer": {
                      "id": "a1529849406218",
                      "text": "declaration block"
                    }
                  },
                  {
                    "text": "```css\ncolor\n```",
                    "correct_answer": {
                      "id": "a1529849426121",
                      "text": "property"
                    }
                  },
                  {
                    "text": "```css\ngreen\n```",
                    "correct_answer": {
                      "id": "a1529885408815",
                      "text": "value"
                    }
                  }
                ],
                "answers": [
                  {
                    "id": "a1529849406218",
                    "text": "declaration block"
                  },
                  {
                    "id": "a1529849426121",
                    "text": "property"
                  },
                  {
                    "id": "a1529849224218",
                    "text": "selector"
                  },
                  {
                    "id": "a1529885408815",
                    "text": "value"
                  },
                  {
                    "id": "a1529849385370",
                    "text": "declaration / rule "
                  }
                ]
              }
            },
            {
              "id": 664504,
              "key": "ece08811-3c0b-4fc2-901e-0cb1c4f992d9",
              "title": "",
              "semantic_type": "MatchingQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "ece08811-3c0b-4fc2-901e-0cb1c4f992d9",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "complex_prompt": {
                  "text": "We've talked about three kinds of selectors—**type**, **class**, and **id**.\n\nSuppose that you want to use these to style some paragraph `p` elements. Match each selector type with what you'd do with it."
                },
                "concepts_label": "To do this ...",
                "answers_label": "... what kind of selector would you use?",
                "concepts": [
                  {
                    "text": "To apply the same style to **all** `p` elements.",
                    "correct_answer": {
                      "id": "a1529849651359",
                      "text": "type"
                    }
                  },
                  {
                    "text": "To apply the same style to **multiple** (but not all) `p` elements.",
                    "correct_answer": {
                      "id": "a1529849739254",
                      "text": "class"
                    }
                  },
                  {
                    "text": "To apply a style to a **single** `p` element.",
                    "correct_answer": {
                      "id": "a1529849739887",
                      "text": "id"
                    }
                  }
                ],
                "answers": [
                  {
                    "id": "a1529849739887",
                    "text": "id"
                  },
                  {
                    "id": "a1529849651359",
                    "text": "type"
                  },
                  {
                    "id": "a1529849739254",
                    "text": "class"
                  }
                ]
              }
            },
            {
              "id": 664507,
              "key": "5be1a5f1-76ea-4cc3-bb69-2073d343748d",
              "title": "",
              "semantic_type": "MatchingQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "5be1a5f1-76ea-4cc3-bb69-2073d343748d",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "complex_prompt": {
                  "text": "Here's some code that uses an ID selector:\n\n```html\n<style>\n#introduction {\n  font-weight: bold;\n}\n</style>\n\n<p id=\"introduction\">Welcome to my page ...</p>\n```\n\nThis code can be divided into two parts. One part **defines the style** and the other part **applies the style** to an HTML element. Which is which?"
                },
                "concepts_label": "Code",
                "answers_label": "What does it do?",
                "concepts": [
                  {
                    "text": "```css\n#introduction {\n  font-weight: bold;\n}\n```",
                    "correct_answer": {
                      "id": "a1529850542696",
                      "text": "Defines the style"
                    }
                  },
                  {
                    "text": "```html\n<p id=\"introduction\">Welcome to my page ...</p>\n```",
                    "correct_answer": {
                      "id": "a1529851399049",
                      "text": "Applies the style"
                    }
                  }
                ],
                "answers": [
                  {
                    "id": "a1529851399049",
                    "text": "Applies the style"
                  },
                  {
                    "id": "a1529850542696",
                    "text": "Defines the style"
                  }
                ]
              }
            },
            {
              "id": 664508,
              "key": "7c16c180-2139-4005-a2e7-94440f54ca17",
              "title": "",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "7c16c180-2139-4005-a2e7-94440f54ca17",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "Here's some code:\n\n```html\n<style>\n.highlight {\n  background-color: yellow;\n  font-weight: bold;\n}\n</style>\n\n<h1 class=\"highlight\">I'm important!</h1>\n<h2 class=\"highlight\">As am I!</h2>\n<p class=\"highlight\">Me too!</p>\n```\n\nWhat is this code doing?",
                "answers": [
                  {
                    "id": "a1529851457250",
                    "text": "Using a single class selector to apply the same style to multiple HTML elements.",
                    "is_correct": true
                  },
                  {
                    "id": "a1529851724236",
                    "text": "Defining three different classes to be used on all `h1`, `h2` and `p` elements on the page.",
                    "is_correct": false
                  },
                  {
                    "id": "a1529851724955",
                    "text": "Combining selectors to specify styles for certain sub-categories of `h1`, `h2`, and `p` elements.",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 664526,
              "key": "a508ae71-c11c-4437-b971-66c11b00c4a3",
              "title": "",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "a508ae71-c11c-4437-b971-66c11b00c4a3",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "And here's some of the same code again:\n\n```html\n<p class=\"highlight\">I'm important!</p>\n```\n\nWhat kind of a thing is `class=\"highlight\"`?",
                "answers": [
                  {
                    "id": "a1529875792210",
                    "text": "An **attribute** of this `p` element.",
                    "is_correct": true
                  },
                  {
                    "id": "a1529875892240",
                    "text": "A style **rule**.",
                    "is_correct": false
                  },
                  {
                    "id": "a1529875902447",
                    "text": "A style **ruleset**.",
                    "is_correct": false
                  },
                  {
                    "id": "a1531246229465",
                    "text": "A **generic class**.",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 667676,
              "key": "612b0358-eba4-44d7-a76e-1e03c1c75803",
              "title": "",
              "semantic_type": "MatchingQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "612b0358-eba4-44d7-a76e-1e03c1c75803",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "complex_prompt": {
                  "text": "Here are a few different CSS rulesets. But the syntax is wrong on some of them. Can you spot the ones with syntax errors?"
                },
                "concepts_label": "Selector",
                "answers_label": "Correct or incorrect syntax?",
                "concepts": [
                  {
                    "text": "```html\nli {\n  font-size: 1.5em;\n  color: blue;\n}\n```",
                    "correct_answer": {
                      "id": "a1530226879079",
                      "text": "Correct syntax"
                    }
                  },
                  {
                    "text": "```html\nh1 {\n  font-size: 1.5em\n  color: blue;\n}\n```",
                    "correct_answer": {
                      "id": "a1530227067131",
                      "text": "Incorrect syntax"
                    }
                  },
                  {
                    "text": "```html\np {\n  text-align; center:\n}\n```",
                    "correct_answer": {
                      "id": "a1530227231699",
                      "text": "Incorrect syntax"
                    }
                  },
                  {
                    "text": "```html\nh2 {\n  text-align: center;\n}\n```",
                    "correct_answer": {
                      "id": "a1530227332330",
                      "text": "Correct syntax"
                    }
                  }
                ],
                "answers": [
                  {
                    "id": "a1530226879079",
                    "text": "Correct syntax"
                  },
                  {
                    "id": "a1530227332330",
                    "text": "Correct syntax"
                  },
                  {
                    "id": "a1530227231699",
                    "text": "Incorrect syntax"
                  },
                  {
                    "id": "a1530227067131",
                    "text": "Incorrect syntax"
                  }
                ]
              }
            },
            {
              "id": 667722,
              "key": "9def4218-13bb-40db-8673-bec027dc0ce0",
              "title": "",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "9def4218-13bb-40db-8673-bec027dc0ce0",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "Sometimes you'll want to apply multiple **rules** (also called **declarations**) to the same element. Like you might want to have all `p` elements have both `color: green` and `text-align: center`. \n\nWhen you want to put multiple **rules** in a single **ruleset**, what do you need to put between each rule to separate them?",
                "answers": [
                  {
                    "id": "a1530237243346",
                    "text": "A comma `,`",
                    "is_correct": false
                  },
                  {
                    "id": "a1530237608230",
                    "text": "A colon `:`",
                    "is_correct": false
                  },
                  {
                    "id": "a1530237639688",
                    "text": "A semicolon `;`",
                    "is_correct": true
                  }
                ]
              }
            },
            {
              "id": 664514,
              "key": "f259c0cd-5c17-4537-b042-1ad70f88a66f",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Styling my to-do list\n\nIn the workspace below, you'll find my to-do list. But the list is very boring and I'd like to add some styling to it.\n\nTo start with, I'd like to increase the text in the list by making it 1½ times bigger than the current font size. That can be done using the following declaration:\n\n```html\nfont-size: 1.5em;\n```\n\nYou can apply this style rule to all of the list item `li` elements by using a **type** selector. Give it a try!\n\nIf you get stuck, the solution is below.",
              "instructor_notes": ""
            },
            {
              "id": 664510,
              "key": "611f9145-c069-416c-a45d-dfec3c0d08c0",
              "title": null,
              "semantic_type": "WorkspaceAtom",
              "is_public": true,
              "workspace_id": "viewb684b51f",
              "pool_id": "webterminal",
              "view_id": "b684b51f-7b26-43fa-8a12-7b8cc54884f4",
              "gpu_capable": false,
              "configuration": {
                "id": "reserved",
                "blueprint": {
                  "conf": {
                    "disk": null,
                    "openFiles": [
                      "/home/workspace/selector_practice.html"
                    ],
                    "showFiles": false,
                    "allowClose": false,
                    "showEditor": true,
                    "allowSubmit": false,
                    "autoRefresh": true,
                    "previewFile": "/home/workspace/selector_practice.html"
                  },
                  "kind": "html-live"
                },
                "workspaceId": "reserved"
              },
              "starter_files": null
            },
            {
              "id": 670970,
              "key": "70aac6fa-bd13-4711-a285-97f58ecf7a07",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "<div style=\"background-color: #a4e4f5;\">\n## ⚠️ Spoiler alert!\n\n**Our solution is below.** You'll learn more effectively if you give the exercise a strong effort before comparing your code with ours!\n</div>\n----",
              "instructor_notes": ""
            },
            {
              "id": 664511,
              "key": "32e273c6-a8b0-449e-8632-dfdf17d50672",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Solution\n\n```html\n<style>\n  li {\n    font-size:1.5em;\n  }\n</style>\n<h1>To-do:</h1>\n<ul>\n  <li>Buy milk\n  <li>Buy eggs\n  <li>Buy flour\n  <li>Make waffles\n  <li>Do laundry\n  <li>Learn to code\n  <li>Build a robot\n</ul>\n```\n**Note:** In our solution, we applied the style to all `li` elements, but we could apply it to the `ul` type and (in this example) it would have the same result.",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 664515,
          "key": "dbd590b4-4883-41c0-8592-acbfbc9c65c5",
          "title": "Practice — Class selectors",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "dbd590b4-4883-41c0-8592-acbfbc9c65c5",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 664522,
              "key": "0dbfce63-5d8f-4687-aac7-33a255a147c8",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Practice — Class selectors",
              "instructor_notes": ""
            },
            {
              "id": 664516,
              "key": "80f0ad5e-e3fe-4266-b578-9df92e0b9bda",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "My to-do list needs more work. I'd like to highlight the most important tasks in yellow. And I'd also like to cross out the tasks that I've already done. It should look something like this:\n\n><style>\nli{\n  font-size:1.5em;\n}\n.highlight{\n  background-color:yellow;\n}\n.done{\n  text-decoration:line-through;\n}\n</style>\n<h1>To-do:</h1>\n<ul id=\"to-do_list\">\n  <li class=\"done\">Buy milk\n  <li>Buy eggs\n  <li class=\"done\">Buy flour\n  <li class=\"highlight\">Make waffles\n  <li>Do laundry\n  <li class=\"highlight\">Learn to code\n  <li class=\"highlight\">Build a robot\n</ul>\n\nYou can accomplish this by using two **class** selectors. I called mine `highlight` and `done`, but you could choose other names if you prefer.\n\nThe style declarations (rules) that you'll need are `background-color: yellow;`and `text-decoration: line-through;`.",
              "instructor_notes": ""
            },
            {
              "id": 664519,
              "key": "fcaa13f6-5b1b-424a-b412-8c594fcf2ff0",
              "title": null,
              "semantic_type": "WorkspaceAtom",
              "is_public": true,
              "workspace_id": "view4607edd5",
              "pool_id": "webterminal",
              "view_id": "4607edd5-9406-46f5-91a6-415d005d757f",
              "gpu_capable": false,
              "configuration": {
                "id": "reserved",
                "blueprint": {
                  "conf": {
                    "disk": null,
                    "openFiles": [
                      "/home/workspace/selector_practice_2.html"
                    ],
                    "showFiles": false,
                    "allowClose": false,
                    "showEditor": true,
                    "allowSubmit": false,
                    "autoRefresh": true,
                    "previewFile": "/home/workspace/selector_practice_2.html"
                  },
                  "kind": "html-live"
                },
                "workspaceId": "reserved"
              },
              "starter_files": null
            },
            {
              "id": 670971,
              "key": "30858b89-e24b-40ef-a3db-a7d2ca954e24",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "<div style=\"background-color: #a4e4f5;\">\n## ⚠️ Spoiler alert!\n\n**Our solution is below.** You'll learn more effectively if you give the exercise a strong effort before comparing your code with ours!\n</div>\n----",
              "instructor_notes": ""
            },
            {
              "id": 664525,
              "key": "f5b37506-e216-4619-925e-156fcc7d9af0",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Solution\n\n```html\n<style>\nli {\n  font-size: 1.5em;\n}\n.highlight {\n  background-color: yellow;\n}\n.done {\n  text-decoration: line-through;\n}\n</style>\n<h1>To-do:</h1>\n<ul id=\"to-do_list\">\n  <li class=\"done\">Buy milk\n  <li>Buy eggs\n  <li class=\"done\">Buy flour\n  <li class=\"highlight\">Make waffles\n  <li>Do laundry\n  <li class=\"highlight\">Learn to code\n  <li class=\"highlight\">Build a robot\n</ul>\n```",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 667945,
          "key": "ff2180d5-e836-42d9-af63-780051b27f54",
          "title": "Practice — More class selectors",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "ff2180d5-e836-42d9-af63-780051b27f54",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 667950,
              "key": "731dba3a-86a7-43f5-8ecf-e03586cf5776",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Practice — More class selectors\n\nSo now the important items on my to-do list are highlighted, and the completed items are crossed out. But what if I want to have an item that is marked as both important _and_ completed? Like this:\n\n<style>\n  li{\n    font-size:1.5em;\n  }\n.highlight{\n  background-color:yellow;\n}\n.done{\n  text-decoration:line-through;\n}\n</style>\n<ul>\n  <li class=\"highlight done\">Make waffles\n</ul>\n\nIn other words, how can we apply two classes to one element?\n\nThis turns out to be pretty easy—we simply put in both of the class names, separated by a space. Like this:\n\n```html\n<li class=\"highlight done\">Make waffles\n```\n\nYou can give this a try in the workspace below.",
              "instructor_notes": ""
            },
            {
              "id": 667951,
              "key": "11595998-f8bd-49f8-a0aa-9f1ad5331888",
              "title": null,
              "semantic_type": "WorkspaceAtom",
              "is_public": true,
              "workspace_id": "view4607edd5",
              "pool_id": "webterminal",
              "view_id": "c2ebaf25-7b5d-49dc-9e0d-61a3f5f56b60",
              "gpu_capable": false,
              "configuration": {
                "id": "reserved",
                "blueprint": {
                  "conf": {
                    "disk": null,
                    "openFiles": [
                      "/home/workspace/selector_practice_2.html"
                    ],
                    "showFiles": false,
                    "allowClose": false,
                    "showEditor": true,
                    "allowSubmit": false,
                    "autoRefresh": true,
                    "previewFile": "/home/workspace/selector_practice_2.html"
                  },
                  "kind": "html-live"
                },
                "workspaceId": "reserved"
              },
              "starter_files": null
            },
            {
              "id": 667952,
              "key": "ee468898-a03c-464d-9e21-40d6ac7bcf56",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## The power of separating style!\n\nLet's do one more thing—I'd like the important list items to _really_ stand out, so let's also make them bold and red.\n\nYou can do that by simply adding a couple more declarations to the ruleset for the `highlight` class:\n\n```html\n.highlight {\n  background-color: yellow;\n  font-weight: bold;\n  color: red;\n}\n```\n\nGive this a try in the workspace above!\n\nNotice that if we were using _inline_ styles, we would have to apply these changes on every line of code with an `li` element. Here we only have seven—but you can imagine how tedious this would get if we had a long list and needed to update the styles on hundreds of list items!\n\nFortunately, because we have **separated the style information**, we can make the changes in only one place (on the `highlight` ruleset) and they will automatically be applied to all of the elements that have the `highlight` class. This is one of the things that makes CSS so powerful!",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 408606,
          "key": "f18fef8e-784a-43ad-bb71-666eed445511",
          "title": "What's so \"cascading\" about CSS?",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "f18fef8e-784a-43ad-bb71-666eed445511",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 664429,
              "key": "526a309d-dd8a-4252-be62-69569d6ab5e0",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": " ",
              "instructor_notes": ""
            },
            {
              "id": 631569,
              "key": "a89c6e48-1f7e-4944-bbf1-71493f026aa7",
              "title": "Intro to CSS: What's So Cascading About CSS?",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "iJI-jUCMgoY",
                "china_cdn_id": "iJI-jUCMgoY.mp4"
              }
            },
            {
              "id": 630613,
              "key": "16f8af34-9d46-483c-9154-1cce943e5a50",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Cascading and specificity\n\nThe term \"cascading\" in *Cascading Style Sheets* refers to the way that style properties \"cascade\" down the DOM tree, starting at the top. A style applied to the `body` element will affect the entire document. A style applied to a lower-level element will affect that element and all its descendants.\n\nA style applied at a lower level can override a style at a higher level. For instance, if the `body` has `color: red` but a paragraph within the body has `color: blue`, the blue will apply to that paragraph and to any elements inside it:\n\n```html\n<style>\n    body { color: red; }\n    p { color: blue; }\n</style>\n<body>\n    <p> This will be blue, not red. <br>\n        <em> Same with this. </em> </p>\n</body>\n```",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 665168,
          "key": "c8df3eba-8854-45d6-9dca-6133e2305086",
          "title": "Practice — Cascading styles",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "c8df3eba-8854-45d6-9dca-6133e2305086",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 665189,
              "key": "a7516d06-24b8-4f4c-987e-f0a82e4109ac",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Practice — Cascading styles\n\nUse the HTML below to answer the quizzes on this page!\n```html\n<html>\n<style>\n        body { font-style: italic; }\n        h1 { color: purple; }\n        body { color: green; }\n        p { color: orange; }\n</style>\n<body>\n        <h1> This is a very stylish document! </h1>\n        <h2> The styles are cascading </h2>\n        <p> So what color am I? </p>\n</body>\n</html>\n```",
              "instructor_notes": ""
            },
            {
              "id": 665188,
              "key": "87b14139-1ff7-4c76-b2d8-d21cfd1da7c7",
              "title": "",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "87b14139-1ff7-4c76-b2d8-d21cfd1da7c7",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "Which elements of the HTML document are in green?",
                "answers": [
                  {
                    "id": "a1529951220926",
                    "text": "`p`",
                    "is_correct": false
                  },
                  {
                    "id": "a1529951238928",
                    "text": "`h1`",
                    "is_correct": false
                  },
                  {
                    "id": "a1529951241658",
                    "text": "`h2`",
                    "is_correct": true
                  },
                  {
                    "id": "a1529951245853",
                    "text": "all of the above",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 665183,
              "key": "054dd59f-d14d-4768-8004-199c09c68f37",
              "title": "",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "054dd59f-d14d-4768-8004-199c09c68f37",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "Which elements of the HTML document are purple?",
                "answers": [
                  {
                    "id": "a1529950642188",
                    "text": "`h1`",
                    "is_correct": true
                  },
                  {
                    "id": "a1529950655659",
                    "text": "`h2`",
                    "is_correct": false
                  },
                  {
                    "id": "a1529950658573",
                    "text": "`p`",
                    "is_correct": false
                  },
                  {
                    "id": "a1529950661708",
                    "text": "all of the above",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 665182,
              "key": "a9b97929-3653-421c-8ebc-12d4a3f335d0",
              "title": "",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "a9b97929-3653-421c-8ebc-12d4a3f335d0",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "Which elements of the HTML document are orange?",
                "answers": [
                  {
                    "id": "a1529948932632",
                    "text": "`h1`",
                    "is_correct": false
                  },
                  {
                    "id": "a1529948963501",
                    "text": "`h2`",
                    "is_correct": false
                  },
                  {
                    "id": "a1529948966684",
                    "text": "`p`",
                    "is_correct": true
                  },
                  {
                    "id": "a1529948979943",
                    "text": "all of the above",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 665187,
              "key": "3efc053d-465a-4b9a-b8dd-d8e9755b8825",
              "title": "",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "3efc053d-465a-4b9a-b8dd-d8e9755b8825",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "Which elements of the HTML document have the text in italics?",
                "answers": [
                  {
                    "id": "a1529950823439",
                    "text": "`h1`",
                    "is_correct": false
                  },
                  {
                    "id": "a1529950974329",
                    "text": "`h2`",
                    "is_correct": false
                  },
                  {
                    "id": "a1529950979074",
                    "text": "`p`",
                    "is_correct": false
                  },
                  {
                    "id": "a1529950981365",
                    "text": "all of the above",
                    "is_correct": true
                  },
                  {
                    "id": "a1529951083142",
                    "text": "`h1` and `h2`",
                    "is_correct": false
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 408607,
          "key": "dcb13d09-f3aa-40c9-a1f7-60ea3b6f35d4",
          "title": "Units",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "dcb13d09-f3aa-40c9-a1f7-60ea3b6f35d4",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 631570,
              "key": "51161dea-5434-4736-b44a-082fa007e6ae",
              "title": "Intro to CSS: Units",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "Tfe3jnfMZ08",
                "china_cdn_id": "Tfe3jnfMZ08.mp4"
              }
            },
            {
              "id": 498529,
              "key": "0fc9ad93-35f3-497e-8190-1c0a0b42927e",
              "title": "",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "0fc9ad93-35f3-497e-8190-1c0a0b42927e",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "Two of these units can be used in CSS for the height of an element.  \nOne of them can't.\n\nWhich of these units **can't** be used for a height?",
                "answers": [
                  {
                    "id": "a1515188493785",
                    "text": "`in` (inches)",
                    "is_correct": false
                  },
                  {
                    "id": "a1515188538814",
                    "text": "`cm` (centimeters)",
                    "is_correct": false
                  },
                  {
                    "id": "a1515188543592",
                    "text": "`yd` (yards)",
                    "is_correct": true
                  }
                ]
              }
            },
            {
              "id": 498530,
              "key": "abde7a6e-acfd-4ea8-ab9c-af67a75a217f",
              "title": "",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "abde7a6e-acfd-4ea8-ab9c-af67a75a217f",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "<div style=\"padding: 10px;\">\n<div style=\"outline:1px solid black; width:50px; height: 100px; float: right; background-color: red;\"></div></div>\n\nUse Developer Tools to inspect the red rectangle here. How big is it?",
                "answers": [
                  {
                    "id": "a1515188817354",
                    "text": "5 ems wide and 10 ems tall",
                    "is_correct": false
                  },
                  {
                    "id": "a1515188952376",
                    "text": "5.0 centimeters wide and 10.0 centimeters tall",
                    "is_correct": false
                  },
                  {
                    "id": "a1515188952978",
                    "text": "50 pixels wide and 100 pixels tall",
                    "is_correct": true
                  }
                ]
              }
            },
            {
              "id": 498531,
              "key": "bc50894f-ee92-458f-8c43-ef0c966a46be",
              "title": "",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "bc50894f-ee92-458f-8c43-ef0c966a46be",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "What is the relationship between the CSS unit `em` and the HTML element `<em>`?",
                "answers": [
                  {
                    "id": "a1515189478486",
                    "text": "An HTML `<em>` element is typically one em longer than a regular HTML element.",
                    "is_correct": false
                  },
                  {
                    "id": "a1515189503130",
                    "text": "If you put a CSS width of `1em` on an element, it will become an HTML `<em>` element.",
                    "is_correct": false
                  },
                  {
                    "id": "a1515189503764",
                    "text": "There is no relationship between them; they just happen to be spelled the same.",
                    "is_correct": true
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 408609,
          "key": "ef854deb-a2ac-48ae-a793-3a8b413de3b6",
          "title": "Boxes",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "ef854deb-a2ac-48ae-a793-3a8b413de3b6",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 630427,
              "key": "339252b9-daa0-4da4-bcff-102e409a6186",
              "title": "Intro to CSS: Boxes",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "JxcGkKIRhHo",
                "china_cdn_id": "JxcGkKIRhHo.mp4"
              }
            },
            {
              "id": 629957,
              "key": "a1aeba2f-a311-423e-82ef-4da6ac22abfa",
              "title": "Which boundary is which?",
              "semantic_type": "MatchingQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "a1aeba2f-a311-423e-82ef-4da6ac22abfa",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "complex_prompt": {
                  "text": "<style>\n  #boximg {\n    float:right;\n    margin-left: 20px;\n  }\n  #container {\n    height: 200px;\n  }\n</style>\n<div id=\"container\">\n<img id=\"boximg\" src=\"https://s3.amazonaws.com/video.udacity-data.com/topher/2018/July/5b381cd3_box-model-numbered-2/box-model-numbered-2.png\" alt=\"The CSS box model.\" width=\"300px\">\n\nPut these parts of a box in order from the inside of the box to the outside. \n</div>"
                },
                "concepts_label": "Boundary",
                "answers_label": "Placement",
                "concepts": [
                  {
                    "text": "1 (innermost)",
                    "correct_answer": {
                      "id": "a1527094240149",
                      "text": "Content"
                    }
                  },
                  {
                    "text": "2",
                    "correct_answer": {
                      "id": "a1527094312933",
                      "text": "Padding"
                    }
                  },
                  {
                    "text": "3",
                    "correct_answer": {
                      "id": "a1527094316314",
                      "text": "Border"
                    }
                  },
                  {
                    "text": "4 (outermost)",
                    "correct_answer": {
                      "id": "a1527094319740",
                      "text": "Margin"
                    }
                  }
                ],
                "answers": [
                  {
                    "id": "a1527094240149",
                    "text": "Content"
                  },
                  {
                    "id": "a1527094312933",
                    "text": "Padding"
                  },
                  {
                    "id": "a1527094316314",
                    "text": "Border"
                  },
                  {
                    "id": "a1527094319740",
                    "text": "Margin"
                  }
                ]
              }
            },
            {
              "id": 630854,
              "key": "3fd56023-2b22-4688-a539-9ec5961426fd",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Exercise: Blue box\n\nIn the workspace below, practice making your own boxes! See if you can make a box with a thick blue border and some text inside, like this:",
              "instructor_notes": ""
            },
            {
              "id": 858702,
              "key": "cf15983e-e996-4cfe-be6a-5f309f5fd5e6",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2019/June/5cf45db9_boxes-02/boxes-02.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/cf15983e-e996-4cfe-be6a-5f309f5fd5e6",
              "caption": "",
              "alt": "Blue-bordered box with text inside saying \"Hooray, a box!\".",
              "width": 178,
              "height": 132,
              "instructor_notes": null
            },
            {
              "id": 630855,
              "key": "79c290f2-44c8-4837-ad2a-44504e378f7b",
              "title": null,
              "semantic_type": "WorkspaceAtom",
              "is_public": true,
              "workspace_id": "view6292fe31",
              "pool_id": "webterminal",
              "view_id": "6292fe31-17ba-4f92-973a-16652bb10ce6",
              "gpu_capable": false,
              "configuration": {
                "id": "reserved",
                "blueprint": {
                  "conf": {
                    "disk": null,
                    "openFiles": [
                      "/home/workspace/blue_box.html"
                    ],
                    "showFiles": false,
                    "allowClose": false,
                    "showEditor": true,
                    "allowSubmit": false,
                    "autoRefresh": true,
                    "previewFile": "/home/workspace/blue_box.html"
                  },
                  "kind": "html-live"
                },
                "workspaceId": "reserved"
              },
              "starter_files": null
            },
            {
              "id": 670972,
              "key": "30a128c0-c2a1-4a2e-be69-65b9f3d34c0e",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "<div style=\"background-color: #a4e4f5;\">\n## ⚠️ Spoiler alert!\n\n**Our solution is below.** You'll learn more effectively if you give the exercise a strong effort before comparing your code with ours!\n</div>\n----",
              "instructor_notes": ""
            },
            {
              "id": 667721,
              "key": "8dc90eda-7987-4bee-8a37-6c035a5d4bba",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Solution — Blue box\n\n**Note:** The numbers in your code (for margin, padding, and so on) don't need to be *exactly* the same—the purpose of the exercise is just to make something that looks approximately like the box pictured.\n\n```\n<style>\n  .blue_box {\n    border: 10px solid blue;\n    padding: 0.5em;\n    width: 150px;\n    height: 100px;\n  }\n</style>\n\n<div class=\"blue_box\">Hooray, a box!</div>\n```",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 668003,
          "key": "2b83f517-4934-42af-b672-0393ae7f3cb3",
          "title": "Practice — Boxes",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "2b83f517-4934-42af-b672-0393ae7f3cb3",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 668047,
              "key": "dc011846-8c1d-4e1f-a966-920cf323f904",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Practice — Boxes\n\nLet's add a second box. But let's make it small, and red. Let's also put some margin around both boxes, so that they aren't mashed right up against each other.\n\nSomething like this:",
              "instructor_notes": ""
            },
            {
              "id": 841754,
              "key": "ae4e41a0-4289-47a5-9f8d-f70e1d8b0eb8",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2019/March/5c9d22e7_boxes/boxes.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/ae4e41a0-4289-47a5-9f8d-f70e1d8b0eb8",
              "caption": "",
              "alt": "A screenshot showing about what your boxes should look like once you've styled them.",
              "width": 200,
              "height": 270,
              "instructor_notes": null
            },
            {
              "id": 668057,
              "key": "d2c6c996-29ff-4fa2-a330-6624f3abb6f9",
              "title": null,
              "semantic_type": "WorkspaceAtom",
              "is_public": true,
              "workspace_id": "view6292fe31",
              "pool_id": "webterminal",
              "view_id": "d3ce754b-864e-47f8-9fba-785e80bb2645",
              "gpu_capable": false,
              "configuration": {
                "id": "reserved",
                "blueprint": {
                  "conf": {
                    "disk": null,
                    "openFiles": [
                      "/home/workspace/blue_box.html"
                    ],
                    "showFiles": false,
                    "allowClose": false,
                    "showEditor": true,
                    "allowSubmit": false,
                    "autoRefresh": true,
                    "previewFile": "/home/workspace/blue_box.html"
                  },
                  "kind": "html-live"
                },
                "workspaceId": "reserved"
              },
              "starter_files": null
            },
            {
              "id": 670973,
              "key": "8e55b0b5-10b4-4a30-a230-ef06161a6921",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "<div style=\"background-color: #a4e4f5;\">\n## ⚠️ Spoiler alert!\n\n**Our solution is below.** You'll learn more effectively if you give the exercise a strong effort before comparing your code with ours!\n</div>\n----",
              "instructor_notes": ""
            },
            {
              "id": 668060,
              "key": "b5dbe2f4-159c-4291-8dd1-cb5e8e603bae",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Solution\n\n```html\n<style>\n  .blue_box {\n  border: 10px solid blue;\n  padding: 0.5em;\n  margin: 0.5em;\n  width: 150px;\n  height: 100px;\n  }\n  .red_box {\n  border: 10px solid red;\n  padding: 0.5em;\n  margin: 0.5em;\n  width: 20px;\n  height: 20px;\n  }\n</style>\n\n<div class=\"blue_box\">Hooray, a box!</div>\n<div class=\"red_box\"></div>\n```",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 668062,
          "key": "f750cdb3-f19b-4112-8003-0e8b1387eef4",
          "title": "Practice — Floating boxes",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "f750cdb3-f19b-4112-8003-0e8b1387eef4",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 668065,
              "key": "e75b7333-9a8a-4a07-b9cd-eed2c8ab6ca1",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Practice — Floating boxes\n\nNow let's try out the `float` property. To start with, just try adding `float: right;` to the `blue_box` class.",
              "instructor_notes": ""
            },
            {
              "id": 668067,
              "key": "94acfbfc-2afd-459a-848f-7b3afbc3001d",
              "title": null,
              "semantic_type": "WorkspaceAtom",
              "is_public": true,
              "workspace_id": "view6292fe31",
              "pool_id": "webterminal",
              "view_id": "b1d7117b-89cd-4853-b118-29cd07d2c01e",
              "gpu_capable": false,
              "configuration": {
                "id": "reserved",
                "blueprint": {
                  "conf": {
                    "disk": null,
                    "openFiles": [
                      "/home/workspace/blue_box.html"
                    ],
                    "showFiles": false,
                    "allowClose": false,
                    "showEditor": true,
                    "allowSubmit": false,
                    "autoRefresh": true,
                    "previewFile": "/home/workspace/blue_box.html"
                  },
                  "kind": "html-live"
                },
                "workspaceId": "reserved"
              },
              "starter_files": null
            },
            {
              "id": 668069,
              "key": "f8656367-4e7a-45ba-80f0-eebd7ed16197",
              "title": "",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "f8656367-4e7a-45ba-80f0-eebd7ed16197",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "What happened when you added `float: right;` to the `blue_box` class?",
                "answers": [
                  {
                    "id": "a1530307915826",
                    "text": "Both the red and blue boxes moved to the right side of the workspace.",
                    "is_correct": false
                  },
                  {
                    "id": "a1530307950721",
                    "text": "Neither of the boxes moves.",
                    "is_correct": false
                  },
                  {
                    "id": "a1530307957513",
                    "text": "The blue box moved to the right side of the workspace, but the red box stayed where it was.",
                    "is_correct": true
                  }
                ]
              }
            },
            {
              "id": 668074,
              "key": "511f79e4-cf17-4191-8c61-c8684d552914",
              "title": "",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "511f79e4-cf17-4191-8c61-c8684d552914",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "Now try adding `float: right;` to the `red_box` class.\n\nWhat happens?",
                "answers": [
                  {
                    "id": "a1530308015493",
                    "text": "The red box ends up all the way over at the right side of the workspace.",
                    "is_correct": false
                  },
                  {
                    "id": "a1530308072444",
                    "text": "The red box end up inside (or overlapping with) the blue box.",
                    "is_correct": false
                  },
                  {
                    "id": "a1530308085353",
                    "text": "The red box moves to the right, but only up until it bumps into the blue box.",
                    "is_correct": true
                  }
                ]
              }
            },
            {
              "id": 668091,
              "key": "4c72acab-ae97-44f9-9ebb-0f7d5ef96927",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "Let's try one more thing—add a paragraph of text at the very end (after both boxes). You can use this paragraph:\n\n```html\n<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Mi sit amet mauris commodo. Vitae elementum curabitur vitae nunc sed velit dignissim sodales ut. Volutpat est velit egestas dui id ornare arcu. Nulla facilisi nullam vehicula ipsum a arcu cursus vitae congue. Porttitor lacus luctus accumsan tortor posuere ac ut consequat. Et malesuada fames ac turpis. Posuere lorem ipsum dolor sit amet consectetur adipiscing. Sed risus ultricies tristique nulla. At auctor urna nunc id. Pharetra convallis posuere morbi leo. Quam quisque id diam vel quam elementum pulvinar etiam. Eleifend donec pretium vulputate sapien nec sagittis aliquam malesuada. Amet risus nullam eget felis eget nunc lobortis.</p>\n```\n**Note:** If you're curious what this weird text is all about, it's something called **lorem ipsum**. Essentially, it's nonsensical placeholder text that designers commonly use when they're laying out a document. You can read more about it (and generate your own _lorem ipsum_) [here](https://loremipsum.io/).",
              "instructor_notes": ""
            },
            {
              "id": 668092,
              "key": "ee638c1f-a60f-4169-8e56-72dc81eb7cbf",
              "title": "",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "ee638c1f-a60f-4169-8e56-72dc81eb7cbf",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "What happens when you add the paragraph of text?",
                "answers": [
                  {
                    "id": "a1530308958870",
                    "text": "The boxes get pushed down, and the paragraph of text appears above them.",
                    "is_correct": false
                  },
                  {
                    "id": "a1530308983501",
                    "text": "The boxes get pushed left, and the paragraph of text appears to their right.",
                    "is_correct": false
                  },
                  {
                    "id": "a1530308999502",
                    "text": "The boxes stay where they are, and the paragraph of text wraps around them.",
                    "is_correct": true
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 668095,
          "key": "1f30fd69-a13e-4f87-8de7-8918a1526cd9",
          "title": "Practice — Boxes inside boxes",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "1f30fd69-a13e-4f87-8de7-8918a1526cd9",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 668129,
              "key": "8aed81e3-281b-47ee-9d22-338f845e6e24",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Practice — Boxes inside boxes\n\nLet's play with the boxes a little more.\n\nIf you recall, elements can have **contents**. Currently, only one of our `div` elements has contents—the blue box contains the text `Hooray, a box!`\n\nBut instead of using text for the contents, we could use the other box. To do this, we simply have to nest the `div` for the red box inside the `div` for the blue box (replacing the current contents `Hooray, a box!`).\n\nLike this:\n\n```html\n<div class=\"blue_box\">\n  <div class=\"red_box\">\n  </div>\n</div>\n```\n\nNotice how we've lined up the indentation to help make the nesting easier to see.\n\nGive it a try in the workspace!",
              "instructor_notes": ""
            },
            {
              "id": 668138,
              "key": "89976c66-72f5-4c71-9abb-9234e095bea4",
              "title": null,
              "semantic_type": "WorkspaceAtom",
              "is_public": true,
              "workspace_id": "view6292fe31",
              "pool_id": "webterminal",
              "view_id": "c1e847f0-b2df-486f-871d-a3e61980a7f6",
              "gpu_capable": false,
              "configuration": {
                "id": "reserved",
                "blueprint": {
                  "conf": {
                    "disk": null,
                    "openFiles": [
                      "/home/workspace/blue_box.html"
                    ],
                    "showFiles": false,
                    "allowClose": false,
                    "showEditor": true,
                    "allowSubmit": false,
                    "autoRefresh": true,
                    "previewFile": "/home/workspace/blue_box.html"
                  },
                  "kind": "html-live"
                },
                "workspaceId": "reserved"
              },
              "starter_files": null
            },
            {
              "id": 668151,
              "key": "c9f38789-74bf-4628-9a6e-a169fe84bd85",
              "title": "",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "c9f38789-74bf-4628-9a6e-a169fe84bd85",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "Once you've nested the `div` elements, where does the red box get displayed?",
                "answers": [
                  {
                    "id": "a1530310758719",
                    "text": "It's centered inside the blue box.",
                    "is_correct": false
                  },
                  {
                    "id": "a1530310787405",
                    "text": "It moves as far to the right side of the workspace as possible, so that it partly overlaps with the blue box.",
                    "is_correct": false
                  },
                  {
                    "id": "a1530310814917",
                    "text": "It moves to the right, but stays inside of the blue box.",
                    "is_correct": true
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 408610,
          "key": "92c9792c-c9c0-4270-9fd1-bcb67084bac4",
          "title": "Percentages",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "92c9792c-c9c0-4270-9fd1-bcb67084bac4",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 675085,
              "key": "eafeb41d-6867-47ab-a1a4-2b504150fb25",
              "title": "Intro to CSS: Percentages",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "qW90i9mB38o",
                "china_cdn_id": "qW90i9mB38o.mp4"
              }
            },
            {
              "id": 668229,
              "key": "a98fe412-8334-4f11-b186-d2ad9e8ca8ed",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "Here's an image to refer to when answering the next question:",
              "instructor_notes": ""
            },
            {
              "id": 668221,
              "key": "bf13a926-70b0-44c9-bd1e-8e7a75dc9f9e",
              "title": "",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "bf13a926-70b0-44c9-bd1e-8e7a75dc9f9e",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "<style>\n  #bximg{\n    float:right;\n    margin-left: 20px;\n  }\n  #qcontainer{\n    height: 200px;\n  }\n</style>\n\n<div id=\"qcontainer\">\n<img id=\"bximg\" src=\"https://s3.amazonaws.com/video.udacity-data.com/topher/2018/June/5b36bf17_box-model/box-model.png\" width=\"300px\">\n\nSuppose we use the `width` property on an element, as in:\n\n`width: 50%;`\n\nWhat part of the element's box model is affected?\n</div>",
                "answers": [
                  {
                    "id": "a1530313250315",
                    "text": "The width of the **contents**.",
                    "is_correct": true
                  },
                  {
                    "id": "a1530313264130",
                    "text": "The width of the **padding**.",
                    "is_correct": false
                  },
                  {
                    "id": "a1530313265376",
                    "text": "The width of the **border**.",
                    "is_correct": false
                  },
                  {
                    "id": "a1530313267026",
                    "text": "The width of the **margin**.",
                    "is_correct": false
                  },
                  {
                    "id": "a1530313487605",
                    "text": "All of these together.",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 630603,
              "key": "f9abe2ba-c454-473d-80cb-70928cafdc3e",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Interpreting percentages\n\nHere is a piece of HTML with CSS. Use it to answer the question below!\n\n```\n<style>\n.outer {\n        width: 300px;\n        border: 5px dotted orange;\n}\n\n.inner {\n        border: 5px solid blue;\n        width: 50%;\n}\n</style>\n<div class=\"outer\">\n        <p> This box has a box inside!\n        <div class=\"inner\">\n                <p> How wide is the inner box,\n                <em>including</em> its border?\n        </div>\n</div>\n```",
              "instructor_notes": ""
            },
            {
              "id": 630602,
              "key": "fa415a65-cfa4-4fae-8aa5-4f00a9a2563d",
              "title": "",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "fa415a65-cfa4-4fae-8aa5-4f00a9a2563d",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "Use the HTML and CSS above to answer this question.\n\nHow wide will the inner box be, _including_ its border?",
                "answers": [
                  {
                    "id": "a1527197111229",
                    "text": "150px",
                    "is_correct": false
                  },
                  {
                    "id": "a1527197250538",
                    "text": "160px",
                    "is_correct": true
                  },
                  {
                    "id": "a1527197253214",
                    "text": "170px",
                    "is_correct": false
                  },
                  {
                    "id": "a1527197258942",
                    "text": "You can't tell, since you don't know how big the user's screen is.",
                    "is_correct": false
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 408611,
          "key": "05d1751d-458a-4e85-b714-a1ab831ed793",
          "title": "Learning more CSS",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "05d1751d-458a-4e85-b714-a1ab831ed793",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 630424,
              "key": "00b3d06f-7d3f-4bac-adda-e1827cfcb0e5",
              "title": "Intro to CSS: Learning More CSS",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "SZpmUU6uveE",
                "china_cdn_id": "SZpmUU6uveE.mp4"
              }
            },
            {
              "id": 498535,
              "key": "257763a4-5387-4db8-9afb-d0aab52c65af",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## CSS Reference\n\nYou can find the MDN CSS reference here:\n\nhttps://developer.mozilla.org/en-US/docs/Web/CSS/Reference ",
              "instructor_notes": ""
            },
            {
              "id": 498536,
              "key": "cbad0bba-8d74-4346-b465-df02d6674ffd",
              "title": "",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "cbad0bba-8d74-4346-b465-df02d6674ffd",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "<style>.smca { font-variant: small-caps; }</style>\nOn the web and in print, headlines often use the <span class=smca>Small Caps</span> style, where lowercase letters are replaced with small capital letters.\n\n* Without small caps\n* <span class=smca>With small caps</span>\n\nUse the MDN documentation or your favorite search engine to look up how to do to <span class=smca>Small Caps</span> in CSS.",
                "answers": [
                  {
                    "id": "a1515190510410",
                    "text": "`font-variant: small-caps;`",
                    "is_correct": true
                  },
                  {
                    "id": "a1515190522918",
                    "text": "`text-capitalization: small;`",
                    "is_correct": false
                  },
                  {
                    "id": "a1515190523495",
                    "text": "`font-size: smaller;`",
                    "is_correct": false
                  },
                  {
                    "id": "a1515190524090",
                    "text": "`text-transform: capitalize;`",
                    "is_correct": false
                  },
                  {
                    "id": "a1531248997520",
                    "text": "To do this, just turn your Caps Lock on while typing your HTML.",
                    "is_correct": false
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 408612,
          "key": "b8cf92ff-909a-482a-9bc1-0ae596c2766f",
          "title": "Separating style",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "b8cf92ff-909a-482a-9bc1-0ae596c2766f",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 630422,
              "key": "abb7103b-06a2-4175-87c8-f3e0bfa3c05c",
              "title": "Intro to CSS: Separating Style",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "jv_LhQCQoFM",
                "china_cdn_id": "jv_LhQCQoFM.mp4"
              }
            },
            {
              "id": 629764,
              "key": "bcd7d9e0-4720-4b98-a1e7-42ec325e9b55",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Linking stylesheets\n\nTo link to a stylesheet in your HTML file, add a `link` element to the `head` of the HTML file. The syntax for the `link` element is just like this:\n\n```html\n<link rel=\"stylesheet\" href=\"style.css\">\n```\n\nIf you are linking to a stylesheet located on another web server, you will use a full URL in the `href` attribute. If you're linking to one that's in the same directory as your HTML file, you can just use the filename as a relative URL.",
              "instructor_notes": ""
            },
            {
              "id": 681381,
              "key": "ab74bdb2-d4ac-407d-ad99-28f62634b708",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Stylesheet *or* style element — not both!\n\nNote that you can put your CSS code inside of a `<style></style>` element, like this ...\n\n```html\n<style>\n  p{color:blue;}\n</style>\n```\n\n... *or* inside of a linked _stylesheet_, like we just talked about.\n\nBut you would not want to do both at the same time! In other words, when you place your CSS in a stylesheet, you don't need to use a `style` element—you can just put the CSS directly into the stylesheet with nothing around it:\n\n```css\np{color:blue;}\n```\n\nThis is what you should do for the exercise below—simply put the CSS directly into your `style.css` file (and _don't_ use the `style` element).",
              "instructor_notes": ""
            },
            {
              "id": 498539,
              "key": "95fae053-3c4e-4930-a0cf-945b737fd30a",
              "title": "",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "95fae053-3c4e-4930-a0cf-945b737fd30a",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "tasks": [
                "Create a new file called `style.css` in the same folder as the HTML files you've created before.",
                "Put some CSS rules into that file. You can just use `p { color: purple; }` or whatever you like!",
                "Add `<link rel=\"stylesheet\" href=\"style.css\">` to the `<head>` element of an HTML file.",
                "Load that file up in your browser and see the new styles you've created!"
              ],
              "positive_feedback": "**Great!** This is a step on the way to making your own stylish web page!",
              "video_feedback": null,
              "description": "Check off these activities as you complete them —"
            }
          ]
        },
        {
          "id": 667582,
          "key": "2438b5d1-c711-4fd2-bfa1-5fa7b1334f1e",
          "title": "Practice — Three ways to style",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "2438b5d1-c711-4fd2-bfa1-5fa7b1334f1e",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 667583,
              "key": "276a58b4-0a29-4446-8d16-8dc32f401574",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Practice — Three ways to style\n\nAt this point, you've learned _three_ different ways to apply CSS styles to your HTML elements. This can get a little confusing, so on this page we'll review those three approaches. Try to notice what is different in each approach, and what is the same.\n\nAs you saw earlier, we can't put CSS code directly in our HTML, because then the browser will think it _is_ HTML. Instead, we have to have a way of signaling that the code should be interpreted ",
              "instructor_notes": ""
            },
            {
              "id": 667610,
              "key": "45a76163-ed64-4a86-911d-1aba3a07e8fc",
              "title": "",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "45a76163-ed64-4a86-911d-1aba3a07e8fc",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "Here's an attempt to apply a CSS style to some text:\n```html\ncolor: blue;\n\n<p>Hello!<p>\n```\nWill this work?",
                "answers": [
                  {
                    "id": "a1530221152110",
                    "text": "Yes—the text `Hello!` will be styled in blue.",
                    "is_correct": false
                  },
                  {
                    "id": "a1530221237442",
                    "text": "No—the text `Hello!` will show up, but it won't be in blue.",
                    "is_correct": true
                  }
                ]
              }
            },
            {
              "id": 667614,
              "key": "d5e80d71-d8ef-497f-a374-0f61b631dba1",
              "title": "",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "d5e80d71-d8ef-497f-a374-0f61b631dba1",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "OK, so this code ...\n```html\ncolor:blue\n\n<p>Hello!<p>\n```\n... doesn't work. But what actually happens when the browser tries to render this page? (Feel free to try it out for yourself and see!)",
                "answers": [
                  {
                    "id": "a1530222957523",
                    "text": "It tries to apply the CSS style, but since there is no `p` selector, it doesn't know what to apply the style to.",
                    "is_correct": false
                  },
                  {
                    "id": "a1530223089104",
                    "text": "It interprets `color:blue` as text and displays it on the page, just like the text `Hello!`.",
                    "is_correct": true
                  },
                  {
                    "id": "a1530223141915",
                    "text": "It causes the page to fail (the page won't load in a browser until this is fixed).",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 667612,
              "key": "193f01ea-5a37-478b-bf19-d83335b4a892",
              "title": "",
              "semantic_type": "MatchingQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "193f01ea-5a37-478b-bf19-d83335b4a892",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "complex_prompt": {
                  "text": "Here are some attempts to fix the code we just looked at. Which of these approaches would work and style `Hello!` blue?"
                },
                "concepts_label": "Solution",
                "answers_label": "Works / doesn't work",
                "concepts": [
                  {
                    "text": "Use the style **attribute**, like this:\n```html\n<p style=\"color:blue\">Hello!</p>\n```",
                    "correct_answer": {
                      "id": "a1530222571509",
                      "text": "Works"
                    }
                  },
                  {
                    "text": "Use the style **element**, like this:\n```html\n<style>\n  p{color:blue}\n</style>\n```",
                    "correct_answer": {
                      "id": "a1530222694398",
                      "text": "Works"
                    }
                  },
                  {
                    "text": "Link to a separate **stylesheet**:\n```html\n<link rel=\"stylesheet\" href=\"style.css\">\n```\nAnd then place this code in the stylesheet:\n```html\np{color:blue}\n```",
                    "correct_answer": {
                      "id": "a1530222737677",
                      "text": "Works"
                    }
                  }
                ],
                "answers": [
                  {
                    "id": "a1530222737677",
                    "text": "Works"
                  },
                  {
                    "id": "a1530222694398",
                    "text": "Works"
                  },
                  {
                    "id": "a1530222798062",
                    "text": "Doesn't work"
                  },
                  {
                    "id": "a1530222571509",
                    "text": "Works"
                  },
                  {
                    "id": "a1530222802334",
                    "text": "Doesn't work"
                  }
                ]
              }
            },
            {
              "id": 667656,
              "key": "34f966ed-72e6-422e-b935-8044952ae4ae",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "OK, now it's your turn! In the workspace below, you'll see that someone tried to apply some styles to some text, but it's not working. See if you can fix it!\n\nTry using each of the three approaches, so that you can see them side-by-side:\n* Make the text centered using the `style` **attribute** to apply an **inline** style.\n* Make the text blue using the `style` **element** with a **type selector**.\n* Make the text big using a linked stylesheet (the stylesheet has already been created, but you'll need to add the style to it, and add the correct `link` element to your HTML).\n\n**Note:** Of course, you would normally not use all three of these approaches at the same time like this—this is just for practice.",
              "instructor_notes": ""
            },
            {
              "id": 667642,
              "key": "704ad6ce-f4ae-46a6-8ac5-1cd8dc0ff756",
              "title": null,
              "semantic_type": "WorkspaceAtom",
              "is_public": true,
              "workspace_id": "view11909243",
              "pool_id": "webterminal",
              "view_id": "11909243-103f-4c8d-919f-8dad26c518b1",
              "gpu_capable": false,
              "configuration": {
                "id": "reserved",
                "blueprint": {
                  "conf": {
                    "disk": null,
                    "openFiles": [
                      "/home/workspace/three_ways_to_style.html",
                      "/home/workspace/style.css"
                    ],
                    "showFiles": false,
                    "allowClose": false,
                    "showEditor": true,
                    "allowSubmit": false,
                    "autoRefresh": true,
                    "previewFile": "/home/workspace/three_ways_to_style.html"
                  },
                  "kind": "html-live"
                },
                "workspaceId": "reserved"
              },
              "starter_files": null
            },
            {
              "id": 670974,
              "key": "9cf97a76-c08b-4496-a7e0-762fad40a479",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "<div style=\"background-color: #a4e4f5;\">\n## ⚠️ Spoiler alert!\n\n**Our solution is below.** You'll learn more effectively if you give the exercise a strong effort before comparing your code with ours!\n</div>\n----",
              "instructor_notes": ""
            },
            {
              "id": 667670,
              "key": "726fca51-3b49-4205-b605-19e2aeb89bec",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Solution\n\nThe code in the HTML file should look like this:\n\n```html\n<link rel=\"stylesheet\" href=\"style.css\">\n\n<style>\n  p {color: blue;}\n</style>\n\n<p style=\"text-align: center;\">Style me 3 ways!</p>\n```\n\nAnd the stylesheet (`style.css`) should look like this:\n```html\np {\n  font-size: 24pt;\n}\n```",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 408614,
          "key": "e8db3389-51eb-4cf1-941c-af2a1748302c",
          "title": "Color",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "e8db3389-51eb-4cf1-941c-af2a1748302c",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 631572,
              "key": "d9284902-1e5f-46fc-b1d2-dd5c7f74e4d3",
              "title": "Intro to CSS: Color",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "CrnY0UE3bK8",
                "china_cdn_id": "CrnY0UE3bK8.mp4"
              }
            },
            {
              "id": 438886,
              "key": "38bf697a-c17f-4c83-a188-3f563afd0b05",
              "title": "How does gray work?",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "38bf697a-c17f-4c83-a188-3f563afd0b05",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "Which of these sentences accurately describes how to make shades of gray using RGB colors?",
                "answers": [
                  {
                    "id": "a1508797644878",
                    "text": "To make gray, use a high amount of green and blue, and a low amount of red.",
                    "is_correct": false
                  },
                  {
                    "id": "a1508797667508",
                    "text": "To make gray, use equal amounts of red, green, and blue.",
                    "is_correct": true
                  },
                  {
                    "id": "a1508797668108",
                    "text": "You can't make gray using RGB colors; you have to use orange and purple instead.",
                    "is_correct": false
                  },
                  {
                    "id": "a1508797668692",
                    "text": "To make gray, use a high amount of blue and a medium amount of red and green.",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 438888,
              "key": "f0b81878-41f1-4a69-9cc3-89663dcae138",
              "title": "What color is this?",
              "semantic_type": "MatchingQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "f0b81878-41f1-4a69-9cc3-89663dcae138",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "complex_prompt": {
                  "text": "Try these color codes out in your browser. Which color matches which description?"
                },
                "concepts_label": "Color code",
                "answers_label": "Color description",
                "concepts": [
                  {
                    "text": "`#fed000`",
                    "correct_answer": {
                      "id": "a1508797804085",
                      "text": "yellow"
                    }
                  },
                  {
                    "text": "`rgb(80, 5, 120)`",
                    "correct_answer": {
                      "id": "a1508797911766",
                      "text": "dark purple"
                    }
                  },
                  {
                    "text": "`rgb(90%, 90%, 90%)`",
                    "correct_answer": {
                      "id": "a1508797971713",
                      "text": "light gray"
                    }
                  }
                ],
                "answers": [
                  {
                    "id": "a1508798004486",
                    "text": "Udacity blue"
                  },
                  {
                    "id": "a1508797804085",
                    "text": "yellow"
                  },
                  {
                    "id": "a1508797911766",
                    "text": "dark purple"
                  },
                  {
                    "id": "a1508798015406",
                    "text": "grass green"
                  },
                  {
                    "id": "a1508797971713",
                    "text": "light gray"
                  },
                  {
                    "id": "a1508797990969",
                    "text": "pastel pink"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 668642,
          "key": "1c9aebf6-e42b-404f-a253-e1e67f7d6d4c",
          "title": "Practice — Color",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "1c9aebf6-e42b-404f-a253-e1e67f7d6d4c",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 668643,
              "key": "e2b60673-5239-4095-bd76-e789a9d8d6e0",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Practice — Color\n\nKelly showed three different ways to represent color values in the code. For example:\n\n```html\nrgb(100%, 100%, 100%)\nrgb(255, 255, 255)\n#ffffff\n```\n\n\nAlthough they look different on the surface, they all work essentially the same way.\n\nIn all cases, we need to give the _amount_ (or you could say the _intensity_) of each of the three primary colors: red, green, and blue (RGB).",
              "instructor_notes": ""
            },
            {
              "id": 668766,
              "key": "aa05cb82-58dd-4b2c-8405-df9544d1b78a",
              "title": "",
              "semantic_type": "MatchingQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "aa05cb82-58dd-4b2c-8405-df9544d1b78a",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "complex_prompt": {
                  "text": "Match each of these RGB values with the color it would produce."
                },
                "concepts_label": "RGB value",
                "answers_label": "What color is it?",
                "concepts": [
                  {
                    "text": "`rgb(100%, 0%, 0%)`",
                    "correct_answer": {
                      "id": "a1530548955669",
                      "text": "Bright red"
                    }
                  },
                  {
                    "text": "`rgb(0%, 0%, 100%)`",
                    "correct_answer": {
                      "id": "a1530548994163",
                      "text": "Bright blue"
                    }
                  },
                  {
                    "text": "`rgb(0%, 40%, 0%)`",
                    "correct_answer": {
                      "id": "a1530549030834",
                      "text": "Dark green"
                    }
                  }
                ],
                "answers": [
                  {
                    "id": "a1530548994163",
                    "text": "Bright blue"
                  },
                  {
                    "id": "a1530548955669",
                    "text": "Bright red"
                  },
                  {
                    "id": "a1530549030834",
                    "text": "Dark green"
                  }
                ]
              }
            },
            {
              "id": 668767,
              "key": "ce997fcd-b08f-40a9-a8ee-cb93bf2d8189",
              "title": "",
              "semantic_type": "MatchingQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "ce997fcd-b08f-40a9-a8ee-cb93bf2d8189",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "complex_prompt": {
                  "text": "Match each of these RGB values with the color it would produce."
                },
                "concepts_label": "RGB value",
                "answers_label": "What color is it?",
                "concepts": [
                  {
                    "text": "`rgb(255, 0, 0)`",
                    "correct_answer": {
                      "id": "a1530549328032",
                      "text": "Bright red"
                    }
                  },
                  {
                    "text": "`rgb(0, 0, 255)`",
                    "correct_answer": {
                      "id": "a1530549354318",
                      "text": "Bright blue"
                    }
                  },
                  {
                    "text": "`rgb(0, 102, 0)`",
                    "correct_answer": {
                      "id": "a1530549354927",
                      "text": "Dark green"
                    }
                  }
                ],
                "answers": [
                  {
                    "id": "a1530549328032",
                    "text": "Bright red"
                  },
                  {
                    "id": "a1530549354318",
                    "text": "Bright blue"
                  },
                  {
                    "id": "a1530549354927",
                    "text": "Dark green"
                  }
                ]
              }
            },
            {
              "id": 668765,
              "key": "bdf901fa-d992-4fd2-91d7-1014494000ad",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "We've been using the words \"amount\" and \"intensity\". What we really mean by this is the _brightness_ of the light. Higher values indicate brighter (more intense) light, and lower values indicate darker (less intense) light.\n\nBy mixing different levels of red, green, and blue, we can get different colors, at different levels of brightness.\n\nBy the way, this way of thinking about light isn't limited to our code—if we were to get real, physical lights and overlap them, we would get similar results.",
              "instructor_notes": ""
            },
            {
              "id": 672441,
              "key": "12d8e5d7-c72b-4915-83df-192203c5c697",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/July/5b43e2d4_additive-color-mixing-simulated/additive-color-mixing-simulated.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/12d8e5d7-c72b-4915-83df-192203c5c697",
              "caption": "*Red, green, and blue light overlap to create secondary colors and white light.*  \n*(Public domain image from [Wikimedia Commons](https://commons.wikimedia.org/wiki/File:Additive_color_mixing_simulated.png))*",
              "alt": "Red, green, and blue light overlap to create secondary colors and white light.",
              "width": 400,
              "height": 300,
              "instructor_notes": null
            },
            {
              "id": 668763,
              "key": "62d95168-88b0-4284-833e-35d9db1c9986",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "In the image above, notice that if we mix equal (and intense) levels of all three colors, we get white light. And you can probably imagine that if we lowered the intensity of all three colors by equal amounts, we would get various shades of gray.",
              "instructor_notes": ""
            },
            {
              "id": 668764,
              "key": "9fcc83ba-5336-44d4-9473-50c565782991",
              "title": "",
              "semantic_type": "MatchingQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "9fcc83ba-5336-44d4-9473-50c565782991",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "complex_prompt": {
                  "text": "Match each of these RGB values with the color it would produce."
                },
                "concepts_label": "RGB value",
                "answers_label": "What color is it?",
                "concepts": [
                  {
                    "text": "`rgb(100%, 100%, 100%)`",
                    "correct_answer": {
                      "id": "a1530548660514",
                      "text": "white"
                    }
                  },
                  {
                    "text": "`rgb(30%, 30%, 30%)`",
                    "correct_answer": {
                      "id": "a1530548726672",
                      "text": "dark gray"
                    }
                  },
                  {
                    "text": "`rgb(0, 0, 0)`",
                    "correct_answer": {
                      "id": "a1530548765905",
                      "text": "black"
                    }
                  },
                  {
                    "text": "`rgb(255, 255, 255)`",
                    "correct_answer": {
                      "id": "a1530548784312",
                      "text": "white"
                    }
                  }
                ],
                "answers": [
                  {
                    "id": "a1530548726672",
                    "text": "dark gray"
                  },
                  {
                    "id": "a1530548660514",
                    "text": "white"
                  },
                  {
                    "id": "a1530548765905",
                    "text": "black"
                  },
                  {
                    "id": "a1530548784312",
                    "text": "white"
                  }
                ]
              }
            },
            {
              "id": 668768,
              "key": "16e66df0-1f70-4c35-a7b2-07855c82b397",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "OK, but what about hex values, like `#00cc66` or `#99ccff`?\n\nThese look strange, but they work the same way. Each pair of digits is a number that gives the intensity of red, green, or blue. The reason these values look strange is because they're in a different number system—instead of the [decimal](https://en.wikipedia.org/wiki/Decimal) system that we are used to working with, these numbers are given in the [hexadecimal](https://en.wikipedia.org/wiki/Hexadecimal) system.\n\nYou don't need to have a deep familiarity with hexadecimal to be able to use hex color values on your pages—but we'll briefly explain the basics so that you can get a feeling for how they work.\n\nHexadecimal is not as complex as it might appear. Instead of having 10 digits (0, 1, 2, 3, 4, 5, 6, 7, 8, 9), hexadecimal has 16. Since we don't have 16 number symbols, hexadecimal counts up to 9 and then starts using letters.\n\nHere is how we would show the numbers 0-15 in decimal and hexadecimal:\n\n| **Decimal**  | 0  | 1  | 2  | 3  | 4 | 5 | 6 | 7 | 8 | 9 | **10** | **11** | **12** | **13** | **14** | **15** |\n|---|---|---|---|---|\n| **Hex**  | 0  | 1  | 2  | 3  | 4 | 5 | 6 | 7 | 8 | 9 | **A** | **B** | **C** | **D** | **E** | **F** |\n\nNotice that it's the same until we get to **10**, which is represented as **A** in hexadecimal.\n\nLike we mentioned, each pair of digits in a hex RGB value gives the intensity of red, green, or blue. This ranges from `00`, meaning zero intensity, to `ff`, meaning maximum intensity. In fact, the number `ff` is the same as the decimal number `255`.\n\nThis may seem very alien, but take a try at the following exercise—just to get a feeling for how hex values work.",
              "instructor_notes": ""
            },
            {
              "id": 668769,
              "key": "6481c33a-a34b-44e0-9cfb-caed0c44f2ae",
              "title": "",
              "semantic_type": "MatchingQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "6481c33a-a34b-44e0-9cfb-caed0c44f2ae",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "complex_prompt": {
                  "text": "Match each of these RGB values with the color it would produce."
                },
                "concepts_label": "RGB value",
                "answers_label": "What color is it?",
                "concepts": [
                  {
                    "text": "`#000000`",
                    "correct_answer": {
                      "id": "a1530550978346",
                      "text": "Black"
                    }
                  },
                  {
                    "text": "`#ffffff`",
                    "correct_answer": {
                      "id": "a1530551046167",
                      "text": "White"
                    }
                  },
                  {
                    "text": "`#ff0000`",
                    "correct_answer": {
                      "id": "a1530551077514",
                      "text": "Bright red"
                    }
                  },
                  {
                    "text": "`#0000ff`",
                    "correct_answer": {
                      "id": "a1530551095339",
                      "text": "Bright blue"
                    }
                  }
                ],
                "answers": [
                  {
                    "id": "a1530551095339",
                    "text": "Bright blue"
                  },
                  {
                    "id": "a1530551046167",
                    "text": "White"
                  },
                  {
                    "id": "a1530550978346",
                    "text": "Black"
                  },
                  {
                    "id": "a1530551077514",
                    "text": "Bright red"
                  }
                ]
              }
            },
            {
              "id": 668773,
              "key": "538121f2-21c6-4f81-8101-e1f5242bd418",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "If you need to find out what the hex value is for a particular color, you can easily find out by using one of the many _color picker_ tools that are available.\n\nCheck out [this color picker from W3Schools](https://www.w3schools.com/colors/colors_picker.asp).\n\nYou can enter a color in whatever format you like, and it will tell you what other values can be used to represent that color.\n",
              "instructor_notes": ""
            },
            {
              "id": 668779,
              "key": "e62254bb-b98c-4e5b-91a0-4cef856bdff3",
              "title": "",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "e62254bb-b98c-4e5b-91a0-4cef856bdff3",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "Go to the [W3Schools color picker](https://www.w3schools.com/colors/colors_picker.asp) and try entering `rgb(0%, 100%, 100%)`.\n\nWhat other ways does it say we could represent this color?",
                "answers": [
                  {
                    "id": "a1530552306994",
                    "text": "`#ff00ff`, `fuchsia`, or `rgb(255, 0, 255)`",
                    "is_correct": false
                  },
                  {
                    "id": "a1530552316447",
                    "text": "`#ffff00`, `yellow`, or `rgb(255, 255, 0)`",
                    "is_correct": false
                  },
                  {
                    "id": "a1530552398047",
                    "text": "`#00ffff`, `aqua`, or `rgb(0, 255, 255)`",
                    "is_correct": true
                  }
                ]
              }
            },
            {
              "id": 668784,
              "key": "d8ae8a89-5a4a-4549-976c-dbd9f21fac0c",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "Like Kelly mentioned in the video, if you see an element on a page and want to know what color it is, you can use developer tools to find out.",
              "instructor_notes": ""
            },
            {
              "id": 668644,
              "key": "394b6e60-c99a-48bc-9267-99464ffc7f19",
              "title": "",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "394b6e60-c99a-48bc-9267-99464ffc7f19",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "Use developer tools to inspect the text below. What is its RGB value?\n<p style=\"color:rgb(127,255,0);font-weight:bold;)\">What color am I?</p>",
                "answers": [
                  {
                    "id": "a1530470585255",
                    "text": "`rgb(110, 200, 0)`",
                    "is_correct": false
                  },
                  {
                    "id": "a1530470956747",
                    "text": "`rgb(127, 255, 0)`",
                    "is_correct": true
                  },
                  {
                    "id": "a1530472842077",
                    "text": "`rgb(90, 50, 75)`",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 668810,
              "key": "e1e10f46-df0f-4a01-8d9c-a19f6d750110",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "If you haven't already, we encourage you to play around with the three different kinds of RGB values we've shown here. Below is a workspace so you can try them out.\n\nWe've added a linked stylesheet (the second tab in the workspace) with some CSS _type_ selectors that are already adding color to the background of the `body` and `h1` elements. But they're using simple color words (`black` and `white`) rather than using RGB values (also, black and white are the default values, so this isn't really doing anything).\n\nGo ahead and replace the `black` and `white` with different RGB values. You may want to use the [W3Schools color picker](https://www.w3schools.com/colors/colors_picker.asp) to find some colors you like.",
              "instructor_notes": ""
            },
            {
              "id": 668815,
              "key": "d2caa28e-60fe-4dea-b506-231d46960d07",
              "title": null,
              "semantic_type": "WorkspaceAtom",
              "is_public": true,
              "workspace_id": "view19a8e1bb",
              "pool_id": "webterminal",
              "view_id": "19a8e1bb-4a95-4c3c-859c-4685a0b4ea9a",
              "gpu_capable": false,
              "configuration": {
                "id": "reserved",
                "blueprint": {
                  "conf": {
                    "disk": null,
                    "openFiles": [
                      "/home/workspace/color_practice.html",
                      "/home/workspace/color_practice_style.css"
                    ],
                    "showFiles": false,
                    "allowClose": false,
                    "showEditor": true,
                    "allowSubmit": false,
                    "autoRefresh": true,
                    "previewFile": "/home/workspace/color_practice.html"
                  },
                  "kind": "html-live"
                },
                "workspaceId": "reserved"
              },
              "starter_files": null
            }
          ]
        },
        {
          "id": 668585,
          "key": "0a3b32a0-7f34-4586-9ace-552f188026ce",
          "title": "Practice — Searching for properties",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "0a3b32a0-7f34-4586-9ace-552f188026ce",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 668586,
              "key": "8d3d8947-a1f2-4656-bf16-2607a61b4b49",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Practice — Searching for properties\n\nThere are so many CSS properties out there, it's difficult to know (or remember) them all! And even if you do remember the property you want, you may not be able to recall the exact syntax. (Was it `text-align: center;` or `text-align: centered;`?\n\nEven experienced developers don't have every single property memorized. Fortunately, it's usually easy to find what you need by looking it up in the documentation or using your favorite search engine. \n\nMost of the time, you can simply type in \"CSS\", followed by some words related to the property. For example, if you want to know how to set the background color, searching for \"css background color\" will turn up the results you're looking for.\n\nAnd as we've mentioned previously, the [Mozilla Developer Network](https://developer.mozilla.org/) is a good resource to keep in mind (it also has a _search_ option you can check out).",
              "instructor_notes": ""
            },
            {
              "id": 668587,
              "key": "6d0998bb-52c1-4e83-9cbe-7b6b3ebedb53",
              "title": "",
              "semantic_type": "ValidatedQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "6d0998bb-52c1-4e83-9cbe-7b6b3ebedb53",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "Use the Mozilla documentation or your favorite search engine to find the CSS property for setting an element's **background color**.\n\nOnce you find it, type the property in below:",
                "matchers": [
                  {
                    "expression": "background-color"
                  },
                  {
                    "expression": "bgcolor"
                  }
                ]
              }
            },
            {
              "id": 671222,
              "key": "2069817a-93ef-4ed3-be18-74aee13828e3",
              "title": "",
              "semantic_type": "ValidatedQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "2069817a-93ef-4ed3-be18-74aee13828e3",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "Suppose you have a list, such as:\n\n<ul>\n  <li>First thing\n  <li>Second thing\n</ul>\n\nAnd you want to change the style of the list (for example, to use square bullets instead of round ones). What CSS property could you use?",
                "matchers": [
                  {
                    "expression": "list-style-type"
                  },
                  {
                    "expression": "list-style"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 408615,
          "key": "44b7f68b-4393-4c2d-8247-c99b8a68c7d1",
          "title": "Fonts",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "44b7f68b-4393-4c2d-8247-c99b8a68c7d1",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 631573,
              "key": "d324009b-df20-4b22-a207-de9b110570b0",
              "title": "Intro to CSS: Fonts",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "X4yV9LQDAIY",
                "china_cdn_id": "X4yV9LQDAIY.mp4"
              }
            },
            {
              "id": 671228,
              "key": "59ff581a-d0b4-4c80-9002-98815b216cff",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "That was a lot to remember about fonts! Let's take them one at a time and try them out. First, let's just try changing the font to something other than the default.\n\nIn the workspace below, you'll see we've already linked a stylesheet with some type selectors for the `h1` and `p` elements. You can add `font-family` rules to both of these and then experiment with different fonts.\n\nHere are some common fonts you can try:\n\n* `Helvetica`\n* `\"Times New Roman\"`\n* `Courier`\n* `Palatino`\n* `Impact`\n\nNote that when a font name has spaces in it (as in `\"Times New Roman\"`), we put the name inside quotes (to make sure the browser sees it as a single font name, rather than multiple words).",
              "instructor_notes": ""
            },
            {
              "id": 671229,
              "key": "f4f86983-9530-4cad-9f8e-b1b637d5f4bb",
              "title": null,
              "semantic_type": "WorkspaceAtom",
              "is_public": true,
              "workspace_id": "viewSyeBy8wqzX",
              "pool_id": "webterminal",
              "view_id": "html-live-HkHkUPqfQ",
              "gpu_capable": false,
              "configuration": {
                "id": "reserved",
                "blueprint": {
                  "conf": {
                    "disk": null,
                    "openFiles": [
                      "/home/workspace/fonts.html",
                      "/home/workspace/fonts_style.css"
                    ],
                    "showFiles": false,
                    "allowClose": false,
                    "showEditor": true,
                    "allowSubmit": false,
                    "autoRefresh": true,
                    "previewFile": "/home/workspace/fonts.html"
                  },
                  "kind": "html-live"
                },
                "workspaceId": "reserved"
              },
              "starter_files": null
            },
            {
              "id": 671232,
              "key": "2b2174f0-086e-4d43-b573-48b19f475e7d",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "You can also try out the five **generic** font families Karl mentioned:\n\n* serif\n* sans-serif\n* cursive\n* fantasy\n* monospace\n\nRemember, when you use a _generic_ font family, this tells the browser \"get me this general _kind_ of font\". For example, if you tell it to use `font-family: monospace`, it might use `Inconsolata` or `Courier New` (because these are both categorized as _monospace_ fonts).",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 671231,
          "key": "99f9c648-43bc-4027-bd78-75e038043d58",
          "title": "Practice — Fonts (1/2)",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "99f9c648-43bc-4027-bd78-75e038043d58",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 671236,
              "key": "02f8c58f-e54e-4ba5-a477-4d903d4818bc",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Practice — Fonts (1/2)",
              "instructor_notes": ""
            },
            {
              "id": 671238,
              "key": "e53b667b-74d6-44e1-8b56-7c224f5d3fec",
              "title": "",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "e53b667b-74d6-44e1-8b56-7c224f5d3fec",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "Suppose that a friend shows you their web page, and you notice that they have used a single, specific font. As in:\n\n```\n p {\n    font-family: Constantia;\n  }\n```\n\nCould this cause a problem?",
                "answers": [
                  {
                    "id": "a1530720065437",
                    "text": "Yes—if the page is viewed on a computer that doesn't have that specific font, the page will look different.",
                    "is_correct": true
                  },
                  {
                    "id": "a1530720072764",
                    "text": "No—if the page is viewed on a computer that doesn't have that specific font, the browser will automatically find the font that is most similar.",
                    "is_correct": false
                  },
                  {
                    "id": "a1530720073379",
                    "text": "No—all computers have the same standard set of fonts.",
                    "is_correct": false
                  }
                ]
              }
            },
            {
              "id": 671241,
              "key": "39a43c92-4706-4926-aa77-4f1b28945f45",
              "title": "",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "39a43c92-4706-4926-aa77-4f1b28945f45",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "Regarding the problem in the last question, what's a good solution to suggest to your friend?",
                "answers": [
                  {
                    "id": "a1530720691852",
                    "text": "Never use a font in your web page unless it is a \"web safe\" font.",
                    "is_correct": false
                  },
                  {
                    "id": "a1530720816620",
                    "text": "Always use the most common fonts (since these are installed on almost all computers).",
                    "is_correct": false
                  },
                  {
                    "id": "a1530720862300",
                    "text": "Use a _font stack_, like `font-family: Constantia, Georgia, serif`",
                    "is_correct": true
                  }
                ]
              }
            },
            {
              "id": 671239,
              "key": "568d9c79-e5a8-41ba-afa7-608f54b77a71",
              "title": "",
              "semantic_type": "MatchingQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "568d9c79-e5a8-41ba-afa7-608f54b77a71",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "complex_prompt": {
                  "text": "Which of these names refers to a **specific** font-family and which refers to a **generic** font-family?"
                },
                "concepts_label": "Font-family",
                "answers_label": "Specific or generic?",
                "concepts": [
                  {
                    "text": "`Helvetica`",
                    "correct_answer": {
                      "id": "a1530720385002",
                      "text": "specific"
                    }
                  },
                  {
                    "text": "`Courier`",
                    "correct_answer": {
                      "id": "a1530720490134",
                      "text": "specific"
                    }
                  },
                  {
                    "text": "`serif`",
                    "correct_answer": {
                      "id": "a1530720508258",
                      "text": "generic"
                    }
                  },
                  {
                    "text": "\n`monospace`",
                    "correct_answer": {
                      "id": "a1530720526787",
                      "text": "generic"
                    }
                  }
                ],
                "answers": [
                  {
                    "id": "a1530720508258",
                    "text": "generic"
                  },
                  {
                    "id": "a1530720385002",
                    "text": "specific"
                  },
                  {
                    "id": "a1530720490134",
                    "text": "specific"
                  },
                  {
                    "id": "a1530720526787",
                    "text": "generic"
                  }
                ]
              }
            },
            {
              "id": 671243,
              "key": "6e2ef06d-391f-493c-b83a-9dc5aad5c875",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "If you want to use some interesting fonts, but are worried they won't be installed on all computers, here's another option: You can try out **Google Web Fonts**. These don't have to be installed on the user's computer in order to work!",
              "instructor_notes": ""
            },
            {
              "id": 671245,
              "key": "f5fe8423-11ee-42bd-9d19-cc67816bdec2",
              "title": "Try Google Web Fonts!",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "f5fe8423-11ee-42bd-9d19-cc67816bdec2",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "tasks": [
                "Have a look at the \"Get Started with the Google Fonts API\" documentation.",
                "Copy the example code and paste it into the workspace.",
                "Edit the code to try some other Google fonts (the documentation describes how to do this).",
                "If you like, add some Google fonts to your `notes.html` file (or another file you're working on)."
              ],
              "positive_feedback": "Cool! There are a lot more font resources available on the Web, but this is a pretty fun one.",
              "video_feedback": null,
              "description": "Take a look at the documentation for Google Web Fonts:  \nhttps://developers.google.com/fonts/docs/getting_started\n\nYou'll see there's some example code provided—copy it and paste it into the workspace. Then, try editing the code so that it uses a different Google Web Font (the documentation will tell you what to change).\n\nYou can find all the available fonts at https://fonts.google.com/\n\nTry some out in the workspace below—then, if you like, add some interesting fonts to your `notes.html` file or another HTML file you're working on!"
            },
            {
              "id": 671244,
              "key": "ce90cfa9-9c4b-4839-a985-07d6a4c7fc56",
              "title": null,
              "semantic_type": "WorkspaceAtom",
              "is_public": true,
              "workspace_id": "viewHyxNExt5fm",
              "pool_id": "webterminal",
              "view_id": "html-live-Hk4EeYcGm",
              "gpu_capable": false,
              "configuration": {
                "id": "reserved",
                "blueprint": {
                  "conf": {
                    "disk": null,
                    "openFiles": [
                      "/home/workspace/google_fonts.html"
                    ],
                    "showFiles": false,
                    "allowClose": false,
                    "showEditor": true,
                    "allowSubmit": false,
                    "autoRefresh": true,
                    "previewFile": "/home/workspace/google_fonts.html"
                  },
                  "kind": "html-live"
                },
                "workspaceId": "reserved"
              },
              "starter_files": null
            }
          ]
        },
        {
          "id": 671290,
          "key": "aecd5bbc-1c94-4d68-ba95-d23c0657d0cf",
          "title": "Practice — Fonts (2/2)",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "aecd5bbc-1c94-4d68-ba95-d23c0657d0cf",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 671291,
              "key": "153ce66e-5129-4ec1-bd08-2b8517ae1f8e",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Practice — Fonts (2/2)",
              "instructor_notes": ""
            },
            {
              "id": 671292,
              "key": "caffef3a-27a0-4892-b8ac-9c34ad80eb7b",
              "title": "",
              "semantic_type": "MatchingQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "caffef3a-27a0-4892-b8ac-9c34ad80eb7b",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "complex_prompt": {
                  "text": "There are a bunch of CSS properties for styling fonts, and it can be kind of hard to remember what each of them is for.\n\nOn the left (below), you'll find some different font properties. And on the right are some examples of values that they could have. Can you match them up?"
                },
                "concepts_label": "Property",
                "answers_label": "Example value",
                "concepts": [
                  {
                    "text": "`font-size:`",
                    "correct_answer": {
                      "id": "a1530746697210",
                      "text": "`24pt`"
                    }
                  },
                  {
                    "text": "`font-weight:`",
                    "correct_answer": {
                      "id": "a1530746976587",
                      "text": "`bold`"
                    }
                  },
                  {
                    "text": "`font-style:`",
                    "correct_answer": {
                      "id": "a1530747003237",
                      "text": "`italic`"
                    }
                  },
                  {
                    "text": "`text-decoration:`",
                    "correct_answer": {
                      "id": "a1530747019004",
                      "text": "`underline`"
                    }
                  }
                ],
                "answers": [
                  {
                    "id": "a1530746976587",
                    "text": "`bold`"
                  },
                  {
                    "id": "a1530747019004",
                    "text": "`underline`"
                  },
                  {
                    "id": "a1530747003237",
                    "text": "`italic`"
                  },
                  {
                    "id": "a1530746697210",
                    "text": "`24pt`"
                  }
                ]
              }
            },
            {
              "id": 671294,
              "key": "0a360e19-c8e0-4b75-a647-66483e2c1242",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "We can style fonts using a bunch of separate declarations, like this:\n\n```html\nfont-weight: bold;\nfont-style: italic;\nfont-size: 14pt;\ntext-decoration: underline;\n```\nOr we can combine all of this styling info into one declaration, by using the short-hand `font` property. This can be very convenient!\n\nWhat's _not_ so convenient is that the values for the `font` property have to be in a certain specific order or they won't work. This is a great example of why it's important to get comfortable looking things up in the documentation.\n\nIf you do a Google search for \"CSS font property\" or \"CSS font property order\", one of the top hits you'll get is [this handy page from the CSS-Tricks website](https://css-tricks.com/almanac/properties/f/font/). It describes the common \"gotchas\" that you'll encounter with the `font` property. \n\nWait, what's a \"gotcha\"? In computer science, a **gotcha** is some feature of the code that is likely to trip you up and cause a mistake—in this case, the CSS language makes it easy to write a `font` declaration that _seems_ like it should work, but that is really in the wrong order.\n\nUsing the info from the CSS-Tricks page linked above, see if you can answer this next question.",
              "instructor_notes": ""
            },
            {
              "id": 671293,
              "key": "e020d656-b5ae-4f43-8877-ca86abb97145",
              "title": "",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "e020d656-b5ae-4f43-8877-ca86abb97145",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "Which of the following short-hand `font` declarations is valid?",
                "answers": [
                  {
                    "id": "a1530747451674",
                    "text": "`font: bold italic monospace 12pt;`",
                    "is_correct": false
                  },
                  {
                    "id": "a1530748965235",
                    "text": "`font: bold italic 12pt;`",
                    "is_correct": false
                  },
                  {
                    "id": "a1530749131822",
                    "text": "`font: bold italic monospace;`",
                    "is_correct": false
                  },
                  {
                    "id": "a1530749174029",
                    "text": "`font: 12pt italic bold monospace;`",
                    "is_correct": false
                  },
                  {
                    "id": "a1530749191501",
                    "text": "`font: bold italic 12pt monospace;`",
                    "is_correct": true
                  }
                ]
              }
            },
            {
              "id": 671296,
              "key": "94234491-0a5f-4e91-8db0-61a00c4cc8bb",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "In the workspace below, you'll find that the `h1` and `p` elements have been styled using a series of separate declarations with various font properties.\n\nYour task is to replace these with short-hand versions using the `font` property. When you're all done, you should have only one `font` declaration in each of the two rulesets.\n\nIf you get stuck, you can check out our solution below the workspace.",
              "instructor_notes": ""
            },
            {
              "id": 671295,
              "key": "a439a051-7f3c-4365-9aec-ad27b3fabd8a",
              "title": null,
              "semantic_type": "WorkspaceAtom",
              "is_public": true,
              "workspace_id": "viewSJlwKM1jfQ",
              "pool_id": "webterminal",
              "view_id": "html-live-r1DKzJjMX",
              "gpu_capable": false,
              "configuration": {
                "id": "reserved",
                "blueprint": {
                  "conf": {
                    "disk": null,
                    "openFiles": [
                      "/home/workspace/font_shorthand.html",
                      "/home/workspace/font_shorthand_style.css"
                    ],
                    "showFiles": false,
                    "allowClose": false,
                    "showEditor": true,
                    "allowSubmit": false,
                    "autoRefresh": true,
                    "previewFile": "/home/workspace/font_shorthand.html"
                  },
                  "kind": "html-live"
                },
                "workspaceId": "reserved"
              },
              "starter_files": null
            },
            {
              "id": 671297,
              "key": "a9af88ea-1ae7-4ef1-9059-54c68ffd177d",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "<div style=\"background-color: #a4e4f5;\">\n## ⚠️ Spoiler alert!\n\n**Our solution is below.** You'll learn more effectively if you give the exercise a strong effort before comparing your code with ours!\n</div>\n----",
              "instructor_notes": ""
            },
            {
              "id": 671298,
              "key": "75067e07-7043-40ac-bacb-0686f2250ac1",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "Here's what our stylesheet ended up looking like:\n\n```css\nh1 {\n  font: italic 28pt Impact, \"Franklin Gothic Bold\", \"Arial Black\", sans-serif;\n}\n\np {\n  font: bold 16pt Consolas, \"Courier New\", Courier, monospace;\n}\n```",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 671299,
          "key": "a281b573-1334-4419-901f-cd8aa9232948",
          "title": "Practice — Meaning vs. style",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "a281b573-1334-4419-901f-cd8aa9232948",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 671300,
              "key": "383f667a-d6ae-405f-8542-e76f4b43bb86",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Practice — Meaning vs. style",
              "instructor_notes": ""
            },
            {
              "id": 671301,
              "key": "e9789171-050c-4508-9889-9a1e24c4ab9f",
              "title": "",
              "semantic_type": "MatchingQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "e9789171-050c-4508-9889-9a1e24c4ab9f",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "complex_prompt": {
                  "text": "Below you'll find some pieces of code. Which of them are HTML and which are CSS?"
                },
                "concepts_label": "Code",
                "answers_label": "HTML or CSS?",
                "concepts": [
                  {
                    "text": "`<strong></strong>`",
                    "correct_answer": {
                      "id": "a1530752220519",
                      "text": "HTML"
                    }
                  },
                  {
                    "text": "`font-weight: bold;`",
                    "correct_answer": {
                      "id": "a1530752294234",
                      "text": "CSS"
                    }
                  },
                  {
                    "text": "`<em></em>`",
                    "correct_answer": {
                      "id": "a1530752308511",
                      "text": "HTML"
                    }
                  },
                  {
                    "text": "`font-style: italic;`",
                    "correct_answer": {
                      "id": "a1530752320942",
                      "text": "CSS"
                    }
                  }
                ],
                "answers": [
                  {
                    "id": "a1530752294234",
                    "text": "CSS"
                  },
                  {
                    "id": "a1530752320942",
                    "text": "CSS"
                  },
                  {
                    "id": "a1530752308511",
                    "text": "HTML"
                  },
                  {
                    "id": "a1530752220519",
                    "text": "HTML"
                  }
                ]
              }
            },
            {
              "id": 671302,
              "key": "a8f5cd0d-4d22-4624-9a7c-58e8612276dd",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "Something you may have wondered is why we have both `<strong></strong>` and `font-weight: bold;`. If you want to **bold** some text, it seems like you could use either of these—and they would have the same results.\n\nAnd the same seems to be true of `<em></em>` and `font-style: italic;`.\n\nWhy would we need CSS style properties like `font-weight` and `font-style`, when we already have HTML elements like `em` and `strong`?\n\nThere are a couple of reasons for this.\n\nThe _historical_ reason is that HTML was created before CSS, but the engineers who designed CSS wanted it to provide more customization than HTML alone did. The _default_ way to show emphasis is by styling it as italic. But we don't have to do it that way — we can use CSS to override the default styles. For example, we could say that we want emphasized text to be red, or in a larger font size.\n\nBut the differences go deeper than that. HTML code isn't _only_ used by browsers that display on the screen. It's also used by search engines, smart speaker apps, and other programs. Those programs can't see \"boldface\" or \"italics\", but they still need to know which text on a page is _more important_.\n\nThe `em` and `strong` elements specify the _meaning_ of their contents. In contrast, the CSS style properties are _just_ specifying the visual appearance.\n\nTo repeat this in more general terms: the HTML indicates what the contents _mean_, while the CSS indicates how the contents should _look_. Web programmers refer to this as *semantic markup* — using markup to indicate meaning, not just appearance.\n\nFor example, if we place some text inside an `em` element, this is our way of indicating that this text should be emphasized _in some way_. But to a program that's reading the page aloud to the user, it won't use italics; it will use tone of voice. And even in a page that _is_ displayed to the user, you might want it to be emphasized using color or another property, instead of with italics.\n\nIn fact, why don't you give that a try. In the workspace below, you'll find some text that uses a bunch of `em` elements. Apply a CSS ruleset to these that makes them red and bold, but _not_ italic!\n\n**Hint:** You'll need to look up what CSS property and value you can use to remove the italics.",
              "instructor_notes": ""
            },
            {
              "id": 671303,
              "key": "25dad486-6fad-480d-a835-1723da6d4b1a",
              "title": null,
              "semantic_type": "WorkspaceAtom",
              "is_public": true,
              "workspace_id": "viewSyxZ4feoMm",
              "pool_id": "webterminal",
              "view_id": "html-live-H1bEMxizX",
              "gpu_capable": false,
              "configuration": {
                "id": "reserved",
                "blueprint": {
                  "conf": {
                    "disk": null,
                    "openFiles": [
                      "/home/workspace/meaning.html",
                      "/home/workspace/style.css"
                    ],
                    "showFiles": false,
                    "allowClose": false,
                    "showEditor": true,
                    "allowSubmit": false,
                    "autoRefresh": true,
                    "previewFile": "/home/workspace/meaning.html"
                  },
                  "kind": "html-live"
                },
                "workspaceId": "reserved"
              },
              "starter_files": null
            },
            {
              "id": 671304,
              "key": "c94ca00d-17b5-49d2-a50b-6a5146f1419c",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "<div style=\"background-color: #a4e4f5;\">\n## ⚠️ Spoiler alert!\n\n**Our solution is below.** You'll learn more effectively if you give the exercise a strong effort before comparing your code with ours!\n</div>\n----",
              "instructor_notes": ""
            },
            {
              "id": 671305,
              "key": "617cd358-1ab1-49da-b566-c29268e70b53",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Solution\n\nHere's what our stylesheet ended up looking like:\n\n```css\nem {\n  font-weight: bold;\n  color: red;\n  font-style: normal;\n}\n```\n\nNotice how there were a ton of `em` elements, but you only needed to add the style ruleset in one place to change the appearance of _all_ of that content. This is one of the advantages of separating the structure and  **meaning** of the content from the **style** of the content.",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 668611,
          "key": "929bf3ee-f7a7-4dde-a9ac-7b380095e6bd",
          "title": "Practice — Containers (1/2)",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "929bf3ee-f7a7-4dde-a9ac-7b380095e6bd",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 668612,
              "key": "752c5889-013c-4544-9dbe-baae039018aa",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Practice — Containers (1/2)\n\nEarlier, we saw that we could put boxes inside other boxes. If those boxes are `div` elements, then we simply nest the `div` elements inside one another:\n\n```html\n<div>\n  <div>\n  </div>\n</div>\n```\n\nOne reason to nest boxes like this is so that you can use one of the boxes as a _container_ for the other boxes. To get an idea of why this would be useful, let's take a look at an example.\n\nIn the workspace below, you'll find three boxes stacked vertically (notice that they're currently _not_ inside a container). You'll also see that there's a linked stylesheet, and that we've styled the boxes using some different classes.\n\nSuppose that we want to get all three of the boxes to stay in a vertical stack, but move over to the right side. How can we do this?\n\nWell, first let's try this: Add `float:right;` to the `.box` class, so that the boxes float on the right side of the page. Then answer the questions after the workspace.",
              "instructor_notes": ""
            },
            {
              "id": 668613,
              "key": "fbf86702-81f5-42ab-be22-3f3d2487bf47",
              "title": null,
              "semantic_type": "WorkspaceAtom",
              "is_public": true,
              "workspace_id": "view2cafc314",
              "pool_id": "webterminal",
              "view_id": "2cafc314-dfb5-4247-ba92-9fec0f00d748",
              "gpu_capable": false,
              "configuration": {
                "id": "reserved",
                "blueprint": {
                  "conf": {
                    "disk": null,
                    "openFiles": [
                      "/home/workspace/containers.html",
                      "/home/workspace/containers_style.css"
                    ],
                    "showFiles": false,
                    "allowClose": false,
                    "showEditor": true,
                    "allowSubmit": false,
                    "autoRefresh": true,
                    "previewFile": "/home/workspace/containers.html"
                  },
                  "kind": "html-live"
                },
                "workspaceId": "reserved"
              },
              "starter_files": null
            },
            {
              "id": 668614,
              "key": "f75141f6-1ee6-457a-a43d-051510430fb4",
              "title": "",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "f75141f6-1ee6-457a-a43d-051510430fb4",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "When you add `float:right;` to the `.box` class, what happens?",
                "answers": [
                  {
                    "id": "a1530456460504",
                    "text": "The boxes stay in the same arrangement (stacked vertically), but move over to the right.",
                    "is_correct": false
                  },
                  {
                    "id": "a1530456523451",
                    "text": "The boxes stay in the same arrangement (stacked vertically) and stay in the same location (on the left).",
                    "is_correct": false
                  },
                  {
                    "id": "a1530456524146",
                    "text": "The boxes move to the right, but are now arranged in a horizontal row.",
                    "is_correct": true
                  }
                ]
              }
            },
            {
              "id": 668615,
              "key": "8d516590-7f15-42d4-b06b-0b47f92ab4df",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "On the next page, we'll see how this behavior changes if we first put the three boxes inside a container `div`.",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 668616,
          "key": "b84594ed-9d0b-4e4b-892e-28c0db1aee8e",
          "title": "Practice — Containers (2/2)",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "b84594ed-9d0b-4e4b-892e-28c0db1aee8e",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 668617,
              "key": "4d3e6648-1614-4e58-a1b0-47cf45fa58c0",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Practice — Containers (2/2)\n\nOK, so trying to float the boxes on the right individually didn't do what we wanted—they ended up in a horizontal row, rather than staying in a vertical stack.\n\nTo solve this, we can put the three boxes inside a fourth box. By wrapping them in a container like this, we can then move the container around without changing the arrangement of the boxes inside.",
              "instructor_notes": ""
            },
            {
              "id": 668620,
              "key": "ef6fba31-a6c7-417c-a42d-4232efd8c44d",
              "title": "",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "ef6fba31-a6c7-417c-a42d-4232efd8c44d",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "tasks": [
                "Remove the `float:right;` rule from the `.box` class, so that the boxes go back to a vertical arrangement.",
                "Nest the `div` elements for the three boxes inside a fourth `div` (this fourth `div` is the \"container\").",
                "Create a class for the container. We called ours `.container`, but you can use whatever name you like.",
                "Float the container (with the three boxes inside of it) to the right."
              ],
              "positive_feedback": "**Nice work!**",
              "video_feedback": null,
              "description": ""
            },
            {
              "id": 668621,
              "key": "050ff80b-590b-4b58-981f-b3f36470be2d",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "As usual, if you get stuck, you can find our code below the workspace.",
              "instructor_notes": ""
            },
            {
              "id": 668618,
              "key": "76bb477a-7fd7-46bd-9e2c-39398c14989e",
              "title": null,
              "semantic_type": "WorkspaceAtom",
              "is_public": true,
              "workspace_id": "view2cafc314",
              "pool_id": "webterminal",
              "view_id": "d8ff1630-5596-4bec-8a4c-2b174d4adbb0",
              "gpu_capable": false,
              "configuration": {
                "id": "reserved",
                "blueprint": {
                  "conf": {
                    "disk": null,
                    "openFiles": [
                      "/home/workspace/containers.html",
                      "/home/workspace/containers_style.css"
                    ],
                    "showFiles": false,
                    "allowClose": false,
                    "showEditor": true,
                    "allowSubmit": false,
                    "autoRefresh": true,
                    "previewFile": "/home/workspace/containers.html"
                  },
                  "kind": "html-live"
                },
                "workspaceId": "reserved"
              },
              "starter_files": null
            },
            {
              "id": 672452,
              "key": "810aa0f1-a58d-45d5-8466-245f6ccd146b",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "<div style=\"background-color: #a4e4f5;\">\n## ⚠️ Spoiler alert!\n**Our solution is below.** You'll learn more effectively if you give the exercise a strong effort before comparing your code with ours!\n</div>\n----\n",
              "instructor_notes": ""
            },
            {
              "id": 668619,
              "key": "d9a986ff-bef3-4375-9a96-056d613c874c",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "Code for **container.html**:\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <title>Containers</title>\n    <link rel=\"stylesheet\" href=\"container_style.css\">\n  </head>\n  <body>\n    <div class=\"container\">\n      <div class=\"box red\">red</div>\n      <div class=\"box green\">green</div>\n      <div class=\"box yellow\">yellow</div>\n    </div>\n  </body>\n</html>\n```\n\nCode for **container_style.css**:\n\n```css\n.container{\n  float: right;\n}\n\n.box{\n  width: 100px;\n  height: 100px;\n  text-align: center;\n  font-size: 30px;\n  font-weight: bold;\n  font-family: sans-serif;\n}\n\n.red{\n  background-color: red;\n}\n\n.green{\n  background-color: green;\n}\n\n.yellow{\n  background-color: yellow;\n}\n```",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 408616,
          "key": "63d7c14e-8255-4ed5-97e2-9a7dff77e59b",
          "title": "Flexbox",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "63d7c14e-8255-4ed5-97e2-9a7dff77e59b",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 630421,
              "key": "f0032207-4ed5-49b5-8e5e-8fc6524eb7a0",
              "title": "Intro to CSS: Flexbox",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "flANhTWKrQg",
                "china_cdn_id": "flANhTWKrQg.mp4"
              }
            },
            {
              "id": 668623,
              "key": "f430ff56-f4d5-490a-91dd-4ea0b139080f",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "In the workspace below, you'll find all of the code that Kelly started with in the video. Go ahead and try applying the two flexbox properties that Kelly demonstrated (`display` and `flex-wrap`).\n\nNote that these get added to the _container_ element, not the inner boxes.\n\nYou should end up with a horizontal row of boxes that wraps when the browser window is resized.",
              "instructor_notes": ""
            },
            {
              "id": 668622,
              "key": "68f61153-25a1-4078-878a-9c2d7a77ce8a",
              "title": null,
              "semantic_type": "WorkspaceAtom",
              "is_public": true,
              "workspace_id": "view9c552a43",
              "pool_id": "webterminal",
              "view_id": "9c552a43-30e5-4705-a28c-25381015d223",
              "gpu_capable": false,
              "configuration": {
                "id": "reserved",
                "blueprint": {
                  "conf": {
                    "disk": null,
                    "openFiles": [
                      "/home/workspace/flexbox.html",
                      "/home/workspace/flexbox.css"
                    ],
                    "showFiles": false,
                    "allowClose": false,
                    "showEditor": true,
                    "allowSubmit": false,
                    "autoRefresh": true,
                    "previewFile": "/home/workspace/flexbox.html"
                  },
                  "kind": "html-live"
                },
                "workspaceId": "reserved"
              },
              "starter_files": null
            },
            {
              "id": 629684,
              "key": "1c15f945-3eef-436d-93d1-12429ca05125",
              "title": "Try flexbox!",
              "semantic_type": "TaskListAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "1c15f945-3eef-436d-93d1-12429ca05125",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "tasks": [
                "Read the \"Basic concepts of flexbox\" documentation.",
                "Try applying flexbox to your own page!"
              ],
              "positive_feedback": "Cool! Share what you've learned with a friend.",
              "video_feedback": null,
              "description": "Take a look at this documentation for the flexible box layout (aka \"flexbox\"):\nhttps://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Flexible_Box_Layout/Using_CSS_flexible_boxes\n\nThen try applying flexbox to one of your own HTML pages. See if you can make a two-column layout!"
            }
          ]
        },
        {
          "id": 668628,
          "key": "63953776-1cb1-401c-af87-f48daa3450be",
          "title": "Practice — Flexbox (1/2)",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "63953776-1cb1-401c-af87-f48daa3450be",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 668632,
              "key": "fc60aaae-1473-4f07-8eb7-c7197d9175c9",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Practice — Flexbox (1/2)\n\nWhen using flexbox, it's important to understand how the size of the container element affects the layout of the boxes that are inside of it.\n\nYou may have noticed that in Kelly's code, the width of the `.container` class is set to `100%`. That means the container will be as wide as whatever it's inside—in this case, the container is inside the `body` element of the page, so it will take up the full width of the page.\n\nTo see this more easily, we can add a border to the container class.\n\nIn the workspace below, add `border: 5px solid black` to the `.container` class.",
              "instructor_notes": ""
            },
            {
              "id": 668630,
              "key": "35c929ab-93f5-4736-901e-b1d099c4e52c",
              "title": null,
              "semantic_type": "WorkspaceAtom",
              "is_public": true,
              "workspace_id": "view9c552a43",
              "pool_id": "webterminal",
              "view_id": "c7e72cf4-c1ab-4037-aed4-53ed654e0c4c",
              "gpu_capable": false,
              "configuration": {
                "id": "reserved",
                "blueprint": {
                  "conf": {
                    "disk": null,
                    "openFiles": [
                      "/home/workspace/flexbox.html",
                      "/home/workspace/flexbox.css"
                    ],
                    "showFiles": false,
                    "allowClose": false,
                    "showEditor": true,
                    "allowSubmit": false,
                    "autoRefresh": true,
                    "previewFile": "/home/workspace/flexbox.html"
                  },
                  "kind": "html-live"
                },
                "workspaceId": "reserved"
              },
              "starter_files": null
            },
            {
              "id": 668633,
              "key": "4d34b32b-4418-4c67-9b71-17e2c1c8e89c",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "Now that we can see the size of the container element, let's try changing the width.",
              "instructor_notes": ""
            },
            {
              "id": 668636,
              "key": "0f1ed9e0-92c5-41c9-8a85-2b9d161d7b66",
              "title": "",
              "semantic_type": "RadioQuizAtom",
              "is_public": true,
              "instructor_notes": null,
              "user_state": {
                "node_key": "0f1ed9e0-92c5-41c9-8a85-2b9d161d7b66",
                "completed_at": null,
                "last_viewed_at": null,
                "unstructured": null
              },
              "question": {
                "prompt": "Currently the width is set to 100%. Try changing it to 200 pixels (`200px`). What happens?",
                "answers": [
                  {
                    "id": "a1530462466687",
                    "text": "The first two boxes stay where they are, but the third box wraps to the second line.",
                    "is_correct": true
                  },
                  {
                    "id": "a1530462635391",
                    "text": "All three boxes stay where they are (in a single horizontal line).",
                    "is_correct": false
                  },
                  {
                    "id": "a1530462657478",
                    "text": "All three boxes stay where they are (in a single horizontal line) and resize (becoming narrower).",
                    "is_correct": false
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 668607,
          "key": "d334e8d0-c8f0-4de2-9a6c-7e6379aba599",
          "title": "Practice — Flexbox (2/2)",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "d334e8d0-c8f0-4de2-9a6c-7e6379aba599",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 668608,
              "key": "178f3ed2-a379-4921-b2b1-a3a104a55d6f",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Practice — Flexbox (2/2)\n\nLet's get some more practice with flexbox. Your job here is to replicate this checkerboard design:",
              "instructor_notes": ""
            },
            {
              "id": 668640,
              "key": "c9f64c8f-b0e1-4d44-8aa8-606ec3a21cf5",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/July/5b3905d6_flexbox-checkerboard/flexbox-checkerboard.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/c9f64c8f-b0e1-4d44-8aa8-606ec3a21cf5",
              "caption": "",
              "alt": "A four-square checkerboard, with two red squares and two black squares.",
              "width": 216,
              "height": 216,
              "instructor_notes": null
            },
            {
              "id": 668641,
              "key": "f88bfc73-f8f8-435d-a12a-c14f2101766f",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "We've given you a little starter code, but it's up to you to create all the boxes and add the correct CSS.\n\nThis is very similar to the code we just went over on the last page, so if you get stuck you can always look back at that (or check out our solution code below).",
              "instructor_notes": ""
            },
            {
              "id": 668609,
              "key": "42d8f987-d8a4-4fdf-a4f3-ed6d3a5a313e",
              "title": null,
              "semantic_type": "WorkspaceAtom",
              "is_public": true,
              "workspace_id": "view4dfd0f39",
              "pool_id": "webterminal",
              "view_id": "4dfd0f39-3a08-42fc-8d6c-0976a4ce683f",
              "gpu_capable": false,
              "configuration": {
                "id": "reserved",
                "blueprint": {
                  "conf": {
                    "disk": null,
                    "openFiles": [
                      "/home/workspace/flexbox_practice.html",
                      "/home/workspace/flexbox_practice_style.css"
                    ],
                    "showFiles": false,
                    "allowClose": false,
                    "showEditor": true,
                    "allowSubmit": false,
                    "autoRefresh": true,
                    "previewFile": "/home/workspace/flexbox_practice.html"
                  },
                  "kind": "html-live"
                },
                "workspaceId": "reserved"
              },
              "starter_files": null
            },
            {
              "id": 670975,
              "key": "e4188ab5-0d53-4183-a62d-e9a3123ea242",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "<div style=\"background-color: #a4e4f5;\">\n## ⚠️ Spoiler alert!\n\n**Our solution is below.** You'll learn more effectively if you give the exercise a strong effort before comparing your code with ours!\n</div>\n----",
              "instructor_notes": ""
            },
            {
              "id": 668627,
              "key": "6c550aa7-3326-4dcc-91bf-fd18f40b487c",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Solution\n\nCode for **flexbox_practice.html**:\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <title>Flexbox practice!</title>\n    <link rel=\"stylesheet\" href=\"flexbox_practice_style.css\">\n  </head>\n  <body>\n    <div class=\"container\">\n      <div class=\"box red\"></div>\n      <div class=\"box black\"></div>\n      <div class=\"box black\"></div>\n      <div class=\"box red\"></div>\n    </div>\n  </body>\n</html>\n```\n\nCode for **flexbox_practice_style.css**:\n\n```css\n.container{\n  width: 200px;\n  border: 5px solid black;\n  display: flex;\n  flex-wrap: wrap;\n}\n\n.box{\n  width: 100px;\n  height: 100px;\n}\n\n.red{\n  background-color: red;\n}\n\n.black{\n  background-color: black;\n}\n```",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 408619,
          "key": "440efd5f-8805-4a8f-a5f7-3ada43abd339",
          "title": "CSS syntax review",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "440efd5f-8805-4a8f-a5f7-3ada43abd339",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": {
            "files": [
              {
                "name": "IPND Reference Sheet - CSS Syntax",
                "uri": "https://video.udacity-data.com/topher/2018/June/5b340432_ipnd-reference-sheet-css-syntax/ipnd-reference-sheet-css-syntax.pdf"
              }
            ],
            "google_plus_link": null,
            "career_resource_center_link": null,
            "coaching_appointments_link": null,
            "office_hours_link": null,
            "aws_provisioning_link": null
          },
          "atoms": [
            {
              "id": 629964,
              "key": "18346cb7-be70-4244-a143-c8f7518ef20b",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "# CSS syntax review\n\nYou've seen many examples of CSS syntax in this lesson. Here's a review!\n\nThe basic syntax of a CSS ruleset has two parts: a _selector_, and a group of _rules_, each of which consists of a _property_ name and the _value_ of that property.\n```\nselector { \n    property: value;\n}\n```\nThe selector is written first, and then the rules are written inside `{` curly brackets `}`. Each rule's property and value are separated by a `:` colon, and the rule always ends with a `;` semicolon.\n\n----",
              "instructor_notes": ""
            },
            {
              "id": 629970,
              "key": "df11de18-4e7c-4802-bd6c-5a959d43a424",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Selectors\nThe selector indicates which HTML elements the rule will apply to. You've seen a few different sorts of selector: the _element_ selector, the _class_ selector, the _id_ selector, and the _descendant_ selector.\n\nA **type selector** applies to every HTML element of a particular type, such as `p` or `em`. This selector will apply to every `p` element:\n```css\np {\n    color: blue;\n}\n```\nA **class selector** applies to all elements that share a `class` attribute. The class selector is written starting with a `.` (dot):\n```css\n.narrow {\n    width: 20%;\n}\n```\nIn order for the class selector to apply, there have to be HTML elements on the page that use that `class` attribute:\n```html\n<div class=\"narrow\">\n   This will get the 20% width.\n</div>\n```\nAn **id selector** applies to an element with a particular `id` attribute. The id selector is written starting with a `#` sign:\n```css\n#sidebar {\n    background-color: lightgray;\n    width: 20%;\n    float: left;\n}\n```\nWithin an HTML page, there should be only one element with that `id` attribute value.\n```html\n<div id=\"sidebar\">\n    This will get the background, width, and float values from the sidebar CSS rule.\n</div>\n```\nA **descendant selector** is a compound of two simpler selectors. It applies only to an inner element that is a descendant (on the DOM tree) of a particular outer element.\n```css\nli a {\n    color: pink;\n}\n```\nThe above selector will apply to `a` elements (hyperlinks), but only those inside an `li` element (list item):\n```html\n<ul>\n    <li> <a href=\"https://www.udacity.com/\"> Pink Udacity </a>\n</ul>\n<p> <a href=\"https://www.google.com/\"> Non-pink Google </a>\n```\n----",
              "instructor_notes": ""
            },
            {
              "id": 629973,
              "key": "c44a2698-1cd9-4ae9-919c-03c540b17d89",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Rules\n\nA ruleset can be composed of several rules, each of which applies a particular _value_ to a _property_ of the selected elements. Properties are things such as the color, position, size, and shape of the element.\n\n```css\nh1 { color: red; font-size: larger; }\n```\nThis rule applies the value `red` to the property `color`, and the value `larger` to the property `font-size`.\n\nSome properties allow values that are more than one word long, such as the `font` property:\n\n```css\nbody { font: 12pt bold Consolas, Monaco, monospace; }\n```\n### Font stacks\nThe `font-family` and `font` properties allow you to specify a _font stack_, a list of font options separated by `,` commas. The browser will use the first font in the stack that is available on the user's system. Usually the last font in the stack should be a generic font name, such as `serif`, `sans-serif`, or `monospace`.\n\n### Colors\nThere are several ways to specify a color in CSS. Three common ones are hex codes, `rgb` triples, and color names.\n```css\n.orange {\n    color: #ff9900;\n}\n.pink {\n    color: rgb(100%, 80%, 80%);\n}\n.chartreuse {\n    color: chartreuse;\n}\n```\n----",
              "instructor_notes": ""
            },
            {
              "id": 629992,
              "key": "41bb3867-0070-46f8-a1a3-8fab6e2a0ec0",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Flexbox\n\nTo change the browser's layout from the default document-based layout to the flexible box layout, set `display: flex` on a container element (one that has other elements inside it).\n```css\n.outer {\n    display: flex;\n    border: 2px dotted orange;\n}\n.inner {\n    width: 100px;\n    border: 1px solid black;\n    padding: 10px;\n}\n```\nFlexbox can be heavily customized! The above will cause `.inner` HTML elements to be packed in a row within the `.outer` element:\n```html\n<div class=\"outer\">\n   <p class=\"inner\"> I am a box. </p>\n   <p class=\"inner\"> I am another box. </p>\n   <p class=\"inner\"> Hey, I am a box, too! Boxes <strong>rock</strong>. </p>\n   <p class=\"inner\"> Let's be boxes together. Yay, flexbox. </p>\n</div>\n```\n<div class=\"outer\" style=\"display: flex; border: 2px dotted orange\">\n   <p class=\"inner\" style=\"width:100px; border:1px solid black; padding: 10px;\"> I am a box. </p>\n   <p class=\"inner\" style=\"width:100px; border:1px solid black; padding: 10px;\"> I am another box. </p>\n   <p class=\"inner\" style=\"width:100px; border:1px solid black; padding: 10px;\"> Hey, I am a box, too! Boxes <strong>rock</strong>. </p>\n   <p class=\"inner\" style=\"width:100px; border:1px solid black; padding: 10px;\"> Let's be boxes together. Yay, flexbox.</p>\n<p></p>\n</div>\n",
              "instructor_notes": ""
            },
            {
              "id": 667212,
              "key": "3ccbce01-b8ee-4d59-9b1d-58a17637389e",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "**Download this review as a PDF by clicking on the `IPND Reference Sheet - CSS Syntax` link below!**",
              "instructor_notes": ""
            }
          ]
        },
        {
          "id": 408617,
          "key": "25f32ac8-36d1-40e1-a3d4-27ec95212559",
          "title": "Replicating a design",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "25f32ac8-36d1-40e1-a3d4-27ec95212559",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 630419,
              "key": "40ef1758-237e-4c73-bbaa-737b7ef49184",
              "title": "Intro to CSS: Replicating A Design",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "vjr4CPtsmnk",
                "china_cdn_id": "vjr4CPtsmnk.mp4"
              }
            },
            {
              "id": 631205,
              "key": "ba6abafc-07de-46e8-a881-3038b3e9c541",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "## Exercise: Replicating a design\n\nIn the workspace below, try replicating the design of the tic-tac-toe board shown in the video. There's also a copy of the image below the workspace.\n\nTo do this, add CSS rules to the file `tictactoe.css`. You don't need to edit the HTML file at all!\n\n**Hint:** The `ul` and the `li` elements have boxes just like the `div` elements we've been working with. And you can think about the `ul` as a _container_ for the `li` elements.\n\nAlso, you'll probably find that you need to look up a few CSS properties that you haven't yet seen (such as how to remove the bullets from a list). But you should be able to find everything you need pretty easily.",
              "instructor_notes": ""
            },
            {
              "id": 630654,
              "key": "c480aa1b-e4e6-4bf8-a4ab-cd3fac69da1f",
              "title": null,
              "semantic_type": "WorkspaceAtom",
              "is_public": true,
              "workspace_id": "view0c9c076f",
              "pool_id": "webterminal",
              "view_id": "0c9c076f-d4fa-4cf8-9b2e-06e9366981e8",
              "gpu_capable": false,
              "configuration": {
                "id": "reserved",
                "blueprint": {
                  "conf": {
                    "disk": null,
                    "openFiles": [
                      "/home/workspace/lesson_two/tictactoe/tictactoe.css",
                      "/home/workspace/lesson_two/tictactoe/tictactoe.html"
                    ],
                    "showFiles": false,
                    "allowClose": false,
                    "showEditor": true,
                    "allowSubmit": false,
                    "autoRefresh": true,
                    "previewFile": "/home/workspace/lesson_two/tictactoe/tictactoe.html"
                  },
                  "kind": "html-live"
                },
                "workspaceId": "reserved"
              },
              "starter_files": null
            },
            {
              "id": 668582,
              "key": "1fb6c8ba-8b01-4f0e-8d21-6d335ea096af",
              "title": null,
              "semantic_type": "ImageAtom",
              "is_public": true,
              "url": "https://video.udacity-data.com/topher/2018/July/5b382108_tic-tac-toe/tic-tac-toe.png",
              "non_google_url": "https://s3.cn-north-1.amazonaws.com.cn/u-img/1fb6c8ba-8b01-4f0e-8d21-6d335ea096af",
              "caption": "",
              "alt": "A Tic-Tac-Toe game in progress.",
              "width": 300,
              "height": 250,
              "instructor_notes": null
            },
            {
              "id": 671035,
              "key": "b1359c91-fc13-487a-9689-83a29f2251d3",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "<div style=\"background-color: #a4e4f5;\">\n## ⚠️ Spoiler alert!\n\n**Our solution is below.** You'll learn more effectively if you give the exercise a strong effort before comparing your code with ours!\n</div>\n----",
              "instructor_notes": ""
            },
            {
              "id": 671037,
              "key": "a4daf78c-46a9-421c-892b-aa0aab02fbbf",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "In these videos, Kelly and Karl describe the ways they wrote the `tictactoe.css` file.",
              "instructor_notes": ""
            },
            {
              "id": 671042,
              "key": "feb865e2-fc9e-4285-8bd2-ac7b20cb91fe",
              "title": "Intro to CSS: Replicating A Design, One",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "NalsdNe4Bzo",
                "china_cdn_id": "NalsdNe4Bzo.mp4"
              }
            },
            {
              "id": 759717,
              "key": "487b0984-3f5e-46fe-b59f-b566fbae522a",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": "**Note:** In this next video, the code editor shows `font-size: 40px`, but Kelly's code should actually have said `font-size: 80px` (the `40px` font is too small and won't appear to be vertically centered).",
              "instructor_notes": ""
            },
            {
              "id": 671041,
              "key": "ab9731ec-9b0f-4fd0-8ee9-1760ceb2693a",
              "title": "Intro to CSS: Replicating A Design, Two",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "JwcoSImKvo8",
                "china_cdn_id": "JwcoSImKvo8.mp4"
              }
            }
          ]
        },
        {
          "id": 408618,
          "key": "875af723-f0a1-472a-9cc8-511ae96408ef",
          "title": "Summary",
          "semantic_type": "Concept",
          "is_public": true,
          "user_state": {
            "node_key": "875af723-f0a1-472a-9cc8-511ae96408ef",
            "completed_at": null,
            "last_viewed_at": null,
            "unstructured": null
          },
          "resources": null,
          "atoms": [
            {
              "id": 664430,
              "key": "7e8740ee-56ed-4426-9f2d-110db571b9fa",
              "title": null,
              "semantic_type": "TextAtom",
              "is_public": true,
              "text": " ",
              "instructor_notes": ""
            },
            {
              "id": 630418,
              "key": "451d6fdc-d918-412e-92c2-eeff4cf8f0f6",
              "title": "Intro to CSS: Summary",
              "semantic_type": "VideoAtom",
              "is_public": true,
              "instructor_notes": "",
              "video": {
                "youtube_id": "8vk_BHOsEng",
                "china_cdn_id": "8vk_BHOsEng.mp4"
              }
            }
          ]
        }
      ]
    }
  },
  "_deprecated": [
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    },
    {
      "name": "non_google_url",
      "reason": "(2016/8/18) Not sure, ask i18n team for reason"
    }
  ]
}