{
  "id": 2261,
  "project_id": 301,
  "upload_types": [
    "repo",
    "zip"
  ],
  "file_filter_regex": "\\A(?!(((.*/)?(__MACOSX|\\.git|node_modules|bower_components|jspm_packages|\\.idea|build|.ipynb_checkpoints|\\.Trash-0|logs)(\\Z|/))))((.*\\.(css|docx|gradle|htm|html|java|js|markdown|md|pdf|py|rmd|rst|sql|swift|txt|xml|yaml|yml)\\Z)|((.*/)?(README|Readme|readme|Makefile)\\Z))",
  "nomination_eligible": false,
  "stand_out": "* Create a deeper model and use it to generate larger (say 128x128) images of faces. \n* Read existing literature to see if you can use padding and normalization techniques to generate higher-resolution images.\n* Implement a learning rate that evolves over time as they did in this [CycleGAN Github repo](https://github.com/junyanz/pytorch-CycleGAN-and-pix2pix).\n* See if you can extend this model and use a CycleGAN to learn to swap different kinds of faces. For example, learn a mapping between faces that have and do not have eye/lip makeup, as they did [in this paper](https://gfx.cs.princeton.edu/pubs/Chang_2018_PAS/Chang-CVPR-2018.pdf).",
  "hide_criteria": false,
  "created_at": "2018-08-23T22:44:57.963Z",
  "updated_at": "2019-06-24T17:08:13.705Z",
  "hashtag": "",
  "max_upload_size_mb": 500,
  "estimated_sla": null,
  "project_assistant_enabled": false,
  "checkmate_enabled": false,
  "checkmate_metadata": null,
  "available_for_cert_project": false,
  "classroom_node_id": 696469,
  "classroom_project_key": "16873774-738d-4eab-9694-a8285f0e17cf",
  "language": "en-us",
  "ndkeys": [
    "nd101",
    "nd101-mena-connect",
    "nd101-ent"
  ],
  "coursekeys": [],
  "sections": [
    {
      "id": 5132,
      "name": "Required Files and Tests",
      "created_at": "2018-11-11T00:36:59.242Z",
      "updated_at": "2018-11-11T00:38:29.905Z",
      "deleted_at": null,
      "position": 0,
      "rubric_id": 2261,
      "rubric_items": [
        {
          "id": 14915,
          "section_id": 5132,
          "passed_description": "The project submission contains the project notebook, called “dlnd_face_generation.ipynb”.",
          "exceeded_description": null,
          "created_at": "2018-11-11T00:37:06.262Z",
          "updated_at": "2018-11-11T00:38:20.234Z",
          "deleted_at": null,
          "optional": false,
          "position": 0,
          "criteria": "Have all project files been included with the submission?",
          "exceedable": false
        },
        {
          "id": 14916,
          "section_id": 5132,
          "passed_description": "All the unit tests in project have passed.",
          "exceeded_description": null,
          "created_at": "2018-11-11T00:38:30.075Z",
          "updated_at": "2018-11-11T00:38:57.463Z",
          "deleted_at": null,
          "optional": false,
          "position": 1,
          "criteria": "Have all the unit tests in the project passed?",
          "exceedable": false
        }
      ]
    },
    {
      "id": 5133,
      "name": "Data Loading and Processing",
      "created_at": "2018-11-11T00:39:24.965Z",
      "updated_at": "2018-11-11T00:39:33.772Z",
      "deleted_at": null,
      "position": 1,
      "rubric_id": 2261,
      "rubric_items": [
        {
          "id": 14917,
          "section_id": 5133,
          "passed_description": "The function `get_dataloader` should transform image data into resized, Tensor image types and return a DataLoader that batches all the training data into an appropriate size.",
          "exceeded_description": null,
          "created_at": "2018-11-11T00:39:33.941Z",
          "updated_at": "2018-11-11T08:48:07.897Z",
          "deleted_at": null,
          "optional": false,
          "position": 0,
          "criteria": "Has `get_dataloader` been implemented?",
          "exceedable": false
        },
        {
          "id": 14918,
          "section_id": 5133,
          "passed_description": "Pre-process the images by creating a `scale` function that scales images into a given pixel range. This function should be used later, in the training loop.",
          "exceeded_description": null,
          "created_at": "2018-11-11T00:44:10.554Z",
          "updated_at": "2018-11-11T00:45:48.310Z",
          "deleted_at": null,
          "optional": false,
          "position": 1,
          "criteria": "Has the `scale` function been implemented?",
          "exceedable": false
        }
      ]
    },
    {
      "id": 5134,
      "name": "Build the Adversarial Networks",
      "created_at": "2018-11-11T00:46:51.564Z",
      "updated_at": "2018-11-11T00:47:05.471Z",
      "deleted_at": null,
      "position": 2,
      "rubric_id": 2261,
      "rubric_items": [
        {
          "id": 14919,
          "section_id": 5134,
          "passed_description": "The Discriminator class is implemented correctly; it outputs one value that will determine whether an image is real or fake.",
          "exceeded_description": null,
          "created_at": "2018-11-11T00:47:05.687Z",
          "updated_at": "2018-11-11T00:51:15.064Z",
          "deleted_at": null,
          "optional": false,
          "position": 0,
          "criteria": "Does the **discriminator** discriminate between real and fake mages?",
          "exceedable": false
        },
        {
          "id": 14920,
          "section_id": 5134,
          "passed_description": "The Generator class is implemented correctly; it outputs an image of the same shape as the processed training data.",
          "exceeded_description": null,
          "created_at": "2018-11-11T00:49:42.182Z",
          "updated_at": "2018-11-11T00:59:09.962Z",
          "deleted_at": null,
          "optional": false,
          "position": 1,
          "criteria": "Does the **generator** generate fake mages?",
          "exceedable": false
        },
        {
          "id": 14952,
          "section_id": 5134,
          "passed_description": "This function should initialize the weights of any convolutional or linear layer with weights taken from a normal distribution with a mean = 0 and standard deviation = 0.02.",
          "exceeded_description": null,
          "created_at": "2018-11-11T08:48:19.556Z",
          "updated_at": "2018-11-11T08:52:25.310Z",
          "deleted_at": null,
          "optional": false,
          "position": 2,
          "criteria": "Is the weight initialization function implemented correctly?",
          "exceedable": false
        }
      ]
    },
    {
      "id": 5135,
      "name": "Optimization Strategy",
      "created_at": "2018-11-11T00:51:36.544Z",
      "updated_at": "2018-11-11T00:51:49.209Z",
      "deleted_at": null,
      "position": 3,
      "rubric_id": 2261,
      "rubric_items": [
        {
          "id": 14921,
          "section_id": 5135,
          "passed_description": "The loss functions take in the outputs from a discriminator and return the real or fake loss.",
          "exceeded_description": null,
          "created_at": "2018-11-11T00:51:49.382Z",
          "updated_at": "2018-11-11T00:54:14.625Z",
          "deleted_at": null,
          "optional": false,
          "position": 0,
          "criteria": "Are the `real_loss` and `fake_loss` functions implemented correctly?",
          "exceedable": false
        },
        {
          "id": 14922,
          "section_id": 5135,
          "passed_description": "There are optimizers for updating the weights of the discriminator and generator. These optimizers should have appropriate hyperparameters.",
          "exceeded_description": null,
          "created_at": "2018-11-11T00:54:23.162Z",
          "updated_at": "2018-11-11T00:55:39.847Z",
          "deleted_at": null,
          "optional": false,
          "position": 1,
          "criteria": "Are appropriate optimizers defined for the networks?",
          "exceedable": false
        }
      ]
    },
    {
      "id": 5136,
      "name": "Training and Results",
      "created_at": "2018-11-11T00:56:00.301Z",
      "updated_at": "2018-11-11T00:56:07.118Z",
      "deleted_at": null,
      "position": 4,
      "rubric_id": 2261,
      "rubric_items": [
        {
          "id": 14923,
          "section_id": 5136,
          "passed_description": "Real training images should be scaled appropriately. The training loop should alternate between training the discriminator and generator networks.",
          "exceeded_description": null,
          "created_at": "2018-11-11T00:56:07.349Z",
          "updated_at": "2018-11-11T08:56:26.772Z",
          "deleted_at": null,
          "optional": false,
          "position": 0,
          "criteria": "Are all adversarial networks trained correctly?",
          "exceedable": false
        },
        {
          "id": 14924,
          "section_id": 5136,
          "passed_description": "There is not an exact answer here, but the models should be deep enough to recognize facial features and the optimizers should have parameters that help wth model convergence.",
          "exceeded_description": null,
          "created_at": "2018-11-11T01:00:21.349Z",
          "updated_at": "2018-11-11T01:01:50.992Z",
          "deleted_at": null,
          "optional": false,
          "position": 1,
          "criteria": "Do all models and optimizers have reasonable hyperparameters?",
          "exceedable": false
        },
        {
          "id": 14925,
          "section_id": 5136,
          "passed_description": "The project generates realistic faces.  It should be obvious that generated sample images look like faces.",
          "exceeded_description": null,
          "created_at": "2018-11-11T01:01:51.177Z",
          "updated_at": "2018-11-11T01:02:10.975Z",
          "deleted_at": null,
          "optional": false,
          "position": 2,
          "criteria": "Does the project generate realistic faces?",
          "exceedable": false
        },
        {
          "id": 14953,
          "section_id": 5136,
          "passed_description": "The **question** about model improvement is answered.",
          "exceeded_description": null,
          "created_at": "2018-11-11T08:53:29.730Z",
          "updated_at": "2018-11-11T08:54:47.448Z",
          "deleted_at": null,
          "optional": false,
          "position": 3,
          "criteria": "How could your model improve?",
          "exceedable": false
        }
      ]
    }
  ],
  "project": {
    "id": 301,
    "name": "Generate Faces",
    "nanodegree_key": "nd101",
    "is_cert_project": false,
    "audit_project_id": null,
    "hashtag": null,
    "audit_rubric_id": 1144,
    "entitlement_required": false,
    "is_career": false,
    "recruitment_family_id": 1,
    "created_at": "2017-05-02T17:53:27.036Z",
    "updated_at": "2020-05-27T17:00:07.743Z",
    "price": "6.5",
    "ungradeable_price": "3.0",
    "audit_price": null
  }
}