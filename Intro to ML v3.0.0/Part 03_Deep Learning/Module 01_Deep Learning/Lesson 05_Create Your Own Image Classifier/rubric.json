{
  "id": 3077,
  "project_id": 810,
  "upload_types": [
    "repo",
    "zip"
  ],
  "file_filter_regex": "\\A(?!(((.*/)?(__MACOSX|\\.git|node_modules|bower_components|jspm_packages|\\.idea|build|.ipynb_checkpoints|\\.Trash-0|logs)(\\Z|/))))((.*\\.(js|css|py|html|htm|txt|md|markdown|sql|swift|java|ts|gradle|xml|rst|yml|yaml|rmd|pdf|docx|h|H|hh|hxx|h\\+\\+|c|C|cc|cpp|cxx|c\\+\\+|kt)\\Z)|((.*/)?(README|Readme|readme|Makefile)\\Z))",
  "nomination_eligible": false,
  "stand_out": "",
  "hide_criteria": false,
  "created_at": "2020-12-16T20:38:28.401Z",
  "updated_at": "2021-03-19T06:41:25.849Z",
  "hashtag": "",
  "max_upload_size_mb": 500,
  "estimated_sla": null,
  "project_assistant_enabled": false,
  "available_for_cert_project": false,
  "language": "en-us",
  "ndkeys": [
    "nd229-beta",
    "nd999-abe",
    "nd229"
  ],
  "coursekeys": [],
  "is_career": false,
  "sections": [
    {
      "id": 6560,
      "name": "Data Loading and Exploration",
      "created_at": "2021-01-11T22:34:22.474Z",
      "updated_at": "2021-01-11T22:35:06.814Z",
      "deleted_at": null,
      "position": 0,
      "rubric_id": 3077,
      "rubric_items": [
        {
          "id": 18626,
          "section_id": 6560,
          "passed_description": "Torchvision transforms are specified in a list for use in the data loader.\n\nAt a minimum, `.toTensor()` is included to use the `DataLoader` with the neural network.",
          "exceeded_description": null,
          "created_at": "2021-01-11T22:35:07.081Z",
          "updated_at": "2021-01-11T22:41:04.585Z",
          "deleted_at": null,
          "optional": false,
          "position": 0,
          "criteria": "Transform data for use in neural networks.",
          "exceedable": false
        },
        {
          "id": 18627,
          "section_id": 6560,
          "passed_description": "At least one data augmentation technique (rotation, cropping, etc.) is implemented as part of the list of transforms for the `DataLoader`.",
          "exceeded_description": null,
          "created_at": "2021-01-11T22:35:08.396Z",
          "updated_at": "2021-01-11T22:41:04.589Z",
          "deleted_at": null,
          "optional": false,
          "position": 1,
          "criteria": "Augment training data to improve robustness of neural networks.",
          "exceedable": false
        },
        {
          "id": 18628,
          "section_id": 6560,
          "passed_description": "A `DataLoader` object for both train and test sets has been created using the train and test sets loaded from `torchvision`.",
          "exceeded_description": null,
          "created_at": "2021-01-11T22:35:09.373Z",
          "updated_at": "2021-01-11T22:41:04.592Z",
          "deleted_at": null,
          "optional": false,
          "position": 2,
          "criteria": "Use `DataLoader` to feed training data to PyTorch models.",
          "exceedable": false
        },
        {
          "id": 18629,
          "section_id": 6560,
          "passed_description": "Notebook contains code that shows the size and shape of the training data.\n\nAt least one of the images in the test set is printed to the screen using `plt.imshow()`.",
          "exceeded_description": null,
          "created_at": "2021-01-11T22:35:10.115Z",
          "updated_at": "2021-01-11T22:41:04.595Z",
          "deleted_at": null,
          "optional": false,
          "position": 3,
          "criteria": "Explore datasets and describe their properties to set and optimize neural network parameters.",
          "exceedable": false
        }
      ]
    },
    {
      "id": 6561,
      "name": "Model Design and Training",
      "created_at": "2021-01-11T22:34:23.463Z",
      "updated_at": "2021-01-11T22:35:06.820Z",
      "deleted_at": null,
      "position": 1,
      "rubric_id": 3077,
      "rubric_items": [
        {
          "id": 18630,
          "section_id": 6561,
          "passed_description": "A `Model` class is created and implements a `forward` method that outputs a prediction probability for each of the 10 classes using softmax.",
          "exceeded_description": "",
          "created_at": "2021-01-11T22:41:08.461Z",
          "updated_at": "2021-02-05T21:10:05.354Z",
          "deleted_at": null,
          "optional": false,
          "position": 0,
          "criteria": "Use PyTorch to build a neural network for image classification.",
          "exceedable": false
        },
        {
          "id": 18631,
          "section_id": 6561,
          "passed_description": "A loss function that works for classification tasks is specified.",
          "exceeded_description": null,
          "created_at": "2021-01-11T22:41:54.934Z",
          "updated_at": "2021-01-11T22:44:16.016Z",
          "deleted_at": null,
          "optional": false,
          "position": 1,
          "criteria": "Select a loss function for training a classification network.",
          "exceedable": false
        },
        {
          "id": 18632,
          "section_id": 6561,
          "passed_description": "An optimizer from `torch.optim` is used to minimize the loss function.",
          "exceeded_description": null,
          "created_at": "2021-01-11T22:41:56.677Z",
          "updated_at": "2021-01-11T22:44:16.020Z",
          "deleted_at": null,
          "optional": false,
          "position": 2,
          "criteria": "Define an optimizer to minimize loss function and update model parameters for improved accuracy.",
          "exceedable": false
        },
        {
          "id": 18633,
          "section_id": 6561,
          "passed_description": "The training `DataLoader` is used to feed data to the neural network and compute the batch loss.\n\nThe trained model achieves at least 45% accuracy.",
          "exceeded_description": null,
          "created_at": "2021-01-11T22:41:57.644Z",
          "updated_at": "2021-01-11T22:44:16.024Z",
          "deleted_at": null,
          "optional": false,
          "position": 3,
          "criteria": "Train a neural network using PyTorch to achieve a given level of accuracy.",
          "exceedable": false
        },
        {
          "id": 18634,
          "section_id": 6561,
          "passed_description": "The average value of the loss function at each epoch is recorded and plotted after training is complete.",
          "exceeded_description": null,
          "created_at": "2021-01-11T22:44:16.284Z",
          "updated_at": "2021-01-11T22:44:33.673Z",
          "deleted_at": null,
          "optional": false,
          "position": 4,
          "criteria": "Compute and plot average loss to track model performance.",
          "exceedable": false
        }
      ]
    },
    {
      "id": 6562,
      "name": "Model Testing and Evaluation",
      "created_at": "2021-01-11T22:34:25.080Z",
      "updated_at": "2021-01-11T22:35:06.823Z",
      "deleted_at": null,
      "position": 2,
      "rubric_id": 3077,
      "rubric_items": [
        {
          "id": 18635,
          "section_id": 6562,
          "passed_description": "The test `DataLoader` is used to get predictions from the neural network and compare the predictions to the true labels.",
          "exceeded_description": null,
          "created_at": "2021-01-11T22:44:39.615Z",
          "updated_at": "2021-01-11T22:45:18.149Z",
          "deleted_at": null,
          "optional": false,
          "position": 0,
          "criteria": "Use DataLoaders to test the accuracy of a model.",
          "exceedable": false
        },
        {
          "id": 18637,
          "section_id": 6562,
          "passed_description": "The `torch.save()` function is used to save the weights of the trained model.",
          "exceeded_description": null,
          "created_at": "2021-01-11T22:44:40.624Z",
          "updated_at": "2021-01-11T22:45:18.154Z",
          "deleted_at": null,
          "optional": false,
          "position": 1,
          "criteria": "Save trained model parameters for later use.",
          "exceedable": false
        },
        {
          "id": 18636,
          "section_id": 6562,
          "passed_description": "Students explain in no fewer than three sentences how their modelâ€™s accuracy compares to the hypothetical model proposed and make a recommendation on whether to build or buy an object detection solution.",
          "exceeded_description": "",
          "created_at": "2021-01-11T22:44:40.194Z",
          "updated_at": "2021-02-05T21:08:35.266Z",
          "deleted_at": null,
          "optional": false,
          "position": 1,
          "criteria": "Make decisions based on model results.",
          "exceedable": false
        }
      ]
    }
  ],
  "project": {
    "id": 810,
    "name": "Create Your Own Image Classifier 2.0",
    "nanodegree_key": "nd089",
    "is_cert_project": false,
    "audit_project_id": null,
    "hashtag": null,
    "audit_rubric_id": 2899,
    "entitlement_required": false,
    "is_career": false,
    "recruitment_family_id": 1,
    "created_at": "2021-01-12T18:29:52.665Z",
    "updated_at": "2021-04-29T06:43:30.441Z",
    "price": "7.5",
    "ungradeable_price": "3.0",
    "audit_price": "0.0"
  }
}